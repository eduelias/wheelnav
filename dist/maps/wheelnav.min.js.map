{"version":3,"sources":["raphael.icons.js","raphael.js","wheelnav.core.js","wheelnav.parse.js","wheelnav.navItem.js","wheelnav.style.js","wheelnav.pathHelper.js","wheelnav.slicePath.js","wheelnav.sliceTransform.js","wheelnav.spreader.js","wheelnav.marker.js","wheelnav.colorPalettes.js"],"names":["icon","?","i","$","arrowleftalt","arrowalt","!","?2","stopsign","temp","thunder","snow","hail","rain","cloudy","sun","undo","detour","merge","split","fork","fork_alt","exchange","shuffle","refresh","ccw","acw","contract","expand","stop","end","start","ff","rw","play","arrowright","arrowleft","arrowup","arrowdown","arrowleft2","arrowright2","smile2","smile","alarm","clock","stopwatch","history","future","globeAlt2","globeAlt","globe","warning","code","pensil","pen","plus","minus","tshirt","sticker","page2","page","landscape1","landscape2","plugin","bookmark","hammer","users","user","customer","employee","anonymous","skull","mail","picture","bubble","codetalk","talkq","talke","home","lock","unlock","clip","star","staroff","star2","star2off","star3","star3off","chat","quote","gear","smallgear","wrench","wrench2","wrench3","screwdriver","hammerandscrewdriver","magic","download","view","noview","cloud","cloud2","cloudDown","cloudUp","location","loaction2","volume0","volume1","volume2","volume3","bell","mute","key","ruler","power","flag","flag-alt","tag","search","zoomout","zoomin","cross","check","settings","settingsalt","feed","bug","link","calendar","calendar2","picker","no","commandline","photo","printer","export","import","run","magnet","nomagnet","reflecth","reflectv","resize2","rotate","connect","disconnect","folder","man","woman","speaker","people","parent","notebook","diagram","barchart","piechart","linechart","apps","locked","ppt","lab","umbrella","dry","ipad","iphone","jigsaw","lamp","lamp_alt","video","palm","fave","help","crop","biohazard","wheelchair","mic","micmute","imac","pc","cube","fullcube","font","trash","newwindow","dockright","dockleft","dockbottom","docktop","pallete","cart","glasses","package","book","books","icons","list","db","paper","takeoff","landing","plane","phone","hangup","music","roadmap","brush","bucket","terminal","edit","paint","car","taxi","bus","train","scissors","coffee","filter","low-battery","full-battery","charging","ticket","checkbox","checked","inbox","crown","green","bolt","slideshare","twitter","twitterbird","skype","windows","apple","linux","nodejs","jquery","sencha","vim","inkscape","aumade","firefox","ie","ie9","opera","chrome","safari","linkedin","flickr","github","githubalt","raphael","graphael","svg","usb","ethernet","js","dribbble","500px","instagram","android","iOS","hp","gplus","facebook","fitocracy","opensource","glob","current_event","version","has","separator","fun","numsort","a","b","events","n","eve","name","scope","String","l","oldstop","args","Array","prototype","slice","call","arguments","listeners","z","indexed","queue","out","ce","ii","length","push","zIndex","sort","apply","_events","item","items","k","j","jj","nes","names","e","es","concat","f","on","hasOwnProperty","event","attrs","nt","subname","RegExp","test","nts","off","unbind","splice","cur","funcs","once","f2","this","toString","module","exports","define","window","factory","amd","R","first","is","loaded","array","_engine","create","nu","add","pop","paperproto","elements","circle","rect","path","ellipse","text","image","formatrg","g","doc","document","win","oldRaphael","was","Object","Raphael","Paper","ca","customAttributes","supportsTouch","DocumentTouch","S","Str","touchMap","mousedown","mousemove","mouseup","lowerCase","toLowerCase","math","Math","mmax","max","mmin","min","abs","pow","PI","string","objectToString","colourRegExp","_ISURL","isnan","NaN","Infinity","-Infinity","bezierrg","round","toFloat","parseFloat","toInt","parseInt","upperCase","toUpperCase","availableAttrs","_availableAttrs","class","arrow-end","arrow-start","blur","clip-rect","cursor","cx","cy","fill","fill-opacity","font-family","font-size","font-style","font-weight","gradient","height","href","letter-spacing","opacity","r","rx","ry","src","stroke","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","target","text-anchor","title","transform","width","x","y","availableAnimAttrs","_availableAnimAttrs","commaSpaces","hsrg","hs","rg","p2s","pathCommand","tCommand","pathValues","eldata","_radial_gradient","sortByNumber","pipe","rectPath","_rectPath","w","h","ellipsePath","getPath","_getPath","el","attr","bbox","_getBBox","set","mapPath","matrix","pathi","path2curve","_g","type","SVGAngle","implementation","hasFeature","d","createElement","innerHTML","firstChild","style","behavior","adj","clone","obj","res","constructor","vml","_Paper","fn","_id","_oid","o","isArray","angle","x1","y1","x2","y2","x3","y3","atan2","rad","deg","snapTo","values","value","tolerance","rem","uuidRegEx","uuidReplacer","createUUID","c","random","replace","setWindow","newwin","initWin","toHex","color","bod","trim","docum","ActiveXObject","write","close","body","createPopup","range","createTextRange","cacher","queryCommandValue","display","appendChild","defaultView","getComputedStyle","getPropertyValue","hsbtoString","s","hsltoString","rgbtoString","hex","prepareRGB","clr","getRGB","packageRGB","rgb","postprocessor","newf","arg","join","cache","count","repush","shift","hsb2rgb","hsl2rgb","rgb2hsl","rgb2hsb","v","G","B","X","C","V","L","M","m","_path2string","_preload","img","cssText","onload","removeChild","onerror","clrToString","catmullRom2bezier","crp","iLen","p","colour","indexOf","error","substring","charAt","red","blue","t","match","hsb","hsl","getColor","reset","parsePathString","pathString","pth","paths","arr","pathClone","paramCounts","q","data","params","parseTransformString","TString","ps","sleep","setTimeout","base3","p1","p2","p3","p4","bezlen","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","sqrt","intersect","denominator","px","py","px2","toFixed","py2","interHelper","bez1","bez2","justCount","bbox1","bezierBBox","bbox2","isBBoxIntersect","l1","l2","n1","n2","dots1","dots2","xy","findDotsAtSegment","di","di1","dj","dj1","ci","cj","t1","t2","interPathHelper","path1","path2","_path2curve","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t13","t12","t3","mx","my","nx","ny","ax","ay","alpha","curveDim","isPointInsideBBox","pathIntersection","pathIntersectionNumber","isPointInsidePath","pathBBox","_removedFactory","methodname","pathDimensions","Y","dim","xmin","ymin","xmax","ymax","bb","pathArray","pathToRelative","_pathToRelative","rel","pa","len","pathToAbsolute","_pathToAbsolute","crz","dots","l2c","q2c","a2c","large_arc_flag","sweep_flag","recursive","_120","cos","sin","f1","rx2","ry2","asin","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","newres","findDotAtSegment","dot","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","Q","fixArc","pp","fixM","a1","a2","seg","seg2","seglen","seg2len","tear","_parseDots","par","offset","_tear","top","prev","bottom","next","toMatrix","_tofront","_toback","_insertafter","el2","_insertbefore","_","getBBox","extractTransform","transformPath","_extractTransform","tstr","dx","dy","tdata","sx","sy","Matrix","tlen","command","absolute","inver","invert","translate","scale","dirtyT","getEmpty","equaliseTransform","_equaliseTransform","tt1","tt2","maxlength","from","to","_getContainer","container","getElementById","tagName","pixelWidth","offsetWidth","pixelHeight","offsetHeight","matrixproto","norm","normalize","mag","me","get","fromCharCode","toFilter","row","scalex","shear","scaley","acos","isSimple","isSuperSimple","noRotation","toTransformString","shorter","navigator","userAgent","vendor","platform","remove","preventDefault","returnValue","preventTouch","originalEvent","stopPropagation","cancelBubble","stopTouch","getEventPosition","scrollY","documentElement","scrollTop","scrollX","scrollLeft","clientX","clientY","addEvent","addEventListener","element","pos","olde","targetTouches","removeEventListener","attachEvent","detachEvent","drag","dragMove","dragi","touches","touch","identifier","_drag","id","node","nextSibling","parentNode","getElementByPoint","insertBefore","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","elproto","eventName","shape","removeData","getData","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","onDragOver","undrag","unmousedown","__set__","format","itemsArray","Set","setStart","setFinish","setSize","setViewBox","fit","x_y_w_h","elem","box","docElem","clientTop","clientLeft","canvas","elementFromPoint","so","getBoundingClientRect","ownerDocument","pageYOffset","left","pageXOffset","sr","createSVGRect","hits","getIntersectionList","getById","raphaelid","getElementsByBBox","forEach","bot","callback","thisArg","getElementsByPoint","isPointInside","rp","realPath","isWithoutTransform","removed","dirty","bboxwt","glow","offsetx","offsety","getPointAtSegmentLength","ll","step","getTatLen","getLengthFactory","istotal","subpath","onlystart","point","sp","subpaths","getTotalLength","getPointAtLength","getSubpathsAtLength","getSubpath","ef","easing_formulas","linear","<",">","<>","backIn","backOut","elastic","bounce","easeIn","easeOut","easeInOut","animationElements","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","animation","Now","Date","paused","now","time","ms","easing","diff","that","init","initstatus","anim","percent","status","upto255","real","from2","repeat","totalOrigin","runAnimation","percents","CubicBezierAtTime","duration","sampleCurveX","epsilon","t0","d2","solveCurveX","Animation","newAnim","times","isInAnim","isInAnimSet","timestamp","toColour","pathes","toPath","eq","to2","easyeasy","del","origin","stopAnimation","animateWith","onAnimation","delay","floor","json","100","animate","setTime","pause","resume","tokenRegex","objNotationRegex","setproto","method","clear","index","insertion","tail","todel","arglen","exclude","collector","insertAfter","glowConfig","ret","shape2","index2","registerFont","face","fonts","fontcopy","glyphs","family","prop","glyph","getFont","weight","stretch","normal","bold","lighter","bolder","thefont","fontName","print","size","letter_spacing","line_spacing","letters","notfirst","lineHeight","shifty","descent","curr","token","str","fullfill","all","quotedName","isFunc","ninja","st","readyState","isLoaded","xlink","markers","block","classic","diamond","open","oval","markerCounter","setAttributeNS","undefined","elValue","setAttribute","createElementNS","webkitTapHighlightColor","addGradientFill","fx","fy","SVG","_fx","_fy","dir","isNaN","vector","defs","gradientTransform","stop-color","fillOpacity","updatePosition","pattern","patternTransform","addArrow","isEnd","refX","se","arrows","endPath","endMarker","startPath","startMarker","pathId","markerId","use","marker","getElementsByTagName","markerHeight","markerWidth","orient","refY","xlink:href","delta","startdx","enddx","dasharray","","none","-",".","-.","-..",". ","- ","--","- .","--.","--..","addDashes","butt","square","dashes","setFillAndStroke","vis","visibility","att","nodeValue","val","createTextNode","pn","hl","rc","clip-path","getAttribute","startString","endString","_vbSize","isURL","ig","patternUnits","stops","stop-opacity","cssrule","tuneText","fontSize","tspan","texts","tspans","dif","Element","sw","hide","show","def","subkey","toFront","toBack","fltr","stdDeviation","_blur","removeAttribute","preserveAspectRatio","_viewBox","con","Error","isFloating","cnvs","css","xmlns","_left","_top","renderfix","vb","aspectRatio","viewBox","getScreenCTM","createSVGMatrix","desc","fillString","map","Z","bites","blurregexp","cssDot","zoom","pathTypes","ovalTypes","compensation","setCoords","fillpos","flip","kx","ky","coordsize","rotation","coordorigin","fillsize","position","createNode","newpath","isOval","total","vals","isMove","path2vml","div","clipRect","dstyle","textpath","textpathStyle","fontFamily","fontWeight","fontStyle","newstroke","strokeColor","joinstyle","miterlimit","endcap","dashstyle","span","brect","W","right","H","dirtyattrs","dd","bbx","fxfy","color2","clrs","colors","focus","focussize","focusposition","oldt","vbs","_viewBoxShift","vbt","skew","isGrad","isPatt","bbt","runtimeStyle","margin","Path","textpathok","cs","createStyleSheet","addRule","namespaces","rvml","wheelnav","divId","divWidth","divHeight","holderId","canvasWidth","holderDiv","removeChildrens","children","localName","clientWidth","centerX","centerY","wheelRadius","navAngle","sliceAngle","titleRotateAngle","titleCurved","titleCurvedClockwise","titleCurvedByRotateAngle","initTitleRotate","clickModeRotate","rotateRound","rotateRoundCount","clickModeSpreadOff","animatetimeCalculated","animateRepeatCount","clockwise","multiSelect","hoverPercent","selectedPercent","clickablePercentMin","clickablePercentMax","currentPercent","cssMode","selectedToFront","selectedNavItemIndex","hoverEnable","hoveredToFront","navItemCount","navItemCountLabeled","navItemCountLabelOffset","navItems","navItemsEnabled","animateFinishFunction","navItemsContinuous","navItemsCentered","colorpalette","defaultpalette","titleSpreadScale","spreaderEnable","spreaderRadius","spreaderStartAngle","spreaderSliceAngle","spreaderPathFunction","spreaderPath","PieSpreader","spreaderPathCustom","spreaderInPercent","spreaderOutPercent","spreaderInTitle","spreaderOutTitle","spreaderTitleFont","spreaderPathInAttr","spreaderPathOutAttr","spreaderTitleInAttr","spreaderTitleOutAttr","spreaderInTitleWidth","spreaderInTitleHeight","spreaderOutTitleWidth","spreaderOutTitleHeight","minPercent","maxPercent","initPercent","markerEnable","markerPathFunction","markerPath","TriangleMarker","markerPathCustom","currentClick","animateLocked","slicePathAttr","sliceHoverAttr","sliceSelectedAttr","titleFont","titleAttr","titleHoverAttr","titleSelectedAttr","titleWidth","titleHeight","titleHoverWidth","titleHoverHeight","titleSelectedWidth","titleSelectedHeight","linePathAttr","lineHoverAttr","lineSelectedAttr","slicePathCustom","sliceClickablePathCustom","sliceSelectedPathCustom","sliceHoverPathCustom","sliceInitPathCustom","sliceTransformCustom","sliceSelectedTransformCustom","sliceHoverTransformCustom","sliceInitTransformCustom","animateeffect","animatetime","slicePath","slicePathFunction","PieSlice","NullSlice","sliceClickablePathFunction","sliceTransformFunction","sliceSelectedPathFunction","sliceSelectedTransformFunction","sliceHoverPathFunction","sliceHoverTransformFunction","sliceInitPathFunction","sliceInitTransformFunction","keynavigateEnabled","keynavigateOnlyFocus","keynavigateDownCode","keynavigateDownCodeAlt","keynavigateUpCode","keynavigateUpCodeAlt","parseWheel","initWheel","titles","navItem","styleWheel","itemTitle","wheelnavItem","colorIndex","fillAttr","createWheel","withSpread","selected","createNavItem","thiswheelnav","keyelement","hasAttribute","keyNavigateFunction","keyCodeEvent","which","keyCode","keynavigate","navigateWheel","navigateFunction","spreader","refreshWheel","spreadWheel","removeWheel","withPathAndTransform","setWheelSettings","refreshNavItem","setCurrentTransform","clicked","animateUnlock","hovered","currentAnimateTime","rotationAngle","currentRotateAngle","force","withFinishFunction","navSliceUnderAnimation","navTitleUnderAnimation","navTitlePathUnderAnimation","navLineUnderAnimation","navSlice","navLine","navTitle","navTitlePath","setTooltips","tooltips","setTooltip","getItemId","getSliceId","getClickableSliceId","getTitleId","getTitlePathId","getLineId","getSpreaderId","getSpreaderTitleId","getMarkerId","parsedNavItems","parsedNavItemsHref","parsedNavItemsOnmouseup","onlyInit","wheelnavSlicepath","wheelnavColors","wheelnavWheelradius","Number","wheelnavNavangle","wheelnavSpreaderRadius","wheelnavSpreaderPath","wheelnavMarkerPath","wheelnavTitleWidth","wheelnavTitleHeight","wheelnavKeynavDowncode","wheelnavKeynavDowncodeAlt","wheelnavKeynavUpcode","wheelnavKeynavUpcodeAlt","wheelnavNavitemtext","wheelnavNavitemicon","wheelnavNavitemimg","onmouseup","navigateHref","itemIndex","wheelItemIndex","enabled","navClickableSlice","navSliceCurrentTransformString","navTitleCurrentTransformString","navLineCurrentTransformString","setTitle","tooltip","styleNavItem","sliceClickablePathAttr","sliceClickableHoverAttr","prevItemIndex","wheelSliceAngle","baseAngle","initPathsAndTransforms","sliceInitPath","slicePathString","linePathString","currentTitle","initNavTitle","wheelnavTitle","isPathTitle","isImageTitle","titlePosX","titlePosY","addCurvedTitle","thisnode","initTransform","sliceTransformString","lineTransformString","getTitleRotateString","titleTransformString","navTitleSizeTransform","sliceClickablePath","getCurrentClickablePath","thisWheelNav","thisNavItem","thisItemIndex","hoverEffect","titlePathString","sliceHelper","titleRadius","getCurvedTitlePathString","pathid","curvetextPath","textContent","isEnter","titleHover","getItemRotateString","selectTransform","hoverTransform","sliceTransform","navTitleSizeSelectedTransform","navTitleSizeHoverTransform","sliceTransformAttr","getCurrentPath","sliceClickableTransformAttr","lineTransformAttr","getCurrentTitle","titleTransformAttr","titlePathTransformAttr","thisWheelnav","animSlice","animLine","animTitle","animTitlePath","animClickableSlice","navItemSlice","navItemLine","navItemTitle","navItemClickableSlice","titleSelected","sliceClickableSelectedAttr","JSON","parse","stringify","NullInitSlice","pathHelper","startAngle","slicePathMin","slicePathMax","selectedSlicePathMin","selectedSlicePathMax","hoverSlicePathMin","hoverSlicePathMax","clickableSlicePathMin","clickableSlicePathMax","NullTransform","basicNavTitleMin","basicNavTitleMax","hoverNavTitleMin","hoverNavTitleMax","selectedNavTitleMin","selectedNavTitleMax","getTitleSizeTransform","getTitlePercentAttr","withTitleRotateAngle","titleRotate","relativePath","startX","startY","substr","currentX","currentY","titlewidth","titleheight","transformAttr","pathCx","pathCy","getSpreaderCssClass","getSpreaderTitleCssClass","markerAttr","getMarkerCssClass","getSliceCssClass","getTitleCssClass","getLineCssClass","subclass","state","sliceRadius","middleAngle","endAngle","startTheta","middleTheta","endTheta","titleTheta","titleAngle","custom","setBaseValue","slicePathCustomization","getTheta","titleRadiusPercent","titleSliceAnglePercent","setTitlePos","getX","getY","MoveTo","MoveToXY","posX","posY","MoveToCenter","LineTo","angleY","lengthY","LineToXY","ArcTo","arcRadius","ArcToXY","ArcBackTo","ArcBackToXY","CubicBezierTo","assist1Angle","assist1Length","assist2Angle","assist2Length","endLength","CubicBezierToXY","assist1X","assist1Y","assist2X","assist2Y","endX","endY","StartSpreader","spreaderPathString","Close","radians","degrees","spreaderPathCustomization","spreaderPercent","markerPathCustomization","markerPercent","helper","PieSliceCustomization","arcBaseRadiusPercent","arcRadiusPercent","startRadiusPercent","arcBaseRadius","FlowerSlice","PieArrowSliceCustomization","arrowRadiusPercent","PieArrowSlice","arrowAngleStart","arrowAngleEnd","arrowRadius","PieArrowBasePieSlice","DonutSliceCustomization","minRadiusPercent","maxRadiusPercent","DonutSlice","maxRadius","minRadius","CogSliceCustomization","isBasePieSlice","CogSlice","rbase","percentAngle0625","percentAngle1250","percentAngle1875","percentAngle2500","percentAngle3125","percentAngle3750","percentAngle4375","percentAngle5000","percentAngle5625","percentAngle6250","percentAngle6875","percentAngle7500","percentAngle8125","percentAngle8750","percentAngle9375","percentAngle9687","CogBasePieSlice","StarSliceCustomization","StarSlice","StarBasePieSlice","MenuSliceCustomization","menuRadius","isSelectedLine","lineBaseRadiusPercent","MenuSlice","MenuSliceSelectedLine","MenuSliceWithoutLine","LineSlice","EyeSliceCustomization","EyeSlice","WheelSlice","innerRadiusPercent","startendRadiusPercent","middleRadiusPercent","OuterStrokeSlice","innerRadius","TabSlice","rOriginal","itemSize","YinYangSlice","WebSlice","WinterSliceCustomization","WinterSlice","parallelAngle","parallelAngle2","borderAngle1","borderAngle2","borderAngle3","borderAngle4","TutorialSliceCustomization","isMoveTo","isLineTo","isArcTo","isArcBackTo","TutorialSlice","titlePathRadius1","titlePathRadius2","titlePathEndangle","titlePathStartRadius","MoveMiddleTransform","baseTheta","RotateTransform","RotateHalfTransform","RotateTitleTransform","ScaleTransform","ScaleTitleTransform","RotateScaleTransform","CustomTransform","scaleString","rotateString","CustomTitleTransform","sliceTransformCustomization","spreaderHelper","fontAttr","spreaderPathIn","spreaderPathOut","currentPath","spreaderPathAttr","click","inTitleWidth","inTitleHeight","outTitleWidth","outTitleHeight","inTitle","inTitleSizeTransform","outTitle","outTitleSizeTransform","currentTitleAttr","currentTitleWidth","currentTitleHeight","currentTitleSizeTransform","spreaderTitle","withoutAnimate","titleSizeTransform","spreaderTransformAttr","offYOffset","NullSpreader","PieSpreaderCustomization","StarSpreaderCustomization","StarSpreader","AntiStarSpreaderCustomization","AntiStarSpreader","FlowerSpreaderCustomization","FlowerSpreader","HolderSpreaderCustomization","HolderSpreader","LineSpreaderCustomization","LineSpreader","markerHelper","markerPathMin","markerPathMax","markerPathString","markerTransformAttr","NullMarker","TriangleMarkerCustomization","PieLineMarkerCustomization","PieLineMarker","MenuMarkerCustomization","MenuMarker","LineMarkerCustomization","LineMarker","DropMarkerCustomization","dropBaseRadiusPercent","dropRadiusPercent","DropMarker","startAngle2","endAngle2","dropRadius","purple","greenred","greensilver","oceanfive","garden","gamebookers","parrot","pisycholand","makeLOVEnotWAR","theworldismine","fractalloveone","fractallovetwo","fractallove","sprinkles","goldenyellow","hotaru"],"mappings":"AAIA,IAAAA,KAAA,CACAC,IAAA,qbACAC,EAAA,mXACAC,EAAA,+iBACAC,aAAA,mPACAC,SAAA,kPACAC,IAAA,uvBACAC,KAAA,uzCACAC,SAAA,6xCACAC,KAAA,6lBACAC,QAAA,g5BACAC,KAAA,8mEACAC,KAAA,8kDACAC,KAAA,mxEACAC,OAAA,gsGACAC,IAAA,25GACAC,KAAA,iMACAC,OAAA,41BACAC,MAAA,scACAC,MAAA,mhBACAC,KAAA,uYACAC,SAAA,wgBACAC,SAAA,mJACAC,QAAA,4tBACAC,QAAA,4VACAC,IAAA,uaACAC,IAAA,4bACAC,SAAA,wZACAC,OAAA,yTACAC,KAAA,sBACAC,IAAA,mGACAC,MAAA,+FACAC,GAAA,kFACAC,GAAA,qFACAC,KAAA,gDACAC,WAAA,sJACAC,UAAA,kJACAC,QAAA,yJACAC,UAAA,gJACAC,WAAA,qFACAC,YAAA,sFACAC,OAAA,qrBACAC,MAAA,yhBACAC,MAAA,6mFACAC,MAAA,uoEACAC,UAAA,qnGACAC,QAAA,6wEACAC,OAAA,sxEACAC,UAAA,4+cACAC,SAAA,20eACAC,MAAA,qxoBACAC,QAAA,iWACAC,KAAA,8KACAC,OAAA,yRACAC,IAAA,wfACAC,KAAA,wKACAC,MAAA,0DACAC,OAAA,yKACAC,QAAA,mTACAC,MAAA,83BACAC,KAAA,ynBACAC,WAAA,m3BACAC,WAAA,wmBACAC,OAAA,mgBACAC,SAAA,yNACAC,OAAA,g6BACAC,MAAA,2iEACAC,KAAA,wmBACAC,SAAA,0uBACAC,SAAA,ksBACAC,UAAA,8qCACAC,MAAA,quCACAC,KAAA,+JACAC,QAAA,kSACAC,OAAA,yLACAC,SAAA,gWACAC,MAAA,+QACAC,MAAA,2cACAC,KAAA,0KACAC,KAAA,iYACAC,OAAA,+WACAC,KAAA,mnBACAC,KAAA,8IACAC,QAAA,uRACAC,MAAA,4eACAC,SAAA,40BACAC,MAAA,gmBACAC,SAAA,+rBACAC,KAAA,kmBACAC,MAAA,mgCACAC,KAAA,woCACAC,UAAA,8gCACAC,OAAA,0TACAC,QAAA,ucACAC,QAAA,6hBAEAC,YAAA,6iBACAC,qBAAA,+jDACAC,MAAA,wgCACAC,SAAA,iVACAC,KAAA,qXACAC,OAAA,6gBACAC,MAAA,qVACAC,OAAA,s7BACAC,UAAA,okCACAC,QAAA,q7BACAC,SAAA,uOACAC,UAAA,0DACAC,QAAA,wEACAC,QAAA,gaACAC,QAAA,ouBACAC,QAAA,ijCACAC,KAAA,muBACAC,KAAA,i5BACAC,IAAA,yeACAC,MAAA,uoEACAC,MAAA,oiCACAC,KAAA,mEACAC,WAAA,yHACAC,IAAA,4NACAC,OAAA,6YACAC,QAAA,ocACAC,OAAA,keACAC,MAAA,wKACAC,MAAA,oFACAC,SAAA,gyCACAC,YAAA,mcACAC,KAAA,2WACAC,IAAA,+vEACAC,KAAA,i1BACAC,SAAA,sxCACAC,UAAA,knBACAC,OAAA,g3BACAC,GAAA,0XACAC,YAAA,0PACAC,MAAA,wcACAC,QAAA,qzBACAC,OAAA,mbACAC,OAAA,6YACAC,IAAA,qvEACAC,OAAA,yfACAC,SAAA,glBACAC,SAAA,8cACAC,SAAA,+eACAC,QAAA,oOACAC,OAAA,uTACAC,QAAA,6WACAC,WAAA,uVACAC,OAAA,mIACAC,IAAA,goBACAC,MAAA,2hCACAC,QAAA,ipCACAC,OAAA,i3DACAC,OAAA,owCACAC,SAAA,2tCACAC,QAAA,izBACAC,SAAA,2FACAC,SAAA,wRACAC,UAAA,qaACAC,KAAA,ghCACAC,OAAA,msBACAC,IAAA,2kCACAC,IAAA,oxBACAC,SAAA,otBACAC,IAAA,+8DACAC,KAAA,8eACAC,OAAA,suBACAC,OAAA,uqBACAC,KAAA,kRACAC,SAAA,+/BACAC,MAAA,sdACAC,KAAA,+kCACAC,KAAA,sNACAC,KAAA,uiCACAC,KAAA,sPACAC,UAAA,2/EACAC,WAAA,02BACAC,IAAA,2UACAC,QAAA,snBACAC,KAAA,itCACAC,GAAA,0tBACAC,KAAA,8VACAC,SAAA,0ZACAC,KAAA,29CACAC,MAAA,80CACAC,UAAA,gJACAC,UAAA,oFACAC,SAAA,sFACAC,WAAA,yGACAC,QAAA,2GACAC,QAAA,slCACAC,KAAA,8jGACAC,Q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","file":"../wheelnav.min.js","sourcesContent":["//------------------------------------------------------------\r\n// Free icons from http://dmitrybaranovskiy.github.io/raphael/\r\n//------------------------------------------------------------\r\n\r\nvar icon = {\r\n        \"?\": \"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466z M17.328,24.371h-2.707v-2.596h2.707V24.371zM17.328,19.003v0.858h-2.707v-1.057c0-3.19,3.63-3.696,3.63-5.963c0-1.034-0.924-1.826-2.134-1.826c-1.254,0-2.354,0.924-2.354,0.924l-1.541-1.915c0,0,1.519-1.584,4.137-1.584c2.487,0,4.796,1.54,4.796,4.136C21.156,16.208,17.328,16.627,17.328,19.003z\",\r\n        i: \"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466z M14.757,8h2.42v2.574h-2.42V8z M18.762,23.622H16.1c-1.034,0-1.475-0.44-1.475-1.496v-6.865c0-0.33-0.176-0.484-0.484-0.484h-0.88V12.4h2.662c1.035,0,1.474,0.462,1.474,1.496v6.887c0,0.309,0.176,0.484,0.484,0.484h0.88V23.622z\",\r\n        $: \"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466z M17.255,23.88v2.047h-1.958v-2.024c-3.213-0.44-4.621-3.08-4.621-3.08l2.002-1.673c0,0,1.276,2.223,3.586,2.223c1.276,0,2.244-0.683,2.244-1.849c0-2.729-7.349-2.398-7.349-7.459c0-2.2,1.738-3.785,4.137-4.159V5.859h1.958v2.046c1.672,0.22,3.652,1.1,3.652,2.993v1.452h-2.596v-0.704c0-0.726-0.925-1.21-1.959-1.21c-1.32,0-2.288,0.66-2.288,1.584c0,2.794,7.349,2.112,7.349,7.415C21.413,21.614,19.785,23.506,17.255,23.88z\",\r\n        arrowleftalt: \"M16,30.534c8.027,0,14.534-6.507,14.534-14.534c0-8.027-6.507-14.534-14.534-14.534C7.973,1.466,1.466,7.973,1.466,16C1.466,24.027,7.973,30.534,16,30.534zM18.335,6.276l3.536,3.538l-6.187,6.187l6.187,6.187l-3.536,3.537l-9.723-9.724L18.335,6.276z\",\r\n        arrowalt: \"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM13.665,25.725l-3.536-3.539l6.187-6.187l-6.187-6.187l3.536-3.536l9.724,9.723L13.665,25.725z\",\r\n        \"!\": \"M26.711,14.086L16.914,4.29c-0.778-0.778-2.051-0.778-2.829,0L4.29,14.086c-0.778,0.778-0.778,2.05,0,2.829l9.796,9.796c0.778,0.777,2.051,0.777,2.829,0l9.797-9.797C27.488,16.136,27.488,14.864,26.711,14.086zM14.702,8.981c0.22-0.238,0.501-0.357,0.844-0.357s0.624,0.118,0.844,0.353c0.221,0.235,0.33,0.531,0.33,0.885c0,0.306-0.101,1.333-0.303,3.082c-0.201,1.749-0.379,3.439-0.531,5.072H15.17c-0.135-1.633-0.301-3.323-0.5-5.072c-0.198-1.749-0.298-2.776-0.298-3.082C14.372,9.513,14.482,9.22,14.702,8.981zM16.431,21.799c-0.247,0.241-0.542,0.362-0.885,0.362s-0.638-0.121-0.885-0.362c-0.248-0.241-0.372-0.533-0.372-0.876s0.124-0.638,0.372-0.885c0.247-0.248,0.542-0.372,0.885-0.372s0.638,0.124,0.885,0.372c0.248,0.247,0.372,0.542,0.372,0.885S16.679,21.558,16.431,21.799z\",\r\n        \"?2\": \"M26.711,14.086L16.914,4.29c-0.778-0.778-2.051-0.778-2.829,0L4.29,14.086c-0.778,0.778-0.778,2.05,0,2.829l9.796,9.796c0.778,0.777,2.051,0.777,2.829,0l9.797-9.797C27.488,16.136,27.488,14.864,26.711,14.086zM16.431,21.799c-0.248,0.241-0.543,0.362-0.885,0.362c-0.343,0-0.638-0.121-0.886-0.362c-0.247-0.241-0.371-0.533-0.371-0.876s0.124-0.638,0.371-0.885c0.248-0.248,0.543-0.372,0.886-0.372c0.342,0,0.637,0.124,0.885,0.372c0.248,0.247,0.371,0.542,0.371,0.885S16.679,21.558,16.431,21.799zM18.911,15.198c-0.721,0.716-1.712,1.147-2.972,1.294v2.027h-0.844v-3.476c0.386-0.03,0.768-0.093,1.146-0.188c0.38-0.095,0.719-0.25,1.019-0.464c0.312-0.227,0.555-0.5,0.729-0.822c0.174-0.322,0.261-0.77,0.261-1.346c0-0.918-0.194-1.623-0.582-2.113c-0.389-0.49-0.956-0.735-1.701-0.735c-0.281,0-0.527,0.042-0.738,0.124s-0.366,0.16-0.464,0.234c0.031,0.146,0.072,0.357,0.124,0.633c0.052,0.275,0.078,0.486,0.078,0.633c0,0.226-0.098,0.433-0.294,0.619c-0.195,0.187-0.479,0.28-0.853,0.28c-0.33,0-0.565-0.113-0.706-0.339s-0.211-0.489-0.211-0.789c0-0.244,0.067-0.484,0.201-0.72c0.135-0.235,0.346-0.463,0.633-0.684c0.245-0.195,0.577-0.364,0.995-0.504c0.419-0.141,0.854-0.211,1.308-0.211c0.647,0,1.223,0.103,1.724,0.308c0.502,0.205,0.914,0.479,1.238,0.822c0.337,0.355,0.586,0.755,0.748,1.198c0.162,0.444,0.243,0.926,0.243,1.446C19.994,13.558,19.633,14.482,18.911,15.198z\",\r\n        stopsign: \"M20.833,2.625H10.167l-7.542,7.542v10.666l7.542,7.542h10.666l7.542-7.542V10.167L20.833,2.625zM23.76,17.145c-0.461,0.432-0.496-0.021-1.151,0.385c-0.655,0.404-1.067,0.844-1.067,0.844l-0.578,0.564c0,0-1.199,1.422-1.59,1.717c-0.392,0.291-0.572,0.166-0.572,0.166c-0.133,0.23-0.641,0.656-1.193,1.025c-0.549,0.371-0.99,1.354-0.99,1.354l-0.208,1.465c0,0-1.597,0.021-3.096-0.293c-1.499-0.314-2.699-0.982-2.699-0.982l0.655-1.451c0,0-0.58-2.225-0.636-3.926c-0.056-1.703,0.572-2.958,0.481-3.37c-0.09-0.412-0.438-1.109-0.523-1.569c-0.083-0.46-0.307-2.036-0.327-2.238c-0.021-0.202-0.28-2.232,0.614-2.204c0.891,0.027,0.648,1.388,0.725,2.246c0.077,0.857,1.13,3.249,1.297,3.123c0.167-0.125-0.056-2.398,0.006-2.838c0.063-0.439,0.182-2.315,0.293-2.747c0.112-0.433,0.105-1.778,0.935-1.66c0.83,0.118,0.606,1.332,0.488,1.813c-0.118,0.48,0.021,1.597,0.07,2.302c0.048,0.704,0.112,2.356,0.112,2.356l0.404-0.042c0,0,0.913-5,0.976-5.439c0.062-0.439,0.182-1.618,0.858-1.472c1.117,0.242,0.516,1.967,0.516,1.967l-0.486,5.509c0,0,0.166,0.224,0.492,0.021c0.33-0.202,1.312-3.25,1.459-3.927c0.146-0.676,0.084-2.678,1.145-2.428c1.059,0.252,0.453,2.755,0.124,4.353c-0.327,1.597-1.03,3.39-1.03,3.39l-0.433,1.631l0.376,0.852l0.412-0.092l0.898-0.717c0,0,0,0,0.614-0.461c0.613-0.46,1.764-0.495,2.044-0.355C23.453,16.154,24.221,16.713,23.76,17.145z\",\r\n        temp: \"M17.5,19.508V8.626h-3.999v10.881c-1.404,0.727-2.375,2.178-2.375,3.869c0,2.416,1.959,4.375,4.375,4.375s4.375-1.959,4.375-4.375C19.876,21.686,18.905,20.234,17.5,19.508zM20.5,5.249c0-2.757-2.244-5-5.001-5s-4.998,2.244-4.998,5v12.726c-1.497,1.373-2.376,3.314-2.376,5.4c0,4.066,3.31,7.377,7.376,7.377s7.374-3.311,7.374-7.377c0-2.086-0.878-4.029-2.375-5.402V5.249zM20.875,23.377c0,2.963-2.41,5.373-5.375,5.373c-2.962,0-5.373-2.41-5.373-5.373c0-1.795,0.896-3.443,2.376-4.438V5.251c0-1.654,1.343-3,2.997-3s3,1.345,3,3v13.688C19.979,19.934,20.875,21.582,20.875,23.377zM22.084,8.626l4.5,2.598V6.029L22.084,8.626z\",\r\n        thunder: \"M25.371,7.306c-0.092-3.924-3.301-7.077-7.248-7.079c-2.638,0.001-4.942,1.412-6.208,3.517c-0.595-0.327-1.28-0.517-2.01-0.517C7.626,3.229,5.772,5.033,5.689,7.293c-2.393,0.786-4.125,3.025-4.127,5.686c0,3.312,2.687,6,6,6v-0.002h5.271l-2.166,3.398l1.977-0.411L10,30.875l9.138-10.102L17,21l2.167-2.023h4.269c3.312,0,6-2.688,6-6C29.434,10.34,27.732,8.11,25.371,7.306zM23.436,16.979H7.561c-2.209-0.006-3.997-1.792-4.001-4.001c-0.002-1.982,1.45-3.618,3.35-3.931c0.265-0.043,0.502-0.191,0.657-0.414C7.722,8.41,7.779,8.136,7.73,7.87C7.702,7.722,7.685,7.582,7.685,7.446C7.689,6.221,8.68,5.23,9.905,5.228c0.647,0,1.217,0.278,1.633,0.731c0.233,0.257,0.587,0.375,0.927,0.309c0.342-0.066,0.626-0.307,0.748-0.63c0.749-1.992,2.662-3.412,4.911-3.41c2.899,0.004,5.244,2.35,5.251,5.249c0,0.161-0.009,0.326-0.027,0.497c-0.049,0.517,0.305,0.984,0.815,1.079c1.86,0.344,3.274,1.966,3.271,3.923C27.43,15.186,25.645,16.973,23.436,16.979z\",\r\n        snow: \"M25.372,6.912c-0.093-3.925-3.302-7.078-7.248-7.08c-2.638,0.002-4.942,1.412-6.208,3.518c-0.595-0.327-1.28-0.518-2.01-0.518C7.627,2.834,5.773,4.639,5.69,6.898c-2.393,0.786-4.125,3.025-4.127,5.686c0,3.312,2.687,6,6,6v-0.002h15.875c3.312,0,6-2.688,6-6C29.434,9.944,27.732,7.715,25.372,6.912zM23.436,16.584H7.562c-2.209-0.006-3.997-1.793-4.001-4c-0.002-1.983,1.45-3.619,3.35-3.933c0.265-0.043,0.502-0.19,0.657-0.414C7.723,8.015,7.78,7.74,7.731,7.475C7.703,7.326,7.686,7.187,7.686,7.051c0.004-1.225,0.995-2.217,2.22-2.219c0.647,0,1.217,0.278,1.633,0.731c0.233,0.257,0.587,0.375,0.927,0.31c0.342-0.066,0.626-0.308,0.748-0.631c0.749-1.992,2.662-3.412,4.911-3.41c2.898,0.004,5.244,2.351,5.251,5.25c0,0.16-0.009,0.325-0.026,0.496c-0.05,0.518,0.305,0.984,0.814,1.079c1.859,0.345,3.273,1.966,3.271,3.923C27.43,14.791,25.645,16.578,23.436,16.584zM16.667,24.09l1.119-1.119c0.389-0.391,0.389-1.025,0-1.416c-0.392-0.391-1.025-0.391-1.415,0l-1.119,1.119l-1.119-1.119c-0.391-0.391-1.025-0.391-1.415,0c-0.391,0.391-0.391,1.025,0,1.416l1.118,1.117l-1.12,1.121c-0.389,0.393-0.389,1.021,0,1.414c0.195,0.188,0.451,0.293,0.707,0.293c0.256,0,0.512-0.104,0.708-0.293l1.12-1.119l1.12,1.119c0.195,0.188,0.451,0.293,0.708,0.293c0.256,0,0.512-0.104,0.707-0.293c0.391-0.396,0.391-1.021,0-1.414L16.667,24.09zM25.119,21.817c-0.393-0.392-1.025-0.392-1.415,0l-1.12,1.121l-1.12-1.121c-0.391-0.392-1.022-0.392-1.414,0c-0.39,0.392-0.39,1.022,0,1.416l1.119,1.119l-1.119,1.119c-0.39,0.391-0.39,1.022,0,1.413c0.195,0.195,0.451,0.294,0.707,0.294c0.257,0,0.513-0.099,0.707-0.294l1.12-1.118l1.12,1.118c0.194,0.195,0.45,0.294,0.707,0.294c0.256,0,0.513-0.099,0.708-0.294c0.389-0.391,0.389-1.022,0-1.413l-1.12-1.119l1.12-1.119C25.507,22.842,25.507,22.209,25.119,21.817zM9.334,23.953l1.119-1.119c0.389-0.394,0.389-1.021,0-1.414c-0.391-0.394-1.025-0.394-1.415,0l-1.119,1.119l-1.12-1.121c-0.391-0.39-1.023-0.39-1.415,0c-0.391,0.396-0.391,1.024,0,1.418l1.119,1.117l-1.12,1.118c-0.391,0.394-0.391,1.025,0,1.414c0.196,0.195,0.452,0.293,0.708,0.293c0.256,0,0.511-0.098,0.707-0.293l1.12-1.119l1.121,1.121c0.195,0.195,0.451,0.293,0.707,0.293s0.513-0.098,0.708-0.293c0.389-0.391,0.389-1.022,0-1.416L9.334,23.953z\",\r\n        hail: \"M25.372,6.912c-0.093-3.925-3.302-7.078-7.248-7.08c-2.638,0.002-4.942,1.412-6.208,3.518c-0.595-0.327-1.28-0.518-2.01-0.518C7.627,2.834,5.773,4.639,5.69,6.898c-2.393,0.786-4.125,3.025-4.127,5.686c0,3.312,2.687,6,6,6v-0.002h15.875c3.312,0,6-2.688,6-6C29.434,9.944,27.732,7.715,25.372,6.912zM23.436,16.584H7.562c-2.209-0.006-3.997-1.793-4.001-4c-0.002-1.983,1.45-3.619,3.35-3.933c0.265-0.043,0.502-0.19,0.657-0.414C7.723,8.015,7.78,7.74,7.731,7.475C7.703,7.326,7.686,7.187,7.686,7.051c0.004-1.225,0.995-2.217,2.22-2.219c0.647,0,1.217,0.278,1.633,0.731c0.233,0.257,0.587,0.375,0.927,0.31c0.342-0.066,0.626-0.308,0.748-0.631c0.749-1.992,2.662-3.412,4.911-3.41c2.898,0.004,5.244,2.351,5.251,5.25c0,0.16-0.009,0.325-0.026,0.496c-0.05,0.518,0.305,0.984,0.814,1.079c1.859,0.345,3.273,1.966,3.271,3.923C27.43,14.791,25.645,16.578,23.436,16.584zM11.503,23.709c-0.784-0.002-1.418-0.636-1.418-1.416c0-0.785,0.634-1.416,1.418-1.418c0.78,0.002,1.413,0.633,1.416,1.418C12.917,23.073,12.284,23.707,11.503,23.709zM19.002,23.709c-0.783-0.002-1.418-0.636-1.418-1.416c0-0.785,0.635-1.416,1.418-1.418c0.779,0.002,1.414,0.633,1.414,1.418C20.417,23.073,19.784,23.707,19.002,23.709zM7.503,28.771c-0.783-0.002-1.417-0.637-1.417-1.418s0.634-1.414,1.417-1.416c0.78,0.002,1.415,0.635,1.415,1.416C8.917,28.135,8.284,28.77,7.503,28.771zM15.001,28.771c-0.782-0.002-1.417-0.637-1.417-1.418s0.634-1.414,1.417-1.416c0.78,0.002,1.413,0.635,1.415,1.416C16.415,28.135,15.784,28.77,15.001,28.771zM22.5,28.771c-0.782-0.002-1.416-0.634-1.416-1.416c0-0.785,0.634-1.418,1.416-1.42c0.781,0.002,1.414,0.635,1.418,1.42C23.915,28.138,23.282,28.77,22.5,28.771z\",\r\n        rain: \"M25.371,7.306c-0.092-3.924-3.301-7.077-7.248-7.079c-2.638,0.001-4.942,1.412-6.208,3.517c-0.595-0.327-1.28-0.517-2.01-0.517C7.626,3.229,5.772,5.033,5.689,7.293c-2.393,0.786-4.125,3.025-4.127,5.686c0,3.312,2.687,6,6,6v-0.002h15.874c3.312,0,6-2.688,6-6C29.434,10.34,27.732,8.11,25.371,7.306zM23.436,16.979H7.561c-2.209-0.006-3.997-1.792-4.001-4.001c-0.002-1.982,1.45-3.618,3.35-3.931c0.265-0.043,0.502-0.191,0.657-0.414C7.722,8.41,7.779,8.136,7.73,7.87C7.702,7.722,7.685,7.582,7.685,7.446C7.689,6.221,8.68,5.23,9.905,5.228c0.647,0,1.217,0.278,1.633,0.731c0.233,0.257,0.587,0.375,0.927,0.309c0.342-0.066,0.626-0.307,0.748-0.63c0.749-1.992,2.662-3.412,4.911-3.41c2.899,0.004,5.244,2.35,5.251,5.249c0,0.161-0.009,0.326-0.027,0.497c-0.049,0.517,0.305,0.984,0.815,1.079c1.86,0.344,3.274,1.966,3.271,3.923C27.43,15.186,25.645,16.973,23.436,16.979zM9.029,26.682c0-1.115,0.021-5.425,0.021-5.432c0.002-0.409-0.247-0.779-0.628-0.932c-0.38-0.152-0.815-0.059-1.099,0.24c-0.006,0.008-1.037,1.098-2.081,2.342c-0.523,0.627-1.048,1.287-1.463,1.896c-0.399,0.648-0.753,1.066-0.811,1.885C2.971,28.355,4.324,29.711,6,29.714C7.672,29.71,9.029,28.354,9.029,26.682zM4.971,26.727c0.091-0.349,1.081-1.719,1.993-2.764c0.025-0.029,0.051-0.061,0.076-0.089c-0.005,1.124-0.01,2.294-0.01,2.808c0,0.567-0.461,1.028-1.029,1.03C5.447,27.71,4.997,27.273,4.971,26.727zM16.425,26.682c0-1.115,0.021-5.424,0.021-5.43c0.002-0.41-0.247-0.779-0.628-0.934c-0.381-0.152-0.814-0.058-1.1,0.242c-0.006,0.008-1.035,1.094-2.08,2.342c-0.522,0.623-1.047,1.285-1.463,1.894c-0.399,0.649-0.753,1.068-0.809,1.888c0,1.672,1.354,3.028,3.029,3.028C15.068,29.711,16.425,28.354,16.425,26.682zM12.365,26.729c0.092-0.349,1.081-1.72,1.993-2.765c0.025-0.03,0.05-0.06,0.075-0.089c-0.005,1.123-0.011,2.294-0.011,2.807c-0.002,0.568-0.461,1.027-1.028,1.029C12.84,27.709,12.392,27.273,12.365,26.729zM23.271,20.317c-0.38-0.153-0.816-0.06-1.099,0.24c-0.009,0.008-1.037,1.097-2.08,2.342c-0.523,0.625-1.049,1.285-1.462,1.896c-0.402,0.649-0.754,1.067-0.812,1.886c0,1.672,1.354,3.029,3.03,3.029c1.673,0,3.027-1.357,3.027-3.029c0-1.115,0.022-5.425,0.022-5.431C23.9,20.84,23.651,20.47,23.271,20.317zM21.879,26.681c-0.004,0.568-0.463,1.027-1.031,1.029c-0.553-0.002-1.002-0.438-1.028-0.982c0.092-0.349,1.081-1.72,1.993-2.765c0.025-0.028,0.05-0.059,0.074-0.088C21.883,24.998,21.879,26.167,21.879,26.681z\",\r\n        cloudy: \"M14.378,6.781c0.41,0.988,1.938,0.346,1.524-0.648C15.708,5.667,15.515,5.2,15.32,4.734c-0.289-0.695-0.875-3.233-2.042-2.747c-1.03,0.433-0.128,1.846,0.142,2.494C13.739,5.248,14.059,6.015,14.378,6.781M20.8,7.223c1.094,0.453,1.538-1.551,1.813-2.216c0.281-0.677,1.478-2.565,0.357-3.029c-1.092-0.453-1.537,1.548-1.813,2.216C20.876,4.872,19.68,6.757,20.8,7.223M18.137,6.692c1.183,0,0.829-2.019,0.829-2.742c0-0.732,0.383-2.935-0.829-2.935c-1.183,0-0.828,2.019-0.828,2.742C17.309,4.49,16.926,6.692,18.137,6.692M23.058,8.729c0.852,0.85,2.142-0.972,2.659-1.49c0.512-0.513,2.187-1.687,1.352-2.524c-0.834-0.836-2.013,0.843-2.522,1.353C24.028,6.585,22.198,7.874,23.058,8.729M24.565,10.986c0.448,1.091,2.183-0.01,2.849-0.286c0.676-0.28,2.858-0.771,2.394-1.89c-0.455-1.091-2.181,0.008-2.849,0.285C26.281,9.377,24.102,9.866,24.565,10.986M12.036,8.742c0.752,0.75,1.932-0.415,1.17-1.173c-0.253-0.347-0.646-0.645-0.949-0.946c-0.541-0.539-2.162-2.799-3.068-1.889c-0.79,0.791,0.586,1.755,1.083,2.25C10.859,7.57,11.447,8.156,12.036,8.742M29.365,17.397c-0.768-0.317-1.534-0.635-2.302-0.952c-0.646-0.268-2.07-1.169-2.495-0.135c-0.481,1.168,2.054,1.747,2.751,2.035c0.455,0.188,0.911,0.377,1.367,0.565C29.7,19.331,30.379,17.816,29.365,17.397M29.942,12.817c-0.83,0-1.66,0-2.49,0c-0.701,0-2.357-0.288-2.355,0.83c0,1.262,2.567,0.827,3.319,0.827c0.493,0,0.986,0,1.479-0.001C30.99,14.473,31.043,12.815,29.942,12.817M24.234,18.568c-0.673-0.673-1.773,0.189-1.281,1.007c-0.295-0.264-0.614-0.499-0.961-0.69c3.894-2.866,3.328-9.006-1.021-11.107c-2.024-0.978-4.481-0.828-6.368,0.394c-0.871,0.564-1.603,1.336-2.119,2.236c-0.262,0.456-0.468,0.943-0.612,1.449c-0.074,0.258-0.131,0.521-0.172,0.786c-0.083,0.534-0.109,0.553-0.553,0.871c-0.182-0.957-1.64-0.675-2.326-0.674c-0.815,0.001-1.963-0.217-2.752,0.046c-0.867,0.289-0.652,1.615,0.263,1.613c0.324,0.052,0.701-0.001,1.028-0.001c0.904-0.001,1.809-0.002,2.713-0.003c-0.308,0.352-0.496,0.969-0.94,0.77c-0.467-0.209-0.978-0.319-1.49-0.319c-0.951,0-1.877,0.375-2.561,1.036c-0.681,0.658-1.088,1.569-1.123,2.516c-0.944,0.31-1.791,0.891-2.421,1.658c-2.756,3.354-0.265,8.554,4.058,8.554v-0.002c3.597,0,7.194,0,10.792,0c1.341,0,2.843,0.167,4.168-0.113c3.652-0.772,5.361-5.21,3.133-8.229c0.548,0.547,1.096,1.094,1.644,1.641c0.183,0.183,0.364,0.424,0.575,0.574c0.552,0.552,1.524,0.066,1.403-0.713c-0.097-0.622-1.042-1.267-1.448-1.673C25.319,19.652,24.776,19.11,24.234,18.568M18.137,8.787c4.559,0.009,6.576,5.979,2.912,8.734c-0.637-3.505-4.161-5.824-7.629-5.03C13.943,10.367,15.852,8.792,18.137,8.787M22.895,24.08c-0.633,3.346-4.149,2.879-6.68,2.879c-3.017,0-6.033,0-9.049,0c-0.767,0-1.62,0.084-2.373-0.095c-2.274-0.538-3.416-3.242-2.172-5.235c0.678-1.087,1.568-1.19,2.626-1.67c0.604-0.273,0.456-0.807,0.456-1.331c0.002-0.597,0.284-1.169,0.756-1.533c0.787-0.608,1.943-0.497,2.611,0.234c1.098,1.205,1.96-1.346,2.507-1.893c2.025-2.025,5.475-1.708,7.068,0.684c0.344,0.516,0.581,1.102,0.693,1.712c0.097,0.529-0.115,1.341,0.188,1.796c0.291,0.47,0.943,0.463,1.397,0.68c0.508,0.23,0.963,0.591,1.304,1.034C22.834,22.125,23.064,23.107,22.895,24.08M6.906,9.917c0.881,0.364,1.763,0.727,2.644,1.091c0.353,0.146,0.707,0.292,1.06,0.437c0.997,0.412,1.637-1.119,0.642-1.526C10.47,9.441,9.456,9.177,8.609,8.828c-0.354-0.146-0.707-0.292-1.06-0.437C6.554,7.98,5.912,9.505,6.906,9.917\",\r\n        sun: \"M15.502,7.504c-4.35,0-7.873,3.523-7.873,7.873c0,4.347,3.523,7.872,7.873,7.872c4.346,0,7.871-3.525,7.871-7.872C23.374,11.027,19.85,7.504,15.502,7.504zM15.502,21.25c-3.244-0.008-5.866-2.63-5.874-5.872c0.007-3.243,2.63-5.866,5.874-5.874c3.242,0.008,5.864,2.631,5.871,5.874C21.366,18.62,18.744,21.242,15.502,21.25zM15.502,6.977c0.553,0,1-0.448,1-1.001V1.125c-0.002-0.553-0.448-1-1-1c-0.553,0-1.001,0.449-1,1.002v4.85C14.502,6.528,14.949,6.977,15.502,6.977zM18.715,7.615c0.125,0.053,0.255,0.076,0.382,0.077c0.394,0,0.765-0.233,0.925-0.618l1.856-4.483c0.21-0.511-0.031-1.095-0.541-1.306c-0.511-0.211-1.096,0.031-1.308,0.541L18.174,6.31C17.963,6.82,18.205,7.405,18.715,7.615zM21.44,9.436c0.195,0.194,0.451,0.293,0.707,0.293s0.512-0.098,0.707-0.293l3.43-3.433c0.391-0.39,0.39-1.023,0-1.415c-0.392-0.39-1.025-0.39-1.415,0.002L21.44,8.021C21.049,8.412,21.049,9.045,21.44,9.436zM23.263,12.16c0.158,0.385,0.531,0.617,0.923,0.617c0.127,0,0.257-0.025,0.383-0.078l4.48-1.857c0.511-0.211,0.753-0.797,0.541-1.307s-0.796-0.752-1.307-0.54l-4.481,1.857C23.292,11.064,23.051,11.65,23.263,12.16zM29.752,14.371l-4.851,0.001c-0.552,0-1,0.448-0.998,1.001c0,0.553,0.447,0.999,0.998,0.999l4.852-0.002c0.553,0,0.999-0.449,0.999-1C30.752,14.817,30.304,14.369,29.752,14.371zM29.054,19.899l-4.482-1.854c-0.512-0.212-1.097,0.03-1.307,0.541c-0.211,0.511,0.031,1.096,0.541,1.308l4.482,1.854c0.126,0.051,0.256,0.075,0.383,0.075c0.393,0,0.765-0.232,0.925-0.617C29.806,20.695,29.563,20.109,29.054,19.899zM22.86,21.312c-0.391-0.391-1.023-0.391-1.414,0.001c-0.391,0.39-0.39,1.022,0,1.413l3.434,3.429c0.195,0.195,0.45,0.293,0.706,0.293s0.513-0.098,0.708-0.293c0.391-0.392,0.389-1.025,0-1.415L22.86,21.312zM20.029,23.675c-0.211-0.511-0.796-0.752-1.307-0.541c-0.51,0.212-0.752,0.797-0.54,1.308l1.86,4.48c0.159,0.385,0.531,0.617,0.925,0.617c0.128,0,0.258-0.024,0.383-0.076c0.511-0.211,0.752-0.797,0.54-1.309L20.029,23.675zM15.512,23.778c-0.553,0-1,0.448-1,1l0.004,4.851c0,0.553,0.449,0.999,1,0.999c0.553,0,1-0.448,0.998-1l-0.003-4.852C16.511,24.226,16.062,23.777,15.512,23.778zM12.296,23.142c-0.51-0.21-1.094,0.031-1.306,0.543l-1.852,4.483c-0.21,0.511,0.033,1.096,0.543,1.307c0.125,0.052,0.254,0.076,0.382,0.076c0.392,0,0.765-0.234,0.924-0.619l1.853-4.485C13.051,23.937,12.807,23.353,12.296,23.142zM9.57,21.325c-0.392-0.391-1.025-0.389-1.415,0.002L4.729,24.76c-0.391,0.392-0.389,1.023,0.002,1.415c0.195,0.194,0.45,0.292,0.706,0.292c0.257,0,0.513-0.098,0.708-0.293l3.427-3.434C9.961,22.349,9.961,21.716,9.57,21.325zM7.746,18.604c-0.213-0.509-0.797-0.751-1.307-0.54L1.96,19.925c-0.511,0.212-0.752,0.798-0.54,1.308c0.16,0.385,0.531,0.616,0.924,0.616c0.127,0,0.258-0.024,0.383-0.076l4.479-1.861C7.715,19.698,7.957,19.113,7.746,18.604zM7.1,15.392c0-0.553-0.447-0.999-1-0.999l-4.851,0.006c-0.553,0-1.001,0.448-0.999,1.001c0.001,0.551,0.449,1,1,0.998l4.852-0.006C6.654,16.392,7.102,15.942,7.1,15.392zM1.944,10.869l4.485,1.85c0.125,0.053,0.254,0.076,0.381,0.076c0.393,0,0.766-0.232,0.925-0.618c0.212-0.511-0.032-1.097-0.544-1.306L2.708,9.021c-0.511-0.21-1.095,0.032-1.306,0.542C1.19,10.074,1.435,10.657,1.944,10.869zM8.137,9.451c0.195,0.193,0.449,0.291,0.705,0.291s0.513-0.098,0.709-0.295c0.391-0.389,0.389-1.023-0.004-1.414L6.113,4.609C5.723,4.219,5.088,4.221,4.699,4.612c-0.391,0.39-0.389,1.024,0.002,1.414L8.137,9.451zM10.964,7.084c0.16,0.384,0.532,0.615,0.923,0.615c0.128,0,0.258-0.025,0.384-0.077c0.51-0.212,0.753-0.798,0.54-1.307l-1.864-4.479c-0.212-0.51-0.798-0.751-1.308-0.539C9.129,1.51,8.888,2.096,9.1,2.605L10.964,7.084z\",\r\n        undo: \"M12.981,9.073V6.817l-12.106,6.99l12.106,6.99v-2.422c3.285-0.002,9.052,0.28,9.052,2.269c0,2.78-6.023,4.263-6.023,4.263v2.132c0,0,13.53,0.463,13.53-9.823C29.54,9.134,17.952,8.831,12.981,9.073z\",\r\n        detour: \"M29.342,15.5l-7.556-4.363v2.614H18.75c-1.441-0.004-2.423,1.002-2.875,1.784c-0.735,1.222-1.056,2.561-1.441,3.522c-0.135,0.361-0.278,0.655-0.376,0.817c-1.626,0-0.998,0-2.768,0c-0.213-0.398-0.571-1.557-0.923-2.692c-0.237-0.676-0.5-1.381-1.013-2.071C8.878,14.43,7.89,13.726,6.75,13.75H2.812v3.499c0,0,0.358,0,1.031,0h2.741c0.008,0.013,0.018,0.028,0.029,0.046c0.291,0.401,0.634,1.663,1.031,2.888c0.218,0.623,0.455,1.262,0.92,1.897c0.417,0.614,1.319,1.293,2.383,1.293H11c2.25,0,1.249,0,3.374,0c0.696,0.01,1.371-0.286,1.809-0.657c1.439-1.338,1.608-2.886,2.13-4.127c0.218-0.608,0.453-1.115,0.605-1.314c0.006-0.01,0.012-0.018,0.018-0.025h2.85v2.614L29.342,15.5zM10.173,14.539c0.568,0.76,0.874,1.559,1.137,2.311c0.04,0.128,0.082,0.264,0.125,0.399h2.58c0.246-0.697,0.553-1.479,1.005-2.228c0.252-0.438,0.621-0.887,1.08-1.272H9.43C9.735,14.003,9.99,14.277,10.173,14.539z\",\r\n        merge: \"M29.342,15.5l-7.556-4.363v2.613h-1.411c-0.788-0.01-1.331-0.241-2.019-0.743c-1.021-0.745-2.094-2.181-3.551-3.568C13.367,8.06,11.291,6.73,8.5,6.749H2.812v3.5H8.5c2.231,0.012,3.441,1.185,5.07,2.934c0.697,0.753,1.428,1.58,2.324,2.323c-1.396,1.165-2.412,2.516-3.484,3.501c-1.183,1.081-2.202,1.723-3.912,1.741H2.813v3.5h5.716c3.752,0.001,6.035-2.319,7.619-4.066c0.817-0.895,1.537-1.691,2.209-2.191c0.686-0.502,1.23-0.732,2.017-0.742h1.412v2.614L29.342,15.5z\",\r\n        split: \"M21.786,20.698c-1.792-0.237-2.912-1.331-4.358-2.886c-0.697-0.751-1.428-1.577-2.324-2.319c1.396-1.165,2.411-2.519,3.483-3.503c1.01-0.92,1.901-1.519,3.199-1.688v2.574l7.556-4.363L21.786,4.15v2.652c-3.34,0.266-5.45,2.378-6.934,4.013c-0.819,0.896-1.537,1.692-2.212,2.192c-0.685,0.501-1.227,0.731-2.013,0.742c-0.001,0-0.002,0-0.003,0H2.812v3.5h0.001v0.001c0,0,0.046-0.001,0.136-0.001h7.677c0.786,0.011,1.33,0.241,2.017,0.743c1.021,0.743,2.095,2.181,3.552,3.568c1.312,1.258,3.162,2.46,5.592,2.649v2.664l7.556-4.36l-7.556-4.361V20.698z\",\r\n        fork: \"M13.741,10.249h8.045v2.627l7.556-4.363l-7.556-4.363v2.598H9.826C11.369,7.612,12.616,8.922,13.741,10.249zM21.786,20.654c-0.618-0.195-1.407-0.703-2.291-1.587c-1.79-1.756-3.712-4.675-5.731-7.227c-2.049-2.486-4.159-4.972-7.451-5.091h-3.5v3.5h3.5c0.656-0.027,1.683,0.486,2.879,1.683c1.788,1.753,3.712,4.674,5.731,7.226c1.921,2.331,3.907,4.639,6.863,5.016v2.702l7.556-4.362l-7.556-4.362V20.654z\",\r\n        fork_alt: \"M21.786,12.873l7.556-4.361l-7.556-4.362v2.701c-2.929,0.374-4.905,2.64-6.809,4.952c0.545,0.703,1.08,1.418,1.604,2.127c0.192,0.26,0.383,0.514,0.573,0.77c0.802-1.043,1.584-1.999,2.341-2.74c0.884-0.885,1.673-1.393,2.291-1.588V12.873zM17.661,17.006c-1.893-2.371-3.815-5.354-6.009-7.537c-1.461-1.428-3.155-2.664-5.34-2.693h-3.5v3.5h3.5c0.971-0.119,2.845,1.333,4.712,3.771c1.895,2.371,3.815,5.354,6.011,7.537c1.326,1.297,2.847,2.426,4.751,2.645v2.646l7.556-4.363l-7.556-4.362v2.535C20.746,20.346,19.205,19.022,17.661,17.006z\",\r\n        exchange: \"M21.786,12.876l7.556-4.363l-7.556-4.363v2.598H2.813v3.5h18.973V12.876zM10.368,18.124l-7.556,4.362l7.556,4.362V24.25h18.974v-3.501H10.368V18.124z\",\r\n        shuffle: \"M21.786,20.654c-0.618-0.195-1.407-0.703-2.291-1.587c-0.757-0.742-1.539-1.698-2.34-2.741c-0.191,0.256-0.382,0.51-0.574,0.77c-0.524,0.709-1.059,1.424-1.604,2.127c1.904,2.31,3.88,4.578,6.809,4.952v2.701l7.556-4.362l-7.556-4.362V20.654zM9.192,11.933c0.756,0.741,1.538,1.697,2.339,2.739c0.195-0.262,0.39-0.521,0.587-0.788c0.52-0.703,1.051-1.412,1.592-2.11c-2.032-2.463-4.133-4.907-7.396-5.025h-3.5v3.5h3.5C6.969,10.223,7.996,10.735,9.192,11.933zM21.786,10.341v2.535l7.556-4.363l-7.556-4.363v2.647c-1.904,0.219-3.425,1.348-4.751,2.644c-2.196,2.183-4.116,5.167-6.011,7.538c-1.867,2.438-3.741,3.888-4.712,3.771h-3.5v3.5h3.5c2.185-0.029,3.879-1.266,5.34-2.693c2.194-2.184,4.116-5.167,6.009-7.538C19.205,12.003,20.746,10.679,21.786,10.341z\",\r\n        refresh: \"M24.083,15.5c-0.009,4.739-3.844,8.574-8.583,8.583c-4.741-0.009-8.577-3.844-8.585-8.583c0.008-4.741,3.844-8.577,8.585-8.585c1.913,0,3.665,0.629,5.09,1.686l-1.782,1.783l8.429,2.256l-2.26-8.427l-1.89,1.89c-2.072-1.677-4.717-2.688-7.587-2.688C8.826,3.418,3.418,8.826,3.416,15.5C3.418,22.175,8.826,27.583,15.5,27.583S27.583,22.175,27.583,15.5H24.083z\",\r\n        ccw: \"M24.249,15.499c-0.009,4.832-3.918,8.741-8.75,8.75c-2.515,0-4.768-1.064-6.365-2.763l2.068-1.442l-7.901-3.703l0.744,8.694l2.193-1.529c2.244,2.594,5.562,4.242,9.26,4.242c6.767,0,12.249-5.482,12.249-12.249H24.249zM15.499,6.75c2.516,0,4.769,1.065,6.367,2.764l-2.068,1.443l7.901,3.701l-0.746-8.693l-2.192,1.529c-2.245-2.594-5.562-4.245-9.262-4.245C8.734,3.25,3.25,8.734,3.249,15.499H6.75C6.758,10.668,10.668,6.758,15.499,6.75z\",\r\n        acw: \"M19.275,3.849l1.695,8.56l1.875-1.642c2.311,3.59,1.72,8.415-1.584,11.317c-2.24,1.96-5.186,2.57-7.875,1.908l-0.84,3.396c3.75,0.931,7.891,0.066,11.02-2.672c4.768-4.173,5.521-11.219,1.94-16.279l2.028-1.775L19.275,3.849zM8.154,20.232c-2.312-3.589-1.721-8.416,1.582-11.317c2.239-1.959,5.186-2.572,7.875-1.909l0.842-3.398c-3.752-0.93-7.893-0.067-11.022,2.672c-4.765,4.174-5.519,11.223-1.939,16.283l-2.026,1.772l8.26,2.812l-1.693-8.559L8.154,20.232z\",\r\n        contract: \"M25.083,18.895l-8.428-2.259l2.258,8.428l1.838-1.837l7.053,7.053l2.476-2.476l-7.053-7.053L25.083,18.895zM5.542,11.731l8.428,2.258l-2.258-8.428L9.874,7.398L3.196,0.72L0.72,3.196l6.678,6.678L5.542,11.731zM7.589,20.935l-6.87,6.869l2.476,2.476l6.869-6.869l1.858,1.857l2.258-8.428l-8.428,2.258L7.589,20.935zM23.412,10.064l6.867-6.87l-2.476-2.476l-6.868,6.869l-1.856-1.856l-2.258,8.428l8.428-2.259L23.412,10.064z\",\r\n        expand: \"M25.545,23.328,17.918,15.623,25.534,8.007,27.391,9.864,29.649,1.436,21.222,3.694,23.058,5.53,15.455,13.134,7.942,5.543,9.809,3.696,1.393,1.394,3.608,9.833,5.456,8.005,12.98,15.608,5.465,23.123,3.609,21.268,1.351,29.695,9.779,27.438,7.941,25.6,15.443,18.098,23.057,25.791,21.19,27.638,29.606,29.939,27.393,21.5z\",\r\n        stop: \"M5.5,5.5h20v20h-20z\",\r\n        end: \"M21.167,5.5,21.167,13.681,6.684,5.318,6.684,25.682,21.167,17.318,21.167,25.5,25.5,25.5,25.5,5.5z\",\r\n        start: \"M24.316,5.318,9.833,13.682,9.833,5.5,5.5,5.5,5.5,25.5,9.833,25.5,9.833,17.318,24.316,25.682z\",\r\n        ff: \"M25.5,15.5,15.2,9.552,15.2,15.153,5.5,9.552,5.5,21.447,15.2,15.847,15.2,21.447z\",\r\n        rw: \"M5.5,15.499,15.8,21.447,15.8,15.846,25.5,21.447,25.5,9.552,15.8,15.152,15.8,9.552z\",\r\n        play: \"M6.684,25.682L24.316,15.5L6.684,5.318V25.682z\",\r\n\t\tarrowright: \"M11.166,23.963L22.359,17.5c1.43-0.824,1.43-2.175,0-3L11.166,8.037c-1.429-0.826-2.598-0.15-2.598,1.5v12.926C8.568,24.113,9.737,24.789,11.166,23.963z\",\r\n        arrowleft: \"M20.834,8.037L9.641,14.5c-1.43,0.824-1.43,2.175,0,3l11.193,6.463c1.429,0.826,2.598,0.15,2.598-1.5V9.537C23.432,7.887,22.263,7.211,20.834,8.037z\",\r\n        arrowup: \"M23.963,20.834L17.5,9.64c-0.825-1.429-2.175-1.429-3,0L8.037,20.834c-0.825,1.429-0.15,2.598,1.5,2.598h12.926C24.113,23.432,24.788,22.263,23.963,20.834z\",\r\n        arrowdown: \"M8.037,11.166L14.5,22.359c0.825,1.43,2.175,1.43,3,0l6.463-11.194c0.826-1.429,0.15-2.598-1.5-2.598H9.537C7.886,8.568,7.211,9.737,8.037,11.166z\",\r\n        arrowleft2: \"M21.871,9.814 15.684,16.001 21.871,22.188 18.335,25.725 8.612,16.001 18.335,6.276z\",\r\n        arrowright2: \"M10.129,22.186 16.316,15.999 10.129,9.812 13.665,6.276 23.389,15.999 13.665,25.725z\",\r\n        smile2: \"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM16,29.534C8.539,29.534,2.466,23.462,2.466,16C2.466,8.539,8.539,2.466,16,2.466c7.462,0,13.535,6.072,13.535,13.533C29.534,23.462,23.462,29.534,16,29.534zM11.104,14c0.932,0,1.688-1.483,1.688-3.312s-0.755-3.312-1.688-3.312s-1.688,1.483-1.688,3.312S10.172,14,11.104,14zM20.729,14c0.934,0,1.688-1.483,1.688-3.312s-0.756-3.312-1.688-3.312c-0.932,0-1.688,1.483-1.688,3.312S19.798,14,20.729,14zM8.143,21.189C10.458,24.243,13.148,26,16.021,26c2.969,0,5.745-1.868,8.11-5.109c-2.515,1.754-5.292,2.734-8.215,2.734C13.164,23.625,10.54,22.756,8.143,21.189z\",\r\n        smile: \"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM20.729,7.375c0.934,0,1.688,1.483,1.688,3.312S21.661,14,20.729,14c-0.932,0-1.688-1.483-1.688-3.312S19.798,7.375,20.729,7.375zM11.104,7.375c0.932,0,1.688,1.483,1.688,3.312S12.037,14,11.104,14s-1.688-1.483-1.688-3.312S10.172,7.375,11.104,7.375zM16.021,26c-2.873,0-5.563-1.757-7.879-4.811c2.397,1.564,5.021,2.436,7.774,2.436c2.923,0,5.701-0.98,8.215-2.734C21.766,24.132,18.99,26,16.021,26z\",\r\n        alarm: \"M8.179,20.115c-0.478,0.277-0.642,0.889-0.365,1.366c0.275,0.479,0.889,0.642,1.365,0.366c0.479-0.275,0.643-0.888,0.367-1.367C9.27,20.004,8.658,19.84,8.179,20.115zM9.18,12.239c-0.479-0.276-1.09-0.112-1.366,0.366s-0.111,1.09,0.365,1.366c0.479,0.276,1.09,0.113,1.367-0.366C9.821,13.126,9.657,12.516,9.18,12.239zM8.625,17.043c-0.001-0.552-0.448-0.999-1.001-1c-0.553,0-1,0.448-1,1c0,0.553,0.449,1,1,1C8.176,18.043,8.624,17.596,8.625,17.043zM16.312,3.957V3.031h1c0.275,0,0.5-0.225,0.5-0.5v-0.5c0-0.275-0.225-0.5-0.5-0.5h-3.625c-0.275,0-0.5,0.225-0.5,0.5v0.5c0,0.275,0.225,0.5,0.5,0.5h1v0.926C7.819,4.381,2.376,10.068,2.374,17.042C2.376,24.291,8.251,30.166,15.5,30.169c7.249-0.003,13.124-5.878,13.125-13.127C28.624,10.067,23.181,4.38,16.312,3.957zM15.5,27.166C9.909,27.157,5.385,22.633,5.375,17.042C5.385,11.451,9.909,6.927,15.5,6.917c5.59,0.01,10.115,4.535,10.124,10.125C25.615,22.633,21.091,27.157,15.5,27.166zM12.062,22.998c-0.478-0.275-1.089-0.111-1.366,0.367c-0.275,0.479-0.111,1.09,0.366,1.365c0.478,0.277,1.091,0.111,1.365-0.365C12.704,23.887,12.54,23.275,12.062,22.998zM12.062,11.088c0.479-0.276,0.642-0.888,0.366-1.366c-0.276-0.478-0.888-0.642-1.366-0.366s-0.642,0.888-0.366,1.366C10.973,11.2,11.584,11.364,12.062,11.088zM22.822,13.971c0.478-0.275,0.643-0.888,0.366-1.366c-0.275-0.478-0.89-0.642-1.366-0.366c-0.479,0.278-0.642,0.89-0.366,1.367C21.732,14.083,22.344,14.247,22.822,13.971zM15.501,23.92c-0.552,0-1,0.447-1,1c0,0.552,0.448,1,1,1s1-0.448,1-1C16.501,24.367,16.053,23.92,15.501,23.92zM19.938,9.355c-0.477-0.276-1.091-0.111-1.365,0.366c-0.275,0.48-0.111,1.091,0.366,1.367s1.089,0.112,1.366-0.366C20.581,10.245,20.418,9.632,19.938,9.355zM23.378,16.042c-0.554,0.002-1.001,0.45-1.001,1c0.001,0.552,0.448,1,1.001,1c0.551,0,1-0.447,1-1C24.378,16.492,23.929,16.042,23.378,16.042zM22.823,20.115c-0.48-0.275-1.092-0.111-1.367,0.365c-0.275,0.479-0.112,1.091,0.367,1.367c0.477,0.275,1.089,0.112,1.365-0.366C23.464,21.004,23.3,20.391,22.823,20.115zM15.501,8.167c-0.552,0-1,0.448-1,1l-0.466,7.343l-3.004,1.96c-0.478,0.277-0.642,0.889-0.365,1.366c0.275,0.479,0.889,0.642,1.365,0.366l3.305-1.676c0.055,0.006,0.109,0.017,0.166,0.017c0.828,0,1.5-0.672,1.5-1.5l-0.5-7.876C16.501,8.614,16.053,8.167,15.501,8.167zM18.939,22.998c-0.479,0.276-0.643,0.888-0.366,1.367c0.275,0.477,0.888,0.642,1.366,0.365c0.478-0.276,0.642-0.889,0.366-1.365C20.028,22.886,19.417,22.723,18.939,22.998zM11.197,3.593c-0.836-1.04-2.103-1.718-3.541-1.718c-2.52,0-4.562,2.042-4.562,4.562c0,0.957,0.297,1.843,0.8,2.576C5.649,6.484,8.206,4.553,11.197,3.593zM27.106,9.014c0.503-0.733,0.8-1.619,0.8-2.576c0-2.52-2.043-4.562-4.562-4.562c-1.438,0-2.704,0.678-3.541,1.717C22.794,4.553,25.351,6.484,27.106,9.014z\",\r\n        clock: \"M15.5,2.374C8.251,2.375,2.376,8.251,2.374,15.5C2.376,22.748,8.251,28.623,15.5,28.627c7.249-0.004,13.124-5.879,13.125-13.127C28.624,8.251,22.749,2.375,15.5,2.374zM15.5,25.623C9.909,25.615,5.385,21.09,5.375,15.5C5.385,9.909,9.909,5.384,15.5,5.374c5.59,0.01,10.115,4.535,10.124,10.125C25.615,21.09,21.091,25.615,15.5,25.623zM8.625,15.5c-0.001-0.552-0.448-0.999-1.001-1c-0.553,0-1,0.448-1,1c0,0.553,0.449,1,1,1C8.176,16.5,8.624,16.053,8.625,15.5zM8.179,18.572c-0.478,0.277-0.642,0.889-0.365,1.367c0.275,0.479,0.889,0.641,1.365,0.365c0.479-0.275,0.643-0.887,0.367-1.367C9.27,18.461,8.658,18.297,8.179,18.572zM9.18,10.696c-0.479-0.276-1.09-0.112-1.366,0.366s-0.111,1.09,0.365,1.366c0.479,0.276,1.09,0.113,1.367-0.366C9.821,11.584,9.657,10.973,9.18,10.696zM22.822,12.428c0.478-0.275,0.643-0.888,0.366-1.366c-0.275-0.478-0.89-0.642-1.366-0.366c-0.479,0.278-0.642,0.89-0.366,1.367C21.732,12.54,22.344,12.705,22.822,12.428zM12.062,21.455c-0.478-0.275-1.089-0.111-1.366,0.367c-0.275,0.479-0.111,1.09,0.366,1.365c0.478,0.277,1.091,0.111,1.365-0.365C12.704,22.344,12.54,21.732,12.062,21.455zM12.062,9.545c0.479-0.276,0.642-0.888,0.366-1.366c-0.276-0.478-0.888-0.642-1.366-0.366s-0.642,0.888-0.366,1.366C10.973,9.658,11.584,9.822,12.062,9.545zM22.823,18.572c-0.48-0.275-1.092-0.111-1.367,0.365c-0.275,0.479-0.112,1.092,0.367,1.367c0.477,0.275,1.089,0.113,1.365-0.365C23.464,19.461,23.3,18.848,22.823,18.572zM19.938,7.813c-0.477-0.276-1.091-0.111-1.365,0.366c-0.275,0.48-0.111,1.091,0.366,1.367s1.089,0.112,1.366-0.366C20.581,8.702,20.418,8.089,19.938,7.813zM23.378,14.5c-0.554,0.002-1.001,0.45-1.001,1c0.001,0.552,0.448,1,1.001,1c0.551,0,1-0.447,1-1C24.378,14.949,23.929,14.5,23.378,14.5zM15.501,6.624c-0.552,0-1,0.448-1,1l-0.466,7.343l-3.004,1.96c-0.478,0.277-0.642,0.889-0.365,1.365c0.275,0.479,0.889,0.643,1.365,0.367l3.305-1.676C15.39,16.99,15.444,17,15.501,17c0.828,0,1.5-0.671,1.5-1.5l-0.5-7.876C16.501,7.072,16.053,6.624,15.501,6.624zM15.501,22.377c-0.552,0-1,0.447-1,1s0.448,1,1,1s1-0.447,1-1S16.053,22.377,15.501,22.377zM18.939,21.455c-0.479,0.277-0.643,0.889-0.366,1.367c0.275,0.477,0.888,0.643,1.366,0.365c0.478-0.275,0.642-0.889,0.366-1.365C20.028,21.344,19.417,21.18,18.939,21.455z\",\r\n        stopwatch: \"M27.216,18.533c0-3.636-1.655-6.883-4.253-9.032l0.733-0.998l0.482,0.354c0.198,0.146,0.481,0.104,0.628-0.097l0.442-0.604c0.146-0.198,0.103-0.482-0.097-0.628l-2.052-1.506c-0.199-0.146-0.481-0.103-0.628,0.097L22.03,6.724c-0.146,0.199-0.104,0.482,0.096,0.628l0.483,0.354l-0.736,1.003c-1.28-0.834-2.734-1.419-4.296-1.699c0.847-0.635,1.402-1.638,1.403-2.778h-0.002c0-1.922-1.557-3.48-3.479-3.48c-1.925,0-3.48,1.559-3.48,3.48c0,1.141,0.556,2.144,1.401,2.778c-1.549,0.277-2.99,0.857-4.265,1.68L8.424,7.684l0.484-0.353c0.198-0.145,0.245-0.428,0.098-0.628l-0.44-0.604C8.42,5.899,8.136,5.855,7.937,6.001L5.881,7.5c-0.2,0.146-0.243,0.428-0.099,0.628l0.442,0.604c0.145,0.2,0.428,0.244,0.627,0.099l0.483-0.354l0.729,0.999c-2.615,2.149-4.282,5.407-4.282,9.057c0,6.471,5.245,11.716,11.718,11.716c6.47,0,11.716-5.243,11.718-11.716H27.216zM12.918,4.231c0.002-1.425,1.155-2.58,2.582-2.582c1.426,0.002,2.579,1.157,2.581,2.582c-0.002,1.192-0.812,2.184-1.908,2.482v-1.77h0.6c0.246,0,0.449-0.203,0.449-0.449V3.746c0-0.247-0.203-0.449-0.449-0.449h-2.545c-0.247,0-0.449,0.202-0.449,0.449v0.749c0,0.246,0.202,0.449,0.449,0.449h0.599v1.77C13.729,6.415,12.919,5.424,12.918,4.231zM15.5,27.554c-4.983-0.008-9.015-4.038-9.022-9.021c0.008-4.982,4.039-9.013,9.022-9.022c4.981,0.01,9.013,4.04,9.021,9.022C24.513,23.514,20.481,27.546,15.5,27.554zM15.5,12.138c0.476,0,0.861-0.385,0.861-0.86s-0.386-0.861-0.861-0.861s-0.861,0.386-0.861,0.861S15.024,12.138,15.5,12.138zM15.5,24.927c-0.476,0-0.861,0.386-0.861,0.861s0.386,0.861,0.861,0.861s0.861-0.386,0.861-0.861S15.976,24.927,15.5,24.927zM12.618,11.818c-0.237-0.412-0.764-0.553-1.176-0.315c-0.412,0.238-0.554,0.765-0.315,1.177l2.867,6.722c0.481,0.831,1.543,1.116,2.375,0.637c0.829-0.479,1.114-1.543,0.635-2.374L12.618,11.818zM18.698,24.07c-0.412,0.237-0.555,0.765-0.316,1.176c0.237,0.412,0.764,0.554,1.176,0.315c0.413-0.238,0.553-0.765,0.316-1.176C19.635,23.974,19.108,23.832,18.698,24.07zM8.787,15.65c0.412,0.238,0.938,0.097,1.176-0.315c0.237-0.413,0.097-0.938-0.314-1.176c-0.412-0.239-0.938-0.098-1.177,0.313C8.234,14.886,8.375,15.412,8.787,15.65zM22.215,21.413c-0.412-0.236-0.938-0.096-1.176,0.316c-0.238,0.412-0.099,0.938,0.314,1.176c0.41,0.238,0.937,0.098,1.176-0.314C22.768,22.178,22.625,21.652,22.215,21.413zM9.107,18.531c-0.002-0.476-0.387-0.86-0.861-0.86c-0.477,0-0.862,0.385-0.862,0.86c0.001,0.476,0.386,0.86,0.861,0.861C8.722,19.393,9.106,19.008,9.107,18.531zM21.896,18.531c0,0.477,0.384,0.862,0.859,0.86c0.476,0.002,0.862-0.382,0.862-0.859s-0.387-0.86-0.862-0.862C22.279,17.671,21.896,18.056,21.896,18.531zM8.787,21.413c-0.412,0.238-0.554,0.765-0.316,1.176c0.239,0.412,0.765,0.553,1.177,0.316c0.413-0.239,0.553-0.765,0.315-1.178C9.725,21.317,9.198,21.176,8.787,21.413zM21.352,14.157c-0.411,0.238-0.551,0.764-0.312,1.176c0.237,0.413,0.764,0.555,1.174,0.315c0.412-0.236,0.555-0.762,0.316-1.176C22.29,14.06,21.766,13.921,21.352,14.157zM12.304,24.067c-0.413-0.235-0.939-0.096-1.176,0.315c-0.238,0.413-0.098,0.939,0.312,1.178c0.413,0.236,0.939,0.096,1.178-0.315C12.857,24.832,12.715,24.308,12.304,24.067zM18.698,12.992c0.41,0.238,0.938,0.099,1.174-0.313c0.238-0.411,0.1-0.938-0.314-1.177c-0.414-0.238-0.937-0.097-1.177,0.315C18.144,12.229,18.286,12.755,18.698,12.992z\",\r\n        history: \"M10.666,18.292c0.275,0.479,0.889,0.644,1.365,0.367l3.305-1.677C15.39,16.99,15.444,17,15.501,17c0.828,0,1.5-0.671,1.5-1.5l-0.5-7.876c0-0.552-0.448-1-1-1c-0.552,0-1,0.448-1,1l-0.466,7.343l-3.004,1.96C10.553,17.204,10.389,17.816,10.666,18.292zM12.062,9.545c0.479-0.276,0.642-0.888,0.366-1.366c-0.276-0.478-0.888-0.642-1.366-0.366s-0.642,0.888-0.366,1.366C10.973,9.658,11.584,9.822,12.062,9.545zM8.179,18.572c-0.478,0.277-0.642,0.889-0.365,1.367c0.275,0.479,0.889,0.641,1.365,0.365c0.479-0.275,0.643-0.888,0.367-1.367C9.27,18.461,8.658,18.297,8.179,18.572zM9.18,10.696c-0.479-0.276-1.09-0.112-1.366,0.366s-0.111,1.09,0.365,1.366c0.479,0.276,1.09,0.113,1.367-0.366C9.821,11.584,9.657,10.973,9.18,10.696zM6.624,15.5c0,0.553,0.449,1,1,1c0.552,0,1-0.447,1.001-1c-0.001-0.552-0.448-0.999-1.001-1C7.071,14.5,6.624,14.948,6.624,15.5zM14.501,23.377c0,0.553,0.448,1,1,1c0.552,0,1-0.447,1-1s-0.448-1-1-1C14.949,22.377,14.501,22.824,14.501,23.377zM10.696,21.822c-0.275,0.479-0.111,1.09,0.366,1.365c0.478,0.276,1.091,0.11,1.365-0.365c0.277-0.479,0.113-1.09-0.365-1.367C11.584,21.18,10.973,21.344,10.696,21.822zM21.822,10.696c-0.479,0.278-0.643,0.89-0.366,1.367s0.888,0.642,1.366,0.365c0.478-0.275,0.643-0.888,0.365-1.366C22.913,10.584,22.298,10.42,21.822,10.696zM21.456,18.938c-0.274,0.479-0.112,1.092,0.367,1.367c0.477,0.274,1.089,0.112,1.364-0.365c0.276-0.479,0.112-1.092-0.364-1.367C22.343,18.297,21.73,18.461,21.456,18.938zM24.378,15.5c0-0.551-0.448-1-1-1c-0.554,0.002-1.001,0.45-1.001,1c0.001,0.552,0.448,1,1.001,1C23.93,16.5,24.378,16.053,24.378,15.5zM18.573,22.822c0.274,0.477,0.888,0.643,1.366,0.365c0.478-0.275,0.642-0.89,0.365-1.365c-0.277-0.479-0.888-0.643-1.365-0.367C18.46,21.732,18.296,22.344,18.573,22.822zM18.939,9.546c0.477,0.276,1.088,0.112,1.365-0.366c0.276-0.478,0.113-1.091-0.367-1.367c-0.477-0.276-1.09-0.111-1.364,0.366C18.298,8.659,18.462,9.27,18.939,9.546zM28.703,14.364C28.074,7.072,21.654,1.67,14.364,2.295c-3.254,0.281-6.118,1.726-8.25,3.877L4.341,4.681l-1.309,7.364l7.031-2.548L8.427,8.12c1.627-1.567,3.767-2.621,6.194-2.833c5.64-0.477,10.595,3.694,11.089,9.335c0.477,5.64-3.693,10.595-9.333,11.09c-5.643,0.476-10.599-3.694-11.092-9.333c-0.102-1.204,0.019-2.373,0.31-3.478l-3.27,1.186c-0.089,0.832-0.106,1.684-0.031,2.55c0.629,7.29,7.048,12.691,14.341,12.066C23.926,28.074,29.328,21.655,28.703,14.364z\",\r\n        future: \"M17.001,15.5l-0.5-7.876c0-0.552-0.448-1-1-1c-0.552,0-1,0.448-1,1l-0.466,7.343l-3.004,1.96c-0.478,0.277-0.642,0.89-0.365,1.365c0.275,0.479,0.889,0.644,1.365,0.367l3.305-1.677C15.39,16.99,15.444,17,15.501,17C16.329,17,17.001,16.329,17.001,15.5zM18.939,21.455c-0.479,0.277-0.644,0.889-0.366,1.367c0.274,0.477,0.888,0.643,1.366,0.365c0.478-0.275,0.642-0.89,0.365-1.365C20.027,21.344,19.417,21.18,18.939,21.455zM19.938,7.813c-0.477-0.276-1.09-0.111-1.364,0.366c-0.275,0.48-0.111,1.091,0.366,1.367c0.477,0.276,1.088,0.112,1.365-0.366C20.581,8.702,20.418,8.089,19.938,7.813zM21.823,20.305c0.477,0.274,1.089,0.112,1.364-0.365c0.276-0.479,0.112-1.092-0.364-1.367c-0.48-0.275-1.093-0.111-1.367,0.365C21.182,19.416,21.344,20.029,21.823,20.305zM22.822,12.428c0.478-0.275,0.643-0.888,0.365-1.366c-0.274-0.478-0.89-0.642-1.365-0.366c-0.479,0.278-0.643,0.89-0.366,1.367S22.344,12.705,22.822,12.428zM24.378,15.5c0-0.551-0.448-1-1-1c-0.554,0.002-1.001,0.45-1.001,1c0.001,0.552,0.448,1,1.001,1C23.93,16.5,24.378,16.053,24.378,15.5zM9.546,12.062c0.275-0.478,0.111-1.089-0.366-1.366c-0.479-0.276-1.09-0.112-1.366,0.366s-0.111,1.09,0.365,1.366C8.658,12.704,9.269,12.541,9.546,12.062zM6.624,15.5c0,0.553,0.449,1,1,1c0.552,0,1-0.447,1.001-1c-0.001-0.552-0.448-0.999-1.001-1C7.071,14.5,6.624,14.948,6.624,15.5zM9.179,20.305c0.479-0.275,0.643-0.888,0.367-1.367c-0.276-0.477-0.888-0.641-1.367-0.365c-0.478,0.277-0.642,0.889-0.365,1.367C8.089,20.418,8.703,20.58,9.179,20.305zM12.062,9.545c0.479-0.276,0.642-0.888,0.366-1.366c-0.276-0.478-0.888-0.642-1.366-0.366s-0.642,0.888-0.366,1.366C10.973,9.658,11.584,9.822,12.062,9.545zM14.501,23.377c0,0.553,0.448,1,1,1c0.552,0,1-0.447,1-1s-0.448-1-1-1C14.949,22.377,14.501,22.824,14.501,23.377zM10.696,21.822c-0.275,0.479-0.111,1.09,0.366,1.365c0.478,0.276,1.091,0.11,1.365-0.365c0.277-0.479,0.113-1.09-0.365-1.367C11.584,21.18,10.973,21.344,10.696,21.822zM28.674,14.087l-3.27-1.186c0.291,1.105,0.41,2.274,0.309,3.478c-0.492,5.639-5.449,9.809-11.091,9.333c-5.639-0.495-9.809-5.45-9.333-11.09c0.494-5.641,5.449-9.812,11.089-9.335c2.428,0.212,4.567,1.266,6.194,2.833l-1.637,1.377l7.031,2.548l-1.309-7.364l-1.771,1.492c-2.133-2.151-4.996-3.597-8.25-3.877C9.346,1.67,2.926,7.072,2.297,14.364c-0.625,7.291,4.777,13.71,12.066,14.339c7.293,0.625,13.713-4.776,14.342-12.066C28.779,15.771,28.762,14.919,28.674,14.087z\",\r\n        globeAlt2: \"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM8.251,7.48c0.122,0.055,0.255,0.104,0.28,0.137C8.57,7.668,8.621,7.823,8.557,7.861C8.492,7.9,8.39,7.887,8.376,7.771c-0.013-0.115-0.026-0.128-0.18-0.18c-0.022-0.007-0.035-0.01-0.051-0.015C8.18,7.544,8.216,7.512,8.251,7.48zM7.733,7.974c0.031,0.087,0.113,0.125,0,0.17C7.673,8.168,7.611,8.172,7.559,8.165C7.617,8.102,7.672,8.035,7.733,7.974zM16,27.533C9.639,27.533,4.466,22.36,4.466,16c0-0.085,0.011-0.168,0.013-0.254c0.004-0.003,0.008-0.006,0.012-0.009c0.129-0.102,0.283-0.359,0.334-0.45c0.052-0.089,0.181-0.154,0.116-0.256c-0.059-0.096-0.292-0.23-0.407-0.261c0.01-0.099,0.032-0.195,0.045-0.294c0.063,0.077,0.137,0.17,0.208,0.194c0.115,0.038,0.501,0.052,0.566,0.052c0.063,0,0.334,0.014,0.386-0.064c0.051-0.077,0.09-0.077,0.154-0.077c0.064,0,0.18,0.231,0.271,0.257c0.089,0.026,0.257,0.013,0.244,0.181c-0.012,0.166,0.077,0.309,0.167,0.321c0.09,0.013,0.296-0.194,0.296-0.194s0,0.322-0.012,0.438C6.846,15.698,7,16.124,7,16.124s0.193,0.397,0.244,0.488c0.052,0.09,0.27,0.36,0.27,0.476c0,0.117,0.026,0.297,0.104,0.297s0.155-0.206,0.244-0.335c0.091-0.128,0.117-0.31,0.155-0.438c0.039-0.129,0.039-0.36,0.039-0.45c0-0.091,0.076-0.168,0.257-0.245c0.181-0.077,0.309-0.296,0.463-0.412c0.155-0.116,0.142-0.309,0.452-0.309c0.308,0,0.282,0,0.36-0.078c0.077-0.077,0.154-0.128,0.192,0.013c0.039,0.142,0.257,0.347,0.296,0.399c0.039,0.052,0.116,0.193,0.104,0.348c-0.013,0.153,0.012,0.334,0.077,0.334c0.064,0,0.193-0.219,0.193-0.219s0.283-0.192,0.27,0.014c-0.014,0.205,0.025,0.425,0.025,0.552c0,0.13,0.232,0.438,0.232,0.362c0-0.079,0.103-0.296,0.103-0.413c0-0.114,0.064-0.063,0.231,0.051c0.167,0.116,0.283,0.349,0.283,0.349s0.168,0.154,0.193,0.219c0.026,0.064,0.206-0.025,0.244-0.104c0.039-0.076,0.065-0.115,0.167-0.141c0.104-0.026,0.231-0.026,0.271-0.168c0.039-0.142,0.154-0.308,0-0.502c-0.154-0.193-0.232-0.321-0.347-0.412c-0.117-0.09-0.206-0.322-0.206-0.322s0.244-0.218,0.321-0.296c0.079-0.077,0.193-0.025,0.207,0.064c0.013,0.091-0.115,0.168-0.141,0.361c-0.026,0.192,0.154,0.257,0.206,0.192c0.051-0.065,0.18-0.219,0.18-0.257c0-0.039-0.089-0.026-0.102-0.167c-0.013-0.142,0.166-0.245,0.23-0.207c0.066,0.039,0.477-0.051,0.67-0.154s0.308-0.322,0.425-0.412c0.116-0.089,0.515-0.386,0.489-0.527c-0.026-0.142,0.012-0.334-0.09-0.515c-0.103-0.18-0.232-0.295-0.283-0.373c-0.051-0.077,0.219-0.09,0.347-0.206c0.129-0.116,0-0.219-0.064-0.206c-0.064,0.013-0.232,0.052-0.296,0.039c-0.064-0.013-0.103-0.077-0.206-0.155c-0.102-0.077,0.026-0.192,0.091-0.179c0.064,0.013,0.23-0.129,0.308-0.193c0.077-0.064,0.193-0.115,0.154-0.051c-0.038,0.064-0.128,0.296-0.026,0.309c0.104,0.013,0.348-0.193,0.388-0.18c0.038,0.013,0.102,0.18,0.064,0.257c-0.039,0.077-0.039,0.206,0.013,0.193c0.051-0.013,0.154-0.129,0.18-0.09c0.027,0.039,0.154,0.116,0.09,0.257c-0.063,0.142-0.193,0.193-0.039,0.284c0.154,0.089,0.206,0.012,0.322-0.052c0.115-0.064,0.193-0.347,0.128-0.438c-0.064-0.09-0.218-0.27-0.218-0.334c0-0.064,0.257-0.064,0.257-0.167s0.09-0.18,0.18-0.219c0.091-0.039,0.206-0.206,0.244-0.154c0.039,0.052,0.271,0.116,0.334,0.039c0.064-0.077,0.4-0.36,0.605-0.515c0.206-0.154,0.283-0.334,0.336-0.515c0.051-0.18,0.128-0.296,0.102-0.437v0c0.077,0.18,0.09,0.309,0.077,0.45c-0.013,0.142,0,0.438,0.026,0.476c0.025,0.039,0.129,0.128,0.192,0.103c0.064-0.025-0.025-0.283-0.025-0.334c0-0.052,0.09-0.129,0.142-0.142c0.052-0.013,0-0.231-0.065-0.322c-0.063-0.09-0.154-0.142-0.102-0.154c0.051-0.013,0.115-0.116,0.077-0.142c-0.039-0.025-0.014-0.116-0.103-0.09c-0.065,0.019-0.241-0.015-0.235,0.095c-0.037-0.11-0.116-0.183-0.216-0.172c-0.116,0.013-0.181,0.077-0.296,0.077s-0.025-0.18-0.077-0.18c-0.051,0-0.168,0.167-0.231,0.077c-0.064-0.09,0.18-0.206,0.373-0.27c0.192-0.064,0.514-0.438,0.644-0.451c0.128-0.013,0.45,0.026,0.733,0.013c0.283-0.013,0.373-0.129,0.463-0.064s0.283,0.142,0.399,0.129c0.116-0.014,0.064,0,0.244-0.129c0.18-0.129,0.348-0.193,0.438-0.296c0.09-0.103,0.335-0.18,0.348-0.077c0.014,0.103-0.026,0.206,0.077,0.206s0.258-0.103,0.386-0.154c0.129-0.051,0.231-0.116,0.231-0.116s-0.527,0.36-0.655,0.438c-0.129,0.077-0.438,0.129-0.567,0.283c-0.128,0.155-0.205,0.206-0.192,0.374c0.014,0.167,0.231,0.386,0.128,0.54c-0.103,0.154-0.141,0.373-0.141,0.373s0.154-0.219,0.373-0.36s0.348-0.334,0.425-0.412s0.309-0.091,0.309-0.181s0.064-0.206,0.104-0.309c0.038-0.103-0.077-0.078,0-0.206c0.076-0.129,0.064-0.232,0.45-0.232s0.257,0.026,0.566,0.013c0.309-0.013,0.424-0.167,0.72-0.245c0.296-0.077,0.527-0.128,0.618-0.089c0.09,0.038,0.232,0.012,0.141-0.078c-0.089-0.09-0.295-0.219-0.193-0.245c0.104-0.026,0.207-0.039,0.246-0.142c0.039-0.103-0.142-0.283-0.039-0.386c0.104-0.103-0.077-0.231-0.207-0.257c-0.128-0.025-0.63,0.026-0.731-0.025c-0.104-0.052-0.271-0.116-0.322-0.078c-0.052,0.039-0.168,0.245-0.168,0.245s-0.09,0.025-0.168-0.09c-0.076-0.116-0.5-0.103-0.629-0.103s-0.271,0.025-0.413,0.039c-0.141,0.013-0.219,0.052-0.322-0.039c-0.102-0.09-0.243-0.129-0.296-0.167c-0.051-0.039-0.334-0.039-0.553-0.012c-0.218,0.025-0.438,0.025-0.438,0.025s-0.104-0.039-0.257-0.129c-0.154-0.09-0.309-0.154-0.361-0.154c-0.051,0-0.449,0.064-0.539,0c-0.091-0.064-0.181-0.103-0.245-0.103s-0.115-0.103-0.038-0.103s0.437-0.103,0.437-0.103s-0.103-0.142-0.231-0.142c-0.128,0-0.359-0.064-0.424-0.064s-0.014,0.064-0.142,0.039c-0.13-0.026-0.258-0.078-0.335-0.026c-0.076,0.051-0.258,0.128-0.064,0.18c0.193,0.052,0.373,0,0.425,0.078c0.052,0.077,0,0.115,0,0.167s-0.103,0.193-0.167,0.219c-0.064,0.025-0.143-0.039-0.27,0.025c-0.129,0.064-0.451,0.013-0.49,0.052c-0.038,0.039-0.115-0.103-0.18-0.077c-0.064,0.025-0.232,0.193-0.322,0.18c-0.089-0.013-0.206-0.103-0.206-0.206s-0.038-0.232-0.077-0.258c-0.038-0.025-0.322-0.039-0.425-0.025c-0.103,0.013-0.424,0.038-0.477,0.09c-0.052,0.052-0.193,0.09-0.283,0.09s-0.167-0.09-0.36-0.116c-0.192-0.026-0.617-0.039-0.669-0.026s-0.218-0.025-0.155-0.077c0.065-0.051,0.257-0.219,0.143-0.295c-0.117-0.078-0.375-0.078-0.489-0.09c-0.117-0.013-0.232-0.039-0.413-0.013c-0.181,0.026-0.219,0.116-0.296,0.039c-0.077-0.077,0.193,0.039-0.077-0.077c-0.27-0.116-0.399-0.103-0.477-0.064c-0.077,0.039,0.013,0.025-0.192,0.103c-0.206,0.078-0.322,0.116-0.374,0.129c-0.051,0.012-0.372-0.065-0.411-0.091c-0.038-0.025-0.181,0.013-0.309,0.064S9.895,7.025,9.767,7C9.638,6.973,9.432,6.973,9.303,7.025C9.174,7.076,9.084,7.076,8.956,7.166c-0.13,0.09-0.373,0.142-0.373,0.142S8.522,7.305,8.448,7.301C10.474,5.541,13.111,4.466,16,4.466c6.361,0,11.534,5.173,11.534,11.534S22.36,27.533,16,27.533zM14.888,19.92c0,0,0.207-0.026,0.207-0.117c0-0.089-0.207-0.205-0.282-0.102c-0.078,0.102-0.219,0.205-0.207,0.296C14.625,20.138,14.888,19.92,14.888,19.92zM14.875,17.023c-0.181,0.233-0.167,0.182-0.296,0.128c-0.128-0.05-0.334,0.116-0.296,0.182c0.039,0.064,0.322-0.014,0.386,0.102c0.065,0.116,0.065,0.129,0.193,0.104c0.128-0.026,0.257-0.205,0.219-0.295C15.043,17.151,14.875,17.023,14.875,17.023zM14.837,18.245c-0.051,0-0.412,0.064-0.451,0.079c-0.039,0.013-0.27-0.025-0.27-0.025c-0.09,0.089-0.026,0.179,0.116,0.166s0.438-0.052,0.502-0.052C14.799,18.413,14.888,18.245,14.837,18.245zM14.284,14.668c-0.19,0.03-0.308,0.438-0.155,0.425C14.284,15.081,14.451,14.643,14.284,14.668zM14.734,16.959c-0.052-0.064-0.181-0.271-0.323-0.219c-0.042,0.017-0.153,0.245-0.012,0.245C14.541,16.985,14.786,17.023,14.734,16.959zM14.85,16.805c0.232-0.013,0.167-0.245-0.013-0.257C14.786,16.544,14.618,16.818,14.85,16.805zM17.591,18.928c-0.193-0.039-0.244-0.102-0.45-0.205c-0.207-0.103-0.67-0.103-0.682-0.039c-0.014,0.064,0,0-0.155-0.05c-0.153-0.054-0.271,0-0.309-0.091c-0.038-0.091-0.128-0.117-0.244-0.002c-0.097,0.097-0.142,0.104,0.078,0.143c0.218,0.039,0.283,0.039,0.192,0.141c-0.09,0.104-0.154,0.233-0.077,0.244c0.077,0.015,0.309-0.05,0.334,0c0.026,0.054-0.051,0.064,0.207,0.105c0.258,0.037,0.309,0.128,0.359,0.178c0.051,0.052,0.206,0.22,0.104,0.22c-0.104,0-0.219,0.128-0.142,0.143c0.077,0.013,0.309-0.039,0.321,0c0.014,0.037,0.143,0.283,0.271,0.271c0.129-0.013,0.206-0.244,0.27-0.31c0.065-0.064,0.322-0.104,0.349,0.012c0.026,0.116,0.104,0.233,0.257,0.311c0.154,0.076,0.335,0.154,0.348,0.089c0.013-0.064-0.077-0.309-0.181-0.346c-0.103-0.041-0.282-0.259-0.282-0.348c0-0.091-0.155-0.117-0.232-0.182C17.849,19.147,17.784,18.967,17.591,18.928zM8.042,17.023c-0.084,0.037-0.155,0.476,0,0.527c0.154,0.052,0.244-0.205,0.193-0.271C8.183,17.218,8.158,16.973,8.042,17.023zM15.429,18.117c-0.118-0.05-0.335,0.424-0.181,0.463C15.403,18.62,15.518,18.156,15.429,18.117zM15.687,13.703c0.077,0,0.18-0.051,0.18-0.193c0-0.142,0.18,0,0.27-0.013s0.141-0.103,0.18-0.206c0.005-0.013,0.008-0.021,0.009-0.027c-0.003,0.024-0.001,0.093,0.095,0.117c0.154,0.038,0.205-0.064,0.205-0.103s0.283-0.103,0.336-0.142c0.051-0.038,0.258-0.103,0.27-0.154c0.013-0.051,0-0.348,0.064-0.373c0.064-0.026,0.154-0.026,0.052-0.206c-0.104-0.181-0.104-0.348-0.232-0.271c-0.095,0.057-0.038,0.284-0.115,0.438s-0.142,0.296-0.193,0.296s-0.321,0.103-0.399,0.18c-0.076,0.077-0.45-0.064-0.501,0c-0.052,0.064-0.154,0.141-0.219,0.193c-0.065,0.051-0.245,0.013-0.207,0.167C15.518,13.562,15.609,13.703,15.687,13.703zM17.449,12.056c0.18-0.013,0.348-0.064,0.348-0.064s0.271,0.013,0.232-0.116c-0.04-0.128-0.322-0.141-0.375-0.128c-0.051,0.013-0.142-0.142-0.244-0.116c-0.096,0.023-0.128,0.155-0.128,0.193c0,0.039-0.36,0.115-0.245,0.219C17.153,12.146,17.27,12.069,17.449,12.056zM13.91,19.058c0.104,0.064,0.296-0.219,0.349-0.13c0.051,0.091-0.013,0.13,0.076,0.246c0.091,0.114,0.258,0.102,0.258,0.102s-0.013-0.309-0.155-0.387c-0.142-0.077-0.232-0.166-0.064-0.141c0.167,0.026,0.257-0.039,0.219-0.114c-0.039-0.078-0.283-0.039-0.361-0.026s-0.193-0.052-0.193-0.052c-0.077,0.024-0.063,0.089-0.09,0.219C13.923,18.902,13.807,18.992,13.91,19.058zM20.924,21.618c-0.231-0.052-0.077,0.039,0,0.154c0.077,0.116,0.232,0.176,0.258,0.05C21.193,21.759,21.155,21.67,20.924,21.618zM21.915,24.744c-0.077,0.064,0,0.091-0.219,0.22c-0.22,0.13-0.49,0.271-0.541,0.386c-0.052,0.116,0.051,0.181,0.258,0.192c0.206,0.013,0.154,0.053,0.296-0.103s0.271-0.244,0.438-0.373c0.168-0.128,0.168-0.322,0.168-0.322s-0.181-0.178-0.193-0.141C22.1,24.665,21.992,24.681,21.915,24.744zM18.504,21.618c0.014-0.116-0.219-0.116-0.334-0.207c-0.116-0.089-0.128-0.359-0.193-0.515c-0.064-0.153-0.192-0.257-0.322-0.397c-0.128-0.143-0.192-0.465-0.23-0.438c-0.039,0.025-0.154,0.399-0.064,0.515c0.09,0.116-0.039,0.348-0.103,0.503c-0.065,0.153-0.22-0.026-0.349-0.104c-0.129-0.078-0.308-0.128-0.398-0.219c-0.09-0.091,0.155-0.335,0.091-0.426c-0.065-0.09-0.412-0.013-0.45-0.013c-0.039,0-0.116-0.128-0.194-0.128c-0.077,0-0.064,0.258-0.064,0.258s-0.078-0.091-0.193-0.207c-0.117-0.115,0.012,0.077-0.103,0.193c-0.117,0.117-0.079,0.078-0.129,0.206c-0.051,0.129-0.167,0.077-0.283-0.052c-0.116-0.128-0.179-0.037-0.258,0c-0.077,0.039-0.141,0.259-0.18,0.309c-0.039,0.052-0.309,0.117-0.374,0.182c-0.064,0.062-0.09,0.27-0.09,0.322c0,0.05-0.271,0.023-0.361,0.089c-0.09,0.064-0.23,0.025-0.321,0.025c-0.09,0-0.399,0.244-0.502,0.308c-0.103,0.066-0.103,0.298-0.051,0.362c0.051,0.063,0.154,0.219,0.09,0.244c-0.064,0.026-0.104,0.206,0.051,0.359c0.154,0.155,0.103,0.194,0.115,0.271c0.014,0.077,0.078,0.104,0.181,0.232c0.102,0.128-0.181,0.231-0.219,0.31c-0.039,0.076,0.091,0.192,0.167,0.257c0.077,0.063,0.271,0.026,0.386-0.013c0.117-0.039,0.245-0.143,0.321-0.155c0.079-0.013,0.438-0.026,0.438-0.026s0.129-0.192,0.219-0.296c0.089-0.102,0.372-0.013,0.372-0.013s0.117-0.076,0.426-0.141c0.309-0.065,0.179,0.064,0.296,0.104c0.115,0.037,0.27,0.062,0.359,0.128c0.09,0.064,0,0.218-0.012,0.283c-0.014,0.064,0.219,0.038,0.23-0.026c0.014-0.064,0.077-0.128,0.207-0.205c0.128-0.078,0.025,0.114,0.076,0.231c0.052,0.116,0.129-0.157,0.129-0.026c0,0.039,0.039,0.078,0.051,0.116c0.014,0.039,0.181,0.052,0.181,0.18c0,0.13,0,0.207,0.039,0.231c0.038,0.026,0.244,0,0.335,0.155c0.089,0.154,0.154,0.013,0.205-0.052c0.052-0.064,0.231,0.026,0.283,0.078c0.052,0.05,0.193-0.104,0.387-0.155c0.192-0.051,0.167-0.039,0.219-0.115c0.051-0.078,0.09-0.283,0.205-0.438c0.115-0.153,0.271-0.424,0.271-0.631c0-0.206-0.014-0.682-0.155-0.899C18.761,21.953,18.492,21.733,18.504,21.618zM18.029,24.77c-0.065-0.013-0.207-0.062-0.207-0.062c-0.142,0.141,0.142,0.141,0.104,0.283c-0.039,0.141,0.193,0.089,0.257,0.064c0.063-0.027,0.22-0.323,0.193-0.399C18.351,24.577,18.093,24.783,18.029,24.77zM22.803,24.178c-0.052,0-0.077,0.064-0.192,0c-0.117-0.063-0.091-0.037-0.168-0.167c-0.077-0.127-0.091-0.296-0.219-0.23c-0.051,0.025,0,0.168,0.051,0.218c0.053,0.052,0.077,0.231,0.064,0.283c-0.012,0.052-0.231,0.116-0.129,0.18c0.104,0.064,0.297,0,0.271,0.078c-0.025,0.077-0.129,0.179-0.013,0.205c0.115,0.025,0.154-0.089,0.207-0.178c0.051-0.093,0.089-0.169,0.179-0.221C22.944,24.294,22.854,24.178,22.803,24.178zM22.815,21.18c0.168,0.064,0.464-0.231,0.347-0.27C23.047,20.871,22.815,21.18,22.815,21.18zM13.923,19.906c-0.029,0.115,0.193,0.167,0.206,0.039C14.141,19.816,13.949,19.803,13.923,19.906zM14.27,16.47c-0.064,0.065-0.257,0.193-0.283,0.31c-0.025,0.115,0.309-0.182,0.399-0.296c0.091-0.117,0.27-0.052,0.308-0.117c0.04-0.063,0.04-0.063,0.04-0.063s-0.142-0.025-0.257-0.063c-0.117-0.039-0.258,0.102-0.193-0.104c0.064-0.206,0.257-0.167,0.219-0.322c-0.039-0.154-0.168-0.193-0.207-0.193c-0.09,0,0.013,0.141-0.116,0.231c-0.128,0.09-0.271,0.128-0.193,0.283C14.064,16.29,14.334,16.405,14.27,16.47zM13.254,19.751c0.013-0.076-0.142-0.192-0.206-0.192c-0.065,0-0.386-0.077-0.386-0.077c-0.058,0.023-0.135,0.045-0.158,0.077c-0.007-0.011-0.022-0.024-0.049-0.039c-0.142-0.075-0.309,0-0.361-0.102c-0.05-0.104-0.127-0.104-0.179-0.039c-0.094,0.117,0.025,0.206,0.063,0.231c0.038,0.024,0.181,0.052,0.309,0.039c0.08-0.008,0.181-0.027,0.21-0.059c0.004,0.014,0.016,0.027,0.035,0.044c0.103,0.092,0.167,0.13,0.321,0.116C13.009,19.74,13.241,19.829,13.254,19.751zM12.881,18.992c0.065,0,0.193,0,0.283,0.026c0.09,0.025,0.386,0.05,0.373-0.064c-0.013-0.115-0.038-0.297,0.089-0.411c0.13-0.117,0.257-0.18,0.193-0.348c-0.063-0.167-0.193-0.271-0.103-0.349c0.09-0.076,0.192-0.102,0.192-0.166c0-0.065-0.217,0.18-0.244-0.246c-0.005-0.091-0.206,0.025-0.219,0.116c-0.012,0.091,0.142,0.167-0.103,0.167c-0.245,0-0.257,0.194-0.309,0.232c-0.052,0.039-0.103,0.051-0.207,0.076c-0.102,0.026-0.127,0.13-0.153,0.194c-0.025,0.063-0.206-0.116-0.257-0.064c-0.051,0.052-0.013,0.296,0.077,0.501C12.585,18.863,12.816,18.992,12.881,18.992zM11.979,18.928c0.065-0.077,0.038-0.192-0.063-0.18c-0.103,0.013-0.193-0.168-0.36-0.283c-0.168-0.114-0.296-0.194-0.451-0.36c-0.154-0.167-0.347-0.271-0.45-0.359c-0.104-0.091-0.257-0.13-0.322-0.116c-0.159,0.032,0.231,0.309,0.271,0.346c0.039,0.041,0.387,0.335,0.387,0.478s0.231,0.476,0.296,0.527c0.064,0.052,0.385,0.244,0.437,0.348c0.052,0.103,0.167,0.13,0.167-0.013C11.89,19.174,11.916,19.006,11.979,18.928zM11.002,17.474c0.064,0.232,0.193,0.464,0.244,0.555c0.052,0.089,0.271,0.217,0.348,0.281c0.077,0.064,0.192-0.024,0.143-0.102c-0.052-0.078-0.155-0.192-0.167-0.283c-0.013-0.091-0.078-0.233-0.181-0.387c-0.102-0.153-0.192-0.192-0.257-0.295c-0.064-0.104-0.296-0.297-0.296-0.297c-0.102,0.013-0.102,0.205-0.051,0.271C10.834,17.28,10.938,17.243,11.002,17.474z\",\r\n        globeAlt: \"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM27.436,17.39c0.001,0.002,0.004,0.002,0.005,0.004c-0.022,0.187-0.054,0.37-0.085,0.554c-0.015-0.012-0.034-0.025-0.047-0.036c-0.103-0.09-0.254-0.128-0.318-0.115c-0.157,0.032,0.229,0.305,0.267,0.342c0.009,0.009,0.031,0.03,0.062,0.058c-1.029,5.312-5.709,9.338-11.319,9.338c-4.123,0-7.736-2.18-9.776-5.441c0.123-0.016,0.24-0.016,0.28-0.076c0.051-0.077,0.102-0.241,0.178-0.331c0.077-0.089,0.165-0.229,0.127-0.292c-0.039-0.064,0.101-0.344,0.088-0.419c-0.013-0.076-0.127-0.256,0.064-0.407s0.394-0.382,0.407-0.444c0.012-0.063,0.166-0.331,0.152-0.458c-0.012-0.127-0.152-0.28-0.24-0.318c-0.09-0.037-0.28-0.05-0.356-0.151c-0.077-0.103-0.292-0.203-0.368-0.178c-0.076,0.025-0.204,0.05-0.305-0.015c-0.102-0.062-0.267-0.139-0.33-0.189c-0.065-0.05-0.229-0.088-0.305-0.088c-0.077,0-0.065-0.052-0.178,0.101c-0.114,0.153,0,0.204-0.204,0.177c-0.204-0.023,0.025-0.036,0.141-0.189c0.113-0.152-0.013-0.242-0.141-0.203c-0.126,0.038-0.038,0.115-0.241,0.153c-0.203,0.036-0.203-0.09-0.076-0.115s0.355-0.139,0.355-0.19c0-0.051-0.025-0.191-0.127-0.191s-0.077-0.126-0.229-0.291c-0.092-0.101-0.196-0.164-0.299-0.204c-0.09-0.579-0.15-1.167-0.15-1.771c0-2.844,1.039-5.446,2.751-7.458c0.024-0.02,0.048-0.034,0.069-0.036c0.084-0.009,0.31-0.025,0.51-0.059c0.202-0.034,0.418-0.161,0.489-0.153c0.069,0.008,0.241,0.008,0.186-0.042C8.417,8.2,8.339,8.082,8.223,8.082S8.215,7.896,8.246,7.896c0.03,0,0.186,0.025,0.178,0.11C8.417,8.091,8.471,8.2,8.625,8.167c0.156-0.034,0.132-0.162,0.102-0.195C8.695,7.938,8.672,7.853,8.642,7.794c-0.031-0.06-0.023-0.136,0.14-0.153C8.944,7.625,9.168,7.708,9.16,7.573s0-0.28,0.046-0.356C9.253,7.142,9.354,7.09,9.299,7.065C9.246,7.04,9.176,7.099,9.121,6.972c-0.054-0.127,0.047-0.22,0.108-0.271c0.02-0.015,0.067-0.06,0.124-0.112C11.234,5.257,13.524,4.466,16,4.466c3.213,0,6.122,1.323,8.214,3.45c-0.008,0.022-0.01,0.052-0.031,0.056c-0.077,0.013-0.166,0.063-0.179-0.051c-0.013-0.114-0.013-0.331-0.102-0.203c-0.089,0.127-0.127,0.127-0.127,0.191c0,0.063,0.076,0.127,0.051,0.241C23.8,8.264,23.8,8.341,23.84,8.341c0.036,0,0.126-0.115,0.239-0.141c0.116-0.025,0.319-0.088,0.332,0.026c0.013,0.115,0.139,0.152,0.013,0.203c-0.128,0.051-0.267,0.026-0.293-0.051c-0.025-0.077-0.114-0.077-0.203-0.013c-0.088,0.063-0.279,0.292-0.279,0.292s-0.306,0.139-0.343,0.114c-0.04-0.025,0.101-0.165,0.203-0.228c0.102-0.064,0.178-0.204,0.14-0.242c-0.038-0.038-0.088-0.279-0.063-0.343c0.025-0.063,0.139-0.152,0.013-0.216c-0.127-0.063-0.217-0.14-0.318-0.178s-0.216,0.152-0.305,0.204c-0.089,0.051-0.076,0.114-0.191,0.127c-0.114,0.013-0.189,0.165,0,0.254c0.191,0.089,0.255,0.152,0.204,0.204c-0.051,0.051-0.267-0.025-0.267-0.025s-0.165-0.076-0.268-0.076c-0.101,0-0.229-0.063-0.33-0.076c-0.102-0.013-0.306-0.013-0.355,0.038c-0.051,0.051-0.179,0.203-0.28,0.152c-0.101-0.051-0.101-0.102-0.241-0.051c-0.14,0.051-0.279-0.038-0.355,0.038c-0.077,0.076-0.013,0.076-0.255,0c-0.241-0.076-0.189,0.051-0.419,0.089s-0.368-0.038-0.432,0.038c-0.064,0.077-0.153,0.217-0.19,0.127c-0.038-0.088,0.126-0.241,0.062-0.292c-0.062-0.051-0.33-0.025-0.367,0.013c-0.039,0.038-0.014,0.178,0.011,0.229c0.026,0.05,0.064,0.254-0.011,0.216c-0.077-0.038-0.064-0.166-0.141-0.152c-0.076,0.013-0.165,0.051-0.203,0.077c-0.038,0.025-0.191,0.025-0.229,0.076c-0.037,0.051,0.014,0.191-0.051,0.203c-0.063,0.013-0.114,0.064-0.254-0.025c-0.14-0.089-0.14-0.038-0.178-0.012c-0.038,0.025-0.216,0.127-0.229,0.012c-0.013-0.114,0.025-0.152-0.089-0.229c-0.115-0.076-0.026-0.076,0.127-0.025c0.152,0.05,0.343,0.075,0.622-0.013c0.28-0.089,0.395-0.127,0.28-0.178c-0.115-0.05-0.229-0.101-0.406-0.127c-0.179-0.025-0.42-0.025-0.7-0.127c-0.279-0.102-0.343-0.14-0.457-0.165c-0.115-0.026-0.813-0.14-1.132-0.089c-0.317,0.051-1.193,0.28-1.245,0.318s-0.128,0.19-0.292,0.318c-0.165,0.127-0.47,0.419-0.712,0.47c-0.241,0.051-0.521,0.254-0.521,0.305c0,0.051,0.101,0.242,0.076,0.28c-0.025,0.038,0.05,0.229,0.191,0.28c0.139,0.05,0.381,0.038,0.393-0.039c0.014-0.076,0.204-0.241,0.217-0.127c0.013,0.115,0.14,0.292,0.114,0.368c-0.025,0.077,0,0.153,0.09,0.14c0.088-0.012,0.559-0.114,0.559-0.114s0.153-0.064,0.127-0.166c-0.026-0.101,0.166-0.241,0.203-0.279c0.038-0.038,0.178-0.191,0.014-0.241c-0.167-0.051-0.293-0.064-0.115-0.216s0.292,0,0.521-0.229c0.229-0.229-0.051-0.292,0.191-0.305c0.241-0.013,0.496-0.025,0.444,0.051c-0.05,0.076-0.342,0.242-0.508,0.318c-0.166,0.077-0.14,0.216-0.076,0.292c0.063,0.076,0.09,0.254,0.204,0.229c0.113-0.025,0.254-0.114,0.38-0.101c0.128,0.012,0.383-0.013,0.42-0.013c0.039,0,0.216,0.178,0.114,0.203c-0.101,0.025-0.229,0.013-0.445,0.025c-0.215,0.013-0.456,0.013-0.456,0.051c0,0.039,0.292,0.127,0.19,0.191c-0.102,0.063-0.203-0.013-0.331-0.026c-0.127-0.012-0.203,0.166-0.241,0.267c-0.039,0.102,0.063,0.28-0.127,0.216c-0.191-0.063-0.331-0.063-0.381-0.038c-0.051,0.025-0.203,0.076-0.331,0.114c-0.126,0.038-0.076-0.063-0.242-0.063c-0.164,0-0.164,0-0.164,0l-0.103,0.013c0,0-0.101-0.063-0.114-0.165c-0.013-0.102,0.05-0.216-0.013-0.241c-0.064-0.026-0.292,0.012-0.33,0.088c-0.038,0.076-0.077,0.216-0.026,0.28c0.052,0.063,0.204,0.19,0.064,0.152c-0.14-0.038-0.317-0.051-0.419,0.026c-0.101,0.076-0.279,0.241-0.279,0.241s-0.318,0.025-0.318,0.102c0,0.077,0,0.178-0.114,0.191c-0.115,0.013-0.268,0.05-0.42,0.076c-0.153,0.025-0.139,0.088-0.317,0.102s-0.204,0.089-0.038,0.114c0.165,0.025,0.418,0.127,0.431,0.241c0.014,0.114-0.013,0.242-0.076,0.356c-0.043,0.079-0.305,0.026-0.458,0.026c-0.152,0-0.456-0.051-0.584,0c-0.127,0.051-0.102,0.305-0.064,0.419c0.039,0.114-0.012,0.178-0.063,0.216c-0.051,0.038-0.065,0.152,0,0.204c0.063,0.051,0.114,0.165,0.166,0.178c0.051,0.013,0.215-0.038,0.279,0.025c0.064,0.064,0.127,0.216,0.165,0.178c0.039-0.038,0.089-0.203,0.153-0.166c0.064,0.039,0.216-0.012,0.331-0.025s0.177-0.14,0.292-0.204c0.114-0.063,0.05-0.063,0.013-0.14c-0.038-0.076,0.114-0.165,0.204-0.254c0.088-0.089,0.253-0.013,0.292-0.115c0.038-0.102,0.051-0.279,0.151-0.267c0.103,0.013,0.243,0.076,0.331,0.076c0.089,0,0.279-0.14,0.332-0.165c0.05-0.025,0.241-0.013,0.267,0.102c0.025,0.114,0.241,0.254,0.292,0.279c0.051,0.025,0.381,0.127,0.433,0.165c0.05,0.038,0.126,0.153,0.152,0.254c0.025,0.102,0.114,0.102,0.128,0.013c0.012-0.089-0.065-0.254,0.025-0.242c0.088,0.013,0.191-0.026,0.191-0.026s-0.243-0.165-0.331-0.203c-0.088-0.038-0.255-0.114-0.331-0.241c-0.076-0.127-0.267-0.153-0.254-0.279c0.013-0.127,0.191-0.051,0.292,0.051c0.102,0.102,0.356,0.241,0.445,0.33c0.088,0.089,0.229,0.127,0.267,0.242c0.039,0.114,0.152,0.241,0.19,0.292c0.038,0.051,0.165,0.331,0.204,0.394c0.038,0.063,0.165-0.012,0.229-0.063c0.063-0.051,0.179-0.076,0.191-0.178c0.013-0.102-0.153-0.178-0.203-0.216c-0.051-0.038,0.127-0.076,0.191-0.127c0.063-0.05,0.177-0.14,0.228-0.063c0.051,0.077,0.026,0.381,0.051,0.432c0.025,0.051,0.279,0.127,0.331,0.191c0.05,0.063,0.267,0.089,0.304,0.051c0.039-0.038,0.242,0.026,0.294,0.038c0.049,0.013,0.202-0.025,0.304-0.05c0.103-0.025,0.204-0.102,0.191,0.063c-0.013,0.165-0.051,0.419-0.179,0.546c-0.127,0.127-0.076,0.191-0.202,0.191c-0.06,0-0.113,0-0.156,0.021c-0.041-0.065-0.098-0.117-0.175-0.097c-0.152,0.038-0.344,0.038-0.47,0.19c-0.128,0.153-0.178,0.165-0.204,0.114c-0.025-0.051,0.369-0.267,0.317-0.331c-0.05-0.063-0.355-0.038-0.521-0.038c-0.166,0-0.305-0.102-0.433-0.127c-0.126-0.025-0.292,0.127-0.418,0.254c-0.128,0.127-0.216,0.038-0.331,0.038c-0.115,0-0.331-0.165-0.331-0.165s-0.216-0.089-0.305-0.089c-0.088,0-0.267-0.165-0.318-0.165c-0.05,0-0.19-0.115-0.088-0.166c0.101-0.05,0.202,0.051,0.101-0.229c-0.101-0.279-0.33-0.216-0.419-0.178c-0.088,0.039-0.724,0.025-0.775,0.025c-0.051,0-0.419,0.127-0.533,0.178c-0.116,0.051-0.318,0.115-0.369,0.14c-0.051,0.025-0.318-0.051-0.433,0.013c-0.151,0.084-0.291,0.216-0.33,0.216c-0.038,0-0.153,0.089-0.229,0.28c-0.077,0.19,0.013,0.355-0.128,0.419c-0.139,0.063-0.394,0.204-0.495,0.305c-0.102,0.101-0.229,0.458-0.355,0.623c-0.127,0.165,0,0.317,0.025,0.419c0.025,0.101,0.114,0.292-0.025,0.471c-0.14,0.178-0.127,0.266-0.191,0.279c-0.063,0.013,0.063,0.063,0.088,0.19c0.025,0.128-0.114,0.255,0.128,0.369c0.241,0.113,0.355,0.217,0.418,0.367c0.064,0.153,0.382,0.407,0.382,0.407s0.229,0.205,0.344,0.293c0.114,0.089,0.152,0.038,0.177-0.05c0.025-0.09,0.178-0.104,0.355-0.104c0.178,0,0.305,0.04,0.483,0.014c0.178-0.025,0.356-0.141,0.42-0.166c0.063-0.025,0.279-0.164,0.443-0.063c0.166,0.103,0.141,0.241,0.23,0.332c0.088,0.088,0.24,0.037,0.355-0.051c0.114-0.09,0.064-0.052,0.203,0.025c0.14,0.075,0.204,0.151,0.077,0.267c-0.128,0.113-0.051,0.293-0.128,0.47c-0.076,0.178-0.063,0.203,0.077,0.278c0.14,0.076,0.394,0.548,0.47,0.638c0.077,0.088-0.025,0.342,0.064,0.495c0.089,0.151,0.178,0.254,0.077,0.331c-0.103,0.075-0.28,0.216-0.292,0.47s0.051,0.431,0.102,0.521s0.177,0.331,0.241,0.419c0.064,0.089,0.14,0.305,0.152,0.445c0.013,0.14-0.024,0.306,0.039,0.381c0.064,0.076,0.102,0.191,0.216,0.292c0.115,0.103,0.152,0.318,0.152,0.318s0.039,0.089,0.051,0.229c0.012,0.14,0.025,0.228,0.152,0.292c0.126,0.063,0.215,0.076,0.28,0.013c0.063-0.063,0.381-0.077,0.546-0.063c0.165,0.013,0.355-0.075,0.521-0.19s0.407-0.419,0.496-0.508c0.089-0.09,0.292-0.255,0.268-0.356c-0.025-0.101-0.077-0.203,0.024-0.254c0.102-0.052,0.344-0.152,0.356-0.229c0.013-0.077-0.09-0.395-0.115-0.457c-0.024-0.064,0.064-0.18,0.165-0.306c0.103-0.128,0.421-0.216,0.471-0.267c0.051-0.053,0.191-0.267,0.217-0.433c0.024-0.167-0.051-0.369,0-0.457c0.05-0.09,0.013-0.165-0.103-0.268c-0.114-0.102-0.089-0.407-0.127-0.457c-0.037-0.051-0.013-0.319,0.063-0.345c0.076-0.023,0.242-0.279,0.344-0.393c0.102-0.114,0.394-0.47,0.534-0.496c0.139-0.025,0.355-0.229,0.368-0.343c0.013-0.115,0.38-0.547,0.394-0.635c0.013-0.09,0.166-0.42,0.102-0.497c-0.062-0.076-0.559,0.115-0.622,0.141c-0.064,0.025-0.241,0.127-0.446,0.113c-0.202-0.013-0.114-0.177-0.127-0.254c-0.012-0.076-0.228-0.368-0.279-0.381c-0.051-0.012-0.203-0.166-0.267-0.317c-0.063-0.153-0.152-0.343-0.254-0.458c-0.102-0.114-0.165-0.38-0.268-0.559c-0.101-0.178-0.189-0.407-0.279-0.572c-0.021-0.041-0.045-0.079-0.067-0.117c0.118-0.029,0.289-0.082,0.31-0.009c0.024,0.088,0.165,0.279,0.19,0.419s0.165,0.089,0.178,0.216c0.014,0.128,0.14,0.433,0.19,0.47c0.052,0.038,0.28,0.242,0.318,0.318c0.038,0.076,0.089,0.178,0.127,0.369c0.038,0.19,0.076,0.444,0.179,0.482c0.102,0.038,0.444-0.064,0.508-0.102s0.482-0.242,0.635-0.255c0.153-0.012,0.179-0.115,0.368-0.152c0.191-0.038,0.331-0.177,0.458-0.28c0.127-0.101,0.28-0.355,0.33-0.444c0.052-0.088,0.179-0.152,0.115-0.253c-0.063-0.103-0.331-0.254-0.433-0.268c-0.102-0.012-0.089-0.178-0.152-0.178s-0.051,0.088-0.178,0.153c-0.127,0.063-0.255,0.19-0.344,0.165s0.026-0.089-0.113-0.203s-0.192-0.14-0.192-0.228c0-0.089-0.278-0.255-0.304-0.382c-0.026-0.127,0.19-0.305,0.254-0.19c0.063,0.114,0.115,0.292,0.279,0.368c0.165,0.076,0.318,0.204,0.395,0.229c0.076,0.025,0.267-0.14,0.33-0.114c0.063,0.024,0.191,0.253,0.306,0.292c0.113,0.038,0.495,0.051,0.559,0.051s0.33,0.013,0.381-0.063c0.051-0.076,0.089-0.076,0.153-0.076c0.062,0,0.177,0.229,0.267,0.254c0.089,0.025,0.254,0.013,0.241,0.179c-0.012,0.164,0.076,0.305,0.165,0.317c0.09,0.012,0.293-0.191,0.293-0.191s0,0.318-0.012,0.433c-0.014,0.113,0.139,0.534,0.139,0.534s0.19,0.393,0.241,0.482s0.267,0.355,0.267,0.47c0,0.115,0.025,0.293,0.103,0.293c0.076,0,0.152-0.203,0.24-0.331c0.091-0.126,0.116-0.305,0.153-0.432c0.038-0.127,0.038-0.356,0.038-0.444c0-0.09,0.075-0.166,0.255-0.242c0.178-0.076,0.304-0.292,0.456-0.407c0.153-0.115,0.141-0.305,0.446-0.305c0.305,0,0.278,0,0.355-0.077c0.076-0.076,0.151-0.127,0.19,0.013c0.038,0.14,0.254,0.343,0.292,0.394c0.038,0.052,0.114,0.191,0.103,0.344c-0.013,0.152,0.012,0.33,0.075,0.33s0.191-0.216,0.191-0.216s0.279-0.189,0.267,0.013c-0.014,0.203,0.025,0.419,0.025,0.545c0,0.053,0.042,0.135,0.088,0.21c-0.005,0.059-0.004,0.119-0.009,0.178C27.388,17.153,27.387,17.327,27.436,17.39zM20.382,12.064c0.076,0.05,0.102,0.127,0.152,0.203c0.052,0.076,0.14,0.05,0.203,0.114c0.063,0.064-0.178,0.14-0.075,0.216c0.101,0.077,0.151,0.381,0.165,0.458c0.013,0.076-0.279,0.114-0.369,0.102c-0.089-0.013-0.354-0.102-0.445-0.127c-0.089-0.026-0.139-0.343-0.025-0.331c0.116,0.013,0.141-0.025,0.267-0.139c0.128-0.115-0.189-0.166-0.278-0.191c-0.089-0.025-0.268-0.305-0.331-0.394c-0.062-0.089-0.014-0.228,0.141-0.331c0.076-0.051,0.279,0.063,0.381,0c0.101-0.063,0.203-0.14,0.241-0.165c0.039-0.025,0.293,0.038,0.33,0.114c0.039,0.076,0.191,0.191,0.141,0.229c-0.052,0.038-0.281,0.076-0.356,0c-0.075-0.077-0.255,0.012-0.268,0.152C20.242,12.115,20.307,12.013,20.382,12.064zM16.875,12.28c-0.077-0.025,0.025-0.178,0.102-0.229c0.075-0.051,0.164-0.178,0.241-0.305c0.076-0.127,0.178-0.14,0.241-0.127c0.063,0.013,0.203,0.241,0.241,0.318c0.038,0.076,0.165-0.026,0.217-0.051c0.05-0.025,0.127-0.102,0.14-0.165s0.127-0.102,0.254-0.102s0.013,0.102-0.076,0.127c-0.09,0.025-0.038,0.077,0.113,0.127c0.153,0.051,0.293,0.191,0.459,0.279c0.165,0.089,0.19,0.267,0.088,0.292c-0.101,0.025-0.406,0.051-0.521,0.038c-0.114-0.013-0.254-0.127-0.419-0.153c-0.165-0.025-0.369-0.013-0.433,0.077s-0.292,0.05-0.395,0.05c-0.102,0-0.228,0.127-0.253,0.077C16.875,12.534,16.951,12.306,16.875,12.28zM17.307,9.458c0.063-0.178,0.419,0.038,0.355,0.127C17.599,9.675,17.264,9.579,17.307,9.458zM17.802,18.584c0.063,0.102-0.14,0.431-0.254,0.407c-0.113-0.027-0.076-0.318-0.038-0.382C17.548,18.545,17.769,18.529,17.802,18.584zM13.189,12.674c0.025-0.051-0.039-0.153-0.127-0.013C13.032,12.71,13.164,12.725,13.189,12.674zM20.813,8.035c0.141,0.076,0.339,0.107,0.433,0.013c0.076-0.076,0.013-0.204-0.05-0.216c-0.064-0.013-0.104-0.115,0.062-0.203c0.165-0.089,0.343-0.204,0.534-0.229c0.19-0.025,0.622-0.038,0.774,0c0.152,0.039,0.382-0.166,0.445-0.254s-0.203-0.152-0.279-0.051c-0.077,0.102-0.444,0.076-0.521,0.051c-0.076-0.025-0.686,0.102-0.812,0.102c-0.128,0-0.179,0.152-0.356,0.229c-0.179,0.076-0.42,0.191-0.509,0.229c-0.088,0.038-0.177,0.19-0.101,0.216C20.509,7.947,20.674,7.959,20.813,8.035zM14.142,12.674c0.064-0.089-0.051-0.217-0.114-0.217c-0.12,0-0.178,0.191-0.103,0.254C14.002,12.776,14.078,12.763,14.142,12.674zM14.714,13.017c0.064,0.025,0.114,0.102,0.165,0.114c0.052,0.013,0.217,0,0.167-0.127s-0.167-0.127-0.204-0.127c-0.038,0-0.203-0.038-0.267,0C14.528,12.905,14.65,12.992,14.714,13.017zM11.308,10.958c0.101,0.013,0.217-0.063,0.305-0.101c0.088-0.038,0.216-0.114,0.216-0.229c0-0.114-0.025-0.216-0.077-0.267c-0.051-0.051-0.14-0.064-0.216-0.051c-0.115,0.02-0.127,0.14-0.203,0.14c-0.076,0-0.165,0.025-0.14,0.114s0.077,0.152,0,0.19C11.117,10.793,11.205,10.946,11.308,10.958zM11.931,10.412c0.127,0.051,0.394,0.102,0.292,0.153c-0.102,0.051-0.28,0.19-0.305,0.267s0.216,0.153,0.216,0.153s-0.077,0.089-0.013,0.114c0.063,0.025,0.102-0.089,0.203-0.089c0.101,0,0.304,0.063,0.406,0.063c0.103,0,0.267-0.14,0.254-0.229c-0.013-0.089-0.14-0.229-0.254-0.28c-0.113-0.051-0.241-0.28-0.317-0.331c-0.076-0.051,0.076-0.178-0.013-0.267c-0.09-0.089-0.153-0.076-0.255-0.14c-0.102-0.063-0.191,0.013-0.254,0.089c-0.063,0.076-0.14-0.013-0.217,0.012c-0.102,0.035-0.063,0.166-0.012,0.229C11.714,10.221,11.804,10.361,11.931,10.412zM24.729,17.198c-0.083,0.037-0.153,0.47,0,0.521c0.152,0.052,0.241-0.202,0.191-0.267C24.868,17.39,24.843,17.147,24.729,17.198zM20.114,20.464c-0.159-0.045-0.177,0.166-0.304,0.306c-0.128,0.141-0.267,0.254-0.317,0.241c-0.052-0.013-0.331,0.089-0.242,0.279c0.089,0.191,0.076,0.382-0.013,0.472c-0.089,0.088,0.076,0.342,0.052,0.482c-0.026,0.139,0.037,0.229,0.215,0.229s0.242-0.064,0.318-0.229c0.076-0.166,0.088-0.331,0.164-0.47c0.077-0.141,0.141-0.434,0.179-0.51c0.038-0.075,0.114-0.316,0.102-0.457C20.254,20.669,20.204,20.489,20.114,20.464zM10.391,8.802c-0.069-0.06-0.229-0.102-0.306-0.11c-0.076-0.008-0.152,0.06-0.321,0.06c-0.168,0-0.279,0.067-0.347,0C9.349,8.684,9.068,8.65,9.042,8.692C9.008,8.749,8.941,8.751,9.008,8.87c0.069,0.118,0.12,0.186,0.179,0.178s0.262-0.017,0.288,0.051C9.5,9.167,9.569,9.226,9.712,9.184c0.145-0.042,0.263-0.068,0.296-0.119c0.033-0.051,0.263-0.059,0.263-0.059S10.458,8.861,10.391,8.802z\",\r\n        globe: \"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM19.158,23.269c-0.079,0.064-0.183,0.13-0.105,0.207c0.078,0.078-0.09,0.131-0.09,0.17s0.104,0.246,0.052,0.336c-0.052,0.092-0.091,0.223-0.13,0.301c-0.039,0.077-0.131,0.155-0.104,0.272c0.025,0.116-0.104,0.077-0.104,0.194c0,0.116,0.116,0.065,0.09,0.208c-0.025,0.144-0.09,0.183-0.09,0.285c0,0.104,0.064,0.247,0.064,0.286s-0.064,0.17-0.155,0.272c-0.092,0.104-0.155,0.17-0.144,0.233c0.014,0.065,0.104,0.144,0.091,0.184c-0.013,0.037-0.129,0.168-0.116,0.259c0.014,0.09,0.129,0.053,0.155,0.116c0.026,0.065-0.155,0.118-0.078,0.183c0.078,0.064,0.183,0.051,0.156,0.208c-0.019,0.112,0.064,0.163,0.126,0.198c-0.891,0.221-1.818,0.352-2.777,0.352C9.639,27.533,4.466,22.36,4.466,16c0-2.073,0.557-4.015,1.518-5.697c0.079-0.042,0.137-0.069,0.171-0.062c0.065,0.013,0.079,0.104,0.183,0.13c0.104,0.026,0.195-0.078,0.26-0.117c0.064-0.039,0.116-0.195,0.051-0.182c-0.065,0.013-0.234,0-0.234,0s0.183-0.104,0.183-0.169s0.025-0.169,0.129-0.208C6.83,9.655,6.83,9.681,6.765,9.837C6.7,9.993,6.896,9.928,6.973,9.863s0.13-0.013,0.272-0.104c0.143-0.091,0.143-0.143,0.221-0.143c0.078,0,0.221,0.143,0.299,0.091c0.077-0.052,0.299,0.065,0.429,0.065c0.129,0,0.545,0.169,0.624,0.169c0.078,0,0.312,0.09,0.325,0.259c0.013,0.169,0.09,0.156,0.168,0.156s0.26,0.065,0.26,0.13c0,0.065-0.052,0.325,0.078,0.39c0.129,0.064,0.247,0.169,0.299,0.143c0.052-0.026,0-0.233-0.064-0.26c-0.065-0.026-0.027-0.117-0.052-0.169c-0.026-0.051,0.078-0.051,0.117,0.039c0.039,0.091,0.143,0.26,0.208,0.26c0.064,0,0.208,0.156,0.168,0.247c-0.039,0.091,0.039,0.221,0.156,0.221c0.116,0,0.26,0.182,0.312,0.195c0.052,0.013,0.117,0.078,0.117,0.117c0,0.04,0.065,0.26,0.065,0.351c0,0.09-0.04,0.454-0.053,0.597s0.104,0.39,0.234,0.52c0.129,0.13,0.246,0.377,0.324,0.429c0.079,0.052,0.13,0.195,0.247,0.182c0.117-0.013,0.195,0.078,0.299,0.26c0.104,0.182,0.208,0.48,0.286,0.506c0.078,0.026,0.208,0.117,0.142,0.182c-0.064,0.064-0.168,0.208-0.051,0.208c0.117,0,0.156-0.065,0.247,0.053c0.09,0.116,0.208,0.181,0.194,0.26c-0.013,0.077,0.104,0.103,0.156,0.116c0.052,0.013,0.169,0.247,0.286,0.143c0.117-0.104-0.155-0.259-0.234-0.326c-0.078-0.064,0-0.207-0.182-0.35c-0.182-0.143-0.156-0.247-0.286-0.351c-0.13-0.104-0.233-0.195-0.104-0.286c0.13-0.091,0.143,0.091,0.195,0.208c0.052,0.116,0.324,0.351,0.441,0.454c0.117,0.104,0.326,0.468,0.39,0.468s0.247,0.208,0.247,0.208s0.103,0.168,0.064,0.22c-0.039,0.052,0.053,0.247,0.144,0.299c0.09,0.052,0.455,0.22,0.507,0.247c0.052,0.027,0.155,0.221,0.299,0.221c0.142,0,0.247,0.014,0.286,0.053c0.039,0.038,0.155,0.194,0.234,0.104c0.078-0.092,0.09-0.131,0.208-0.131c0.117,0,0.168,0.091,0.233,0.156c0.065,0.065,0.247,0.235,0.338,0.222c0.091-0.013,0.208,0.104,0.273,0.064s0.169,0.025,0.22,0.052c0.054,0.026,0.234,0.118,0.222,0.272c-0.013,0.157,0.103,0.195,0.182,0.234c0.078,0.039,0.182,0.13,0.248,0.195c0.064,0.063,0.206,0.077,0.246,0.116c0.039,0.039,0.065,0.117,0.182,0.052c0.116-0.064,0.092-0.181,0.092-0.181s0.129-0.026,0.194,0.026c0.064,0.05,0.104,0.22,0.144,0.246c0.038,0.026,0.115,0.221,0.063,0.362c-0.051,0.145-0.038,0.286-0.091,0.286c-0.052,0-0.116,0.17-0.195,0.209c-0.076,0.039-0.285,0.221-0.272,0.286c0.013,0.063,0.131,0.258,0.104,0.35c-0.025,0.091-0.194,0.195-0.154,0.338c0.038,0.144,0.312,0.183,0.323,0.312c0.014,0.131,0.209,0.417,0.235,0.546c0.025,0.13,0.246,0.272,0.246,0.453c0,0.184,0.312,0.3,0.377,0.312c0.063,0.013,0.182,0.131,0.272,0.17s0.169,0.116,0.233,0.221s0.053,0.261,0.053,0.299c0,0.039-0.039,0.44-0.078,0.674C19.145,23.021,19.235,23.203,19.158,23.269zM10.766,11.188c0.039,0.013,0.117,0.091,0.156,0.091c0.04,0,0.234,0.156,0.286,0.208c0.053,0.052,0.053,0.195-0.013,0.208s-0.104-0.143-0.117-0.208c-0.013-0.065-0.143-0.065-0.208-0.104C10.805,11.344,10.66,11.152,10.766,11.188zM27.51,16.41c-0.144,0.182-0.13,0.272-0.195,0.286c-0.064,0.013,0.065,0.065,0.09,0.194c0.022,0.112-0.065,0.224,0.063,0.327c-0.486,4.619-3.71,8.434-8.016,9.787c-0.007-0.011-0.019-0.025-0.021-0.034c-0.027-0.078-0.027-0.233,0.064-0.285c0.091-0.053,0.312-0.233,0.363-0.272c0.052-0.04,0.13-0.221,0.091-0.247c-0.038-0.026-0.232,0-0.26-0.039c-0.026-0.039-0.026-0.092,0.104-0.182c0.13-0.091,0.195-0.222,0.247-0.26c0.052-0.039,0.155-0.117,0.195-0.209c0.038-0.09-0.041-0.039-0.118-0.039s-0.117-0.142-0.117-0.207s0.195,0.026,0.339,0.052c0.143,0.024,0.077-0.065,0.064-0.142c-0.013-0.078,0.026-0.209,0.105-0.17c0.076,0.039,0.479-0.013,0.531-0.026c0.052-0.013,0.194-0.246,0.246-0.312c0.053-0.065,0.064-0.129,0-0.168c-0.065-0.04-0.143-0.184-0.168-0.221c-0.026-0.041-0.039-0.274-0.013-0.34c0.025-0.063,0,0.377,0.181,0.43c0.183,0.052,0.286,0.078,0.455-0.078c0.169-0.155,0.298-0.26,0.312-0.363c0.013-0.104,0.052-0.209,0.117-0.246c0.065-0.039,0.104,0.103,0.182-0.065c0.078-0.17,0.156-0.157,0.234-0.299c0.077-0.144-0.13-0.325,0.024-0.43c0.157-0.103,0.43-0.233,0.43-0.233s0.078-0.039,0.234-0.078c0.155-0.038,0.324-0.014,0.376-0.09c0.052-0.079,0.104-0.247,0.182-0.338c0.079-0.092,0.169-0.234,0.13-0.299c-0.039-0.065,0.104-0.352,0.091-0.429c-0.013-0.078-0.13-0.261,0.065-0.416s0.402-0.391,0.416-0.454c0.012-0.065,0.169-0.338,0.154-0.469c-0.012-0.129-0.154-0.285-0.245-0.325c-0.092-0.037-0.286-0.05-0.364-0.154s-0.299-0.208-0.377-0.182c-0.077,0.026-0.208,0.051-0.312-0.015c-0.104-0.063-0.272-0.143-0.337-0.194c-0.066-0.051-0.234-0.09-0.312-0.09s-0.065-0.053-0.182,0.103c-0.117,0.157,0,0.209-0.208,0.182c-0.209-0.024,0.025-0.038,0.144-0.194c0.115-0.155-0.014-0.247-0.144-0.207c-0.13,0.039-0.039,0.117-0.247,0.156c-0.207,0.038-0.207-0.092-0.077-0.117c0.13-0.026,0.363-0.143,0.363-0.194c0-0.053-0.026-0.196-0.13-0.196s-0.078-0.129-0.233-0.297c-0.156-0.17-0.351-0.274-0.508-0.249c-0.154,0.026-0.272,0.065-0.35-0.076c-0.078-0.144-0.169-0.17-0.222-0.247c-0.051-0.078-0.182,0-0.221-0.039s-0.039-0.039-0.039-0.039s-0.169,0.039-0.077-0.078c0.09-0.117,0.129-0.338,0.09-0.325c-0.038,0.013-0.104,0.196-0.168,0.183c-0.064-0.013-0.014-0.04-0.144-0.117c-0.13-0.078-0.337-0.013-0.337,0.052c0,0.065-0.065,0.117-0.065,0.117s-0.039-0.038-0.078-0.117c-0.039-0.078-0.221-0.091-0.312-0.013c-0.09,0.078-0.142-0.196-0.207-0.196s-0.194,0.065-0.26,0.184c-0.064,0.116-0.038,0.285-0.092,0.272c-0.05-0.013-0.063-0.233-0.05-0.312c0.012-0.079,0.155-0.208,0.05-0.234c-0.103-0.026-0.259,0.13-0.323,0.143c-0.065,0.013-0.195,0.104-0.273,0.209c-0.077,0.103-0.116,0.168-0.195,0.207c-0.077,0.039-0.193,0-0.167-0.039c0.025-0.039-0.222-0.181-0.261-0.13c-0.04,0.052-0.155,0.091-0.272,0.144c-0.117,0.052-0.222-0.065-0.247-0.117s-0.079-0.064-0.091-0.234c-0.013-0.168,0.027-0.351,0.065-0.454c0.038-0.104-0.195-0.312-0.286-0.3c-0.091,0.015-0.182,0.105-0.272,0.091c-0.092-0.012-0.052-0.038-0.195-0.038c-0.143,0-0.026-0.025,0-0.143c0.025-0.116-0.052-0.273,0.092-0.377c0.142-0.104,0.091-0.351,0-0.363c-0.092-0.014-0.261,0.039-0.377,0.026c-0.116-0.014-0.208,0.091-0.169,0.207c0.039,0.117-0.065,0.195-0.104,0.183c-0.039-0.013-0.09-0.078-0.234,0.026c-0.142,0.103-0.194,0.064-0.337-0.052c-0.143-0.118-0.299-0.234-0.325-0.416c-0.026-0.182-0.04-0.364,0.013-0.468c0.051-0.104,0.051-0.285-0.026-0.312c-0.078-0.025,0.09-0.155,0.181-0.181c0.092-0.026,0.234-0.143,0.26-0.195c0.026-0.052,0.156-0.04,0.298-0.04c0.143,0,0.169,0,0.312,0.078c0.143,0.078,0.169-0.039,0.169-0.078c0-0.039,0.052-0.117,0.208-0.104c0.156,0.013,0.376-0.052,0.416-0.013s0.116,0.195,0.194,0.143c0.079-0.051,0.104-0.143,0.131,0.014c0.025,0.155,0.09,0.39,0.208,0.429c0.116,0.039,0.052,0.194,0.168,0.207c0.115,0.013,0.17-0.246,0.131-0.337c-0.04-0.09-0.118-0.363-0.183-0.428c-0.064-0.065-0.064-0.234,0.064-0.286c0.13-0.052,0.442-0.312,0.532-0.389c0.092-0.079,0.338-0.144,0.261-0.248c-0.078-0.104-0.104-0.168-0.104-0.247s0.078-0.052,0.117,0s0.194-0.078,0.155-0.143c-0.038-0.064-0.026-0.155,0.065-0.143c0.091,0.013,0.116-0.065,0.078-0.117c-0.039-0.052,0.091-0.117,0.182-0.091c0.092,0.026,0.325-0.013,0.364-0.065c0.038-0.052-0.078-0.104-0.078-0.208c0-0.104,0.155-0.195,0.247-0.208c0.091-0.013,0.207,0,0.221-0.039c0.012-0.039,0.143-0.143,0.155-0.052c0.014,0.091,0,0.247,0.104,0.247c0.104,0,0.232-0.117,0.272-0.129c0.038-0.013,0.286-0.065,0.338-0.078c0.052-0.013,0.363-0.039,0.325-0.13c-0.039-0.09-0.078-0.181-0.118-0.22c-0.039-0.039-0.077,0.013-0.13,0.078c-0.051,0.065-0.143,0.065-0.168,0.013c-0.026-0.051,0.012-0.207-0.078-0.156c-0.092,0.052-0.104,0.104-0.157,0.078c-0.052-0.026-0.103-0.117-0.103-0.117s0.129-0.064,0.038-0.182c-0.09-0.117-0.221-0.091-0.35-0.025c-0.13,0.064-0.118,0.051-0.273,0.09s-0.234,0.078-0.234,0.078s0.209-0.129,0.299-0.208c0.091-0.078,0.209-0.117,0.286-0.195c0.078-0.078,0.285,0.039,0.285,0.039s0.105-0.104,0.105-0.039s-0.027,0.234,0.051,0.234c0.079,0,0.299-0.104,0.21-0.131c-0.093-0.026,0.129,0,0.219-0.065c0.092-0.065,0.194-0.065,0.247-0.09c0.052-0.026,0.092-0.143,0.182-0.143c0.092,0,0.13,0.117,0,0.195s-0.143,0.273-0.208,0.325c-0.064,0.052-0.026,0.117,0.078,0.104c0.104-0.013,0.194,0.013,0.286-0.013s0.143,0.026,0.168,0.065c0.026,0.039,0.104-0.039,0.104-0.039s0.169-0.039,0.221,0.026c0.053,0.064,0.092-0.039,0.053-0.104c-0.039-0.064-0.092-0.129-0.13-0.208c-0.039-0.078-0.091-0.104-0.194-0.078c-0.104,0.026-0.13-0.026-0.195-0.064c-0.065-0.04-0.118,0.052-0.065-0.04c0.053-0.09,0.078-0.117,0.117-0.195c0.039-0.078,0.209-0.221,0.039-0.259c-0.169-0.04-0.222-0.065-0.247-0.143c-0.026-0.078-0.221-0.221-0.272-0.221c-0.053,0-0.233,0-0.247-0.065c-0.013-0.065-0.143-0.208-0.208-0.273c-0.064-0.065-0.312-0.351-0.351-0.377c-0.039-0.026-0.091-0.013-0.208,0.143c-0.116,0.157-0.22,0.183-0.312,0.144c-0.091-0.039-0.104-0.026-0.193-0.13c-0.093-0.104,0.09-0.117,0.051-0.182c-0.04-0.064-0.247-0.091-0.377-0.104c-0.13-0.013-0.221-0.156-0.416-0.169c-0.194-0.013-0.428,0.026-0.493,0.026c-0.064,0-0.064,0.091-0.09,0.234c-0.027,0.143,0.09,0.182-0.027,0.208c-0.116,0.026-0.169,0.039-0.052,0.091c0.117,0.052,0.273,0.26,0.273,0.26s0,0.117-0.092,0.182c-0.09,0.065-0.182,0.13-0.233,0.053c-0.053-0.079-0.195-0.065-0.155,0.013c0.038,0.078,0.116,0.117,0.116,0.195c0,0.077,0.117,0.272,0.039,0.337c-0.078,0.065-0.168,0.014-0.233,0.026s-0.131-0.104-0.078-0.13c0.051-0.026-0.014-0.221-0.014-0.221s-0.155,0.221-0.143,0.104c0.014-0.117-0.064-0.13-0.064-0.221c0-0.091-0.079-0.13-0.194-0.104c-0.118,0.026-0.26-0.04-0.482-0.079c-0.22-0.039-0.311-0.064-0.493-0.156c-0.182-0.091-0.247-0.026-0.338-0.013c-0.091,0.013-0.052-0.182-0.169-0.207c-0.116-0.027-0.181,0.025-0.207-0.144c-0.026-0.168,0.039-0.208,0.324-0.39c0.286-0.182,0.247-0.26,0.468-0.286c0.22-0.026,0.325,0.026,0.325-0.039s0.052-0.325,0.052-0.195S16.95,9.109,16.832,9.2c-0.116,0.091-0.052,0.104,0.04,0.104c0.091,0,0.259-0.091,0.259-0.091s0.208-0.091,0.26-0.013c0.053,0.078,0.053,0.156,0.144,0.156s0.285-0.104,0.116-0.195c-0.168-0.091-0.272-0.078-0.376-0.182s-0.078-0.065-0.195-0.039c-0.116,0.026-0.116-0.039-0.156-0.039s-0.104,0.026-0.13-0.026c-0.025-0.052,0.014-0.065,0.145-0.065c0.129,0,0.285,0.039,0.285,0.039s0.155-0.052,0.194-0.065c0.039-0.013,0.247-0.039,0.208-0.155c-0.04-0.117-0.169-0.117-0.208-0.156s0.078-0.09,0.143-0.117c0.065-0.026,0.247,0,0.247,0s0.117,0.013,0.117-0.039S17.897,8.2,17.976,8.239s0,0.156,0.117,0.13c0.116-0.026,0.143,0,0.207,0.039c0.065,0.039-0.013,0.195-0.077,0.221c-0.065,0.025-0.169,0.077-0.026,0.09c0.144,0.014,0.246,0.014,0.246,0.014s0.092-0.091,0.131-0.169c0.038-0.078,0.104-0.026,0.155,0c0.052,0.025,0.247,0.065,0.065,0.117c-0.183,0.052-0.221,0.117-0.26,0.182c-0.038,0.065-0.053,0.104-0.221,0.065c-0.17-0.039-0.26-0.026-0.299,0.039c-0.039,0.064-0.013,0.273,0.053,0.247c0.063-0.026,0.129-0.026,0.207-0.052c0.078-0.026,0.39,0.026,0.467,0.013c0.078-0.013,0.209,0.13,0.248,0.104c0.039-0.026,0.117,0.052,0.194,0.104c0.078,0.052,0.052-0.117,0.194-0.013c0.144,0.104,0.065,0.104,0.144,0.104c0.076,0,0.246,0.013,0.246,0.013s0.014-0.129,0.144-0.104c0.13,0.026,0.245,0.169,0.232,0.064c-0.012-0.103,0.013-0.181-0.09-0.259c-0.104-0.078-0.272-0.13-0.299-0.169c-0.026-0.039-0.052-0.091-0.013-0.117c0.039-0.025,0.221,0.013,0.324,0.079c0.104,0.065,0.195,0.13,0.273,0.078c0.077-0.052,0.17-0.078,0.208-0.117c0.038-0.04,0.13-0.156,0.13-0.156s-0.391-0.051-0.441-0.117c-0.053-0.065-0.235-0.156-0.287-0.156s-0.194,0.091-0.246-0.039s-0.052-0.286-0.105-0.299c-0.05-0.013-0.597-0.091-0.674-0.13c-0.078-0.039-0.39-0.13-0.507-0.195s-0.286-0.156-0.389-0.156c-0.104,0-0.533,0.052-0.611,0.039c-0.078-0.013-0.312,0.026-0.403,0.039c-0.091,0.013,0.117,0.182-0.077,0.221c-0.195,0.039-0.169,0.065-0.13-0.13c0.038-0.195-0.131-0.247-0.299-0.169c-0.169,0.078-0.442,0.13-0.377,0.221c0.065,0.091-0.012,0.157,0.117,0.247c0.13,0.091,0.183,0.117,0.35,0.104c0.17-0.013,0.339,0.025,0.339,0.025s0,0.157-0.064,0.182c-0.065,0.026-0.169,0.026-0.196,0.104c-0.025,0.078-0.155,0.117-0.155,0.078s0.065-0.169-0.026-0.234c-0.09-0.065-0.117-0.078-0.221-0.013c-0.104,0.065-0.116,0.091-0.169-0.013C16.053,8.291,15.897,8.2,15.897,8.2s-0.104-0.129-0.182-0.194c-0.077-0.065-0.22-0.052-0.234,0.013c-0.013,0.064,0.026,0.129,0.078,0.247c0.052,0.117,0.104,0.337,0.013,0.351c-0.091,0.013-0.104,0.026-0.195,0.052c-0.091,0.026-0.13-0.039-0.13-0.143s-0.04-0.195-0.013-0.234c0.026-0.039-0.104,0.027-0.234,0c-0.13-0.025-0.233,0.052-0.104,0.092c0.13,0.039,0.157,0.194,0.039,0.233c-0.117,0.039-0.559,0-0.702,0s-0.35,0.039-0.39-0.039c-0.039-0.078,0.118-0.129,0.208-0.129c0.091,0,0.363,0.012,0.467-0.13c0.104-0.143-0.13-0.169-0.233-0.169c-0.104,0-0.183-0.039-0.299-0.155c-0.118-0.117,0.078-0.195,0.052-0.247c-0.026-0.052-0.156-0.014-0.272-0.014c-0.117,0-0.299-0.09-0.299,0.014c0,0.104,0.143,0.402,0.052,0.337c-0.091-0.064-0.078-0.156-0.143-0.234c-0.065-0.078-0.168-0.065-0.299-0.052c-0.129,0.013-0.35,0.052-0.415,0.039c-0.064-0.013-0.013-0.013-0.156-0.078c-0.142-0.065-0.208-0.052-0.312-0.117C12.091,7.576,12.182,7.551,12,7.538c-0.181-0.013-0.168,0.09-0.35,0.065c-0.182-0.026-0.234,0.013-0.416,0c-0.182-0.013-0.272-0.026-0.299,0.065c-0.025,0.091-0.078,0.247-0.156,0.247c-0.077,0-0.169,0.091,0.078,0.104c0.247,0.013,0.105,0.129,0.325,0.117c0.221-0.013,0.416-0.013,0.468-0.117c0.052-0.104,0.091-0.104,0.117-0.065c0.025,0.039,0.22,0.272,0.22,0.272s0.131,0.104,0.183,0.13c0.051,0.026-0.052,0.143-0.156,0.078c-0.104-0.065-0.299-0.051-0.377-0.116c-0.078-0.065-0.429-0.065-0.52-0.052c-0.09,0.013-0.247-0.039-0.299-0.039c-0.051,0-0.221,0.13-0.221,0.13S10.532,8.252,10.494,8.2c-0.039-0.052-0.104,0.052-0.156,0.065c-0.052,0.013-0.208-0.104-0.364-0.052C9.818,8.265,9.87,8.317,9.649,8.304s-0.272-0.052-0.35-0.039C9.22,8.278,9.22,8.278,9.22,8.278S9.233,8.33,9.143,8.382C9.052,8.434,8.986,8.499,8.921,8.421C8.857,8.343,8.818,8.343,8.779,8.33c-0.04-0.013-0.118-0.078-0.286-0.04C8.324,8.33,8.064,8.239,8.013,8.239c-0.04,0-0.313-0.015-0.491-0.033c2.109-2.292,5.124-3.74,8.478-3.74c2.128,0,4.117,0.589,5.83,1.598c-0.117,0.072-0.319,0.06-0.388,0.023c-0.078-0.043-0.158-0.078-0.475-0.061c-0.317,0.018-0.665,0.122-0.595,0.226c0.072,0.104-0.142,0.165-0.197,0.113c-0.055-0.052-0.309,0.06-0.293,0.165c0.016,0.104-0.039,0.225-0.175,0.199c-0.134-0.027-0.229,0.06-0.237,0.146c-0.007,0.087-0.309,0.147-0.332,0.147c-0.024,0-0.412-0.008-0.27,0.095c0.097,0.069,0.15,0.027,0.27,0.052c0.119,0.026,0.214,0.217,0.277,0.243c0.062,0.026,0.15,0,0.189-0.052c0.04-0.052,0.095-0.234,0.095-0.234s0,0.173,0.097,0.208c0.095,0.035,0.331-0.026,0.395-0.017c0.064,0.008,0.437,0.061,0.538,0.112c0.104,0.052,0.356,0.087,0.428,0.199c0.071,0.113,0.08,0.503,0.119,0.546c0.04,0.043,0.174-0.139,0.205-0.182c0.031-0.044,0.198-0.018,0.254,0.042c0.056,0.061,0.182,0.208,0.175,0.269C21.9,8.365,21.877,8.459,21.83,8.425c-0.048-0.034-0.127-0.025-0.096-0.095c0.032-0.069,0.048-0.217-0.015-0.217c-0.064,0-0.119,0-0.119,0s-0.12-0.035-0.199,0.095s-0.015,0.26,0.04,0.26s0.184,0,0.184,0.034c0,0.035-0.136,0.139-0.128,0.2c0.009,0.061,0.11,0.268,0.144,0.312c0.031,0.043,0.197,0.086,0.244,0.096c0.049,0.008-0.111,0.017-0.07,0.077c0.04,0.061,0.102,0.208,0.189,0.243c0.087,0.035,0.333,0.19,0.363,0.26c0.032,0.069,0.222-0.052,0.262-0.061c0.04-0.008,0.032,0.182,0.143,0.191c0.11,0.008,0.15-0.018,0.245-0.096s0.072-0.182,0.079-0.26c0.009-0.078,0-0.138,0.104-0.113c0.104,0.026,0.158-0.018,0.15-0.104c-0.008-0.087-0.095-0.191,0.07-0.217c0.167-0.026,0.254-0.138,0.357-0.138c0.103,0,0.389,0.043,0.419,0c0.032-0.043,0.167-0.243,0.254-0.251c0.067-0.007,0.224-0.021,0.385-0.042c1.582,1.885,2.561,4.284,2.673,6.905c-0.118,0.159-0.012,0.305,0.021,0.408c0.001,0.03,0.005,0.058,0.005,0.088c0,0.136-0.016,0.269-0.021,0.404C27.512,16.406,27.512,16.408,27.51,16.41zM17.794,12.084c-0.064,0.013-0.169-0.052-0.169-0.143s-0.091,0.169-0.04,0.247c0.053,0.078-0.104,0.169-0.155,0.169s-0.091-0.116-0.078-0.233c0.014-0.117-0.077-0.221-0.221-0.208c-0.143,0.014-0.208,0.13-0.259,0.169c-0.053,0.039-0.053,0.259-0.04,0.312s0.013,0.235-0.116,0.221c-0.118-0.013-0.092-0.233-0.079-0.312c0.014-0.078-0.039-0.273,0.014-0.376c0.053-0.104,0.207-0.143,0.312-0.156s0.324,0.065,0.363,0.052c0.04-0.014,0.222-0.014,0.312,0C17.729,11.837,17.858,12.071,17.794,12.084zM18.027,12.123c0.04,0.026,0.311-0.039,0.364,0.026c0.051,0.065-0.054,0.078-0.183,0.13c-0.129,0.052-0.169,0.039-0.221,0.104s-0.221,0.09-0.299,0.168c-0.078,0.079-0.217,0.125-0.246,0.065c-0.04-0.078,0.013-0.039,0.025-0.078c0.013-0.039,0.245-0.129,0.245-0.129S17.988,12.097,18.027,12.123zM16.988,11.668c-0.038,0.013-0.182-0.026-0.3-0.026c-0.116,0-0.091-0.078-0.143-0.064c-0.051,0.013-0.168,0.039-0.247,0.078c-0.078,0.039-0.208,0.03-0.208-0.04c0-0.104,0.052-0.078,0.221-0.143c0.169-0.065,0.352-0.247,0.429-0.169c0.078,0.078,0.221,0.169,0.312,0.182C17.144,11.5,17.026,11.655,16.988,11.668zM15.659,7.637c-0.079,0.026-0.347,0.139-0.321,0.199c0.01,0.023,0.078,0.069,0.19,0.052c0.113-0.018,0.276-0.035,0.355-0.043c0.078-0.009,0.095-0.139,0.009-0.147C15.805,7.689,15.736,7.611,15.659,7.637zM14.698,7.741c-0.061,0.026-0.243-0.043-0.338,0.018c-0.061,0.038-0.026,0.164,0.07,0.172c0.095,0.009,0.259-0.06,0.276-0.008c0.018,0.052,0.078,0.286,0.234,0.208c0.156-0.078,0.147-0.147,0.19-0.156c0.043-0.009-0.008-0.199-0.078-0.243C14.983,7.689,14.758,7.715,14.698,7.741zM14.385,7.005c0.017,0.044-0.008,0.078,0.113,0.095c0.121,0.018,0.173,0.035,0.243,0.035c0.069,0,0.042-0.113-0.018-0.19c-0.061-0.078-0.043-0.069-0.199-0.113c-0.156-0.043-0.312-0.043-0.416-0.035c-0.104,0.009-0.217-0.017-0.243,0.104c-0.013,0.062,0.07,0.112,0.174,0.112S14.368,6.962,14.385,7.005zM14.611,7.481c0.043,0.095,0.043,0.051,0.165,0.061C14.896,7.551,14.991,7.421,15,7.378c0.009-0.044-0.061-0.13-0.225-0.113c-0.165,0.017-0.667-0.026-0.736,0.034c-0.066,0.058,0,0.233-0.026,0.251c-0.026,0.017,0.009,0.095,0.077,0.078c0.069-0.017,0.104-0.182,0.157-0.182C14.299,7.447,14.568,7.386,14.611,7.481zM12.982,7.126c0.052,0.043,0.183,0.008,0.173-0.035c-0.008-0.043,0.053-0.217-0.051-0.225C13,6.858,12.854,6.962,12.697,7.014c-0.101,0.033-0.078,0.13-0.009,0.13S12.931,7.083,12.982,7.126zM13.72,7.282c-0.087,0.043-0.114,0.069-0.191,0.052c-0.078-0.017-0.078-0.156-0.217-0.13c-0.138,0.026-0.164,0.104-0.207,0.139s-0.139,0.061-0.173,0.043c-0.034-0.017-0.234-0.129-0.234-0.129s-0.416-0.018-0.433-0.07c-0.017-0.052-0.086-0.138-0.277-0.121s-0.52,0.13-0.572,0.13c-0.052,0,0.062,0.104-0.009,0.104c-0.069,0-0.155-0.008-0.181,0.069c-0.018,0.053,0.078,0.052,0.189,0.052c0.112,0,0.295,0,0.347-0.026c0.052-0.026,0.312-0.087,0.303-0.009c-0.009,0.079,0.104,0.199,0.164,0.182c0.061-0.017,0.183-0.13,0.243-0.086c0.061,0.043,0.07,0.146,0.13,0.173c0.061,0.025,0.226,0.025,0.304,0c0.077-0.027,0.294-0.027,0.389-0.009c0.095,0.018,0.373,0.069,0.399,0.018c0.026-0.053,0.104-0.061,0.112-0.113s0.051-0.216,0.051-0.216S13.806,7.239,13.72,7.282zM18.105,16.239c-0.119,0.021-0.091,0.252,0.052,0.21C18.3,16.407,18.223,16.217,18.105,16.239zM19.235,15.929c-0.104-0.026-0.221,0-0.299,0.013c-0.078,0.013-0.299,0.208-0.299,0.208s0.143,0.026,0.233,0.026c0.092,0,0.144,0.051,0.221,0.09c0.078,0.04,0.221-0.052,0.272-0.052c0.053,0,0.118,0.156,0.131-0.013C19.508,16.032,19.339,15.955,19.235,15.929zM15.616,7.507c-0.043-0.104-0.259-0.139-0.304-0.035C15.274,7.563,15.659,7.611,15.616,7.507zM18.093,15.292c0.143-0.026,0.064-0.144-0.053-0.13C17.922,15.175,17.949,15.318,18.093,15.292zM19.82,16.095c-0.119,0.022-0.092,0.253,0.051,0.211C20.015,16.264,19.937,16.074,19.82,16.095zM18.247,15.708c-0.09,0.013-0.285-0.09-0.389-0.182c-0.104-0.091-0.299-0.091-0.377-0.091c-0.077,0-0.39,0.091-0.39,0.091c-0.013,0.13,0.117,0.091,0.273,0.091s0.429-0.026,0.479,0.039c0.053,0.064,0.286,0.168,0.352,0.221c0.064,0.052,0.272,0.065,0.285,0.013S18.338,15.695,18.247,15.708zM16.698,7.412c-0.13-0.009-0.295-0.009-0.399,0c-0.104,0.008-0.182-0.069-0.26-0.113c-0.077-0.043-0.251-0.182-0.354-0.199c-0.104-0.017-0.086-0.017-0.303-0.069c-0.11-0.027-0.294-0.061-0.294-0.086c0-0.026-0.052,0.121,0.043,0.165c0.095,0.043,0.251,0.121,0.363,0.164c0.114,0.043,0.329,0.052,0.399,0.139c0.069,0.086,0.303,0.156,0.303,0.156l0.277,0.026c0,0,0.191-0.043,0.39-0.026c0.199,0.017,0.493,0.043,0.659,0.035c0.163-0.008,0.189-0.061,0.208-0.095c0.016-0.035-0.304-0.104-0.383-0.095C17.271,7.42,16.827,7.42,16.698,7.412zM17.182,9.404c-0.034,0.039,0.157,0.095,0.191,0.043C17.407,9.396,17.271,9.309,17.182,9.404zM17.764,9.585c0.086-0.035,0.043-0.139-0.079-0.104C17.547,9.521,17.676,9.62,17.764,9.585z\",\r\n        warning: \"M29.225,23.567l-3.778-6.542c-1.139-1.972-3.002-5.2-4.141-7.172l-3.778-6.542c-1.14-1.973-3.003-1.973-4.142,0L9.609,9.853c-1.139,1.972-3.003,5.201-4.142,7.172L1.69,23.567c-1.139,1.974-0.207,3.587,2.071,3.587h23.391C29.432,27.154,30.363,25.541,29.225,23.567zM16.536,24.58h-2.241v-2.151h2.241V24.58zM16.428,20.844h-2.023l-0.201-9.204h2.407L16.428,20.844z\",\r\n        code: \"M8.982,7.107L0.322,15.77l8.661,8.662l3.15-3.15L6.621,15.77l5.511-5.511L8.982,7.107zM21.657,7.107l-3.148,3.151l5.511,5.511l-5.511,5.511l3.148,3.15l8.662-8.662L21.657,7.107z\",\r\n        pensil: \"M25.31,2.872l-3.384-2.127c-0.854-0.536-1.979-0.278-2.517,0.576l-1.334,2.123l6.474,4.066l1.335-2.122C26.42,4.533,26.164,3.407,25.31,2.872zM6.555,21.786l6.474,4.066L23.581,9.054l-6.477-4.067L6.555,21.786zM5.566,26.952l-0.143,3.819l3.379-1.787l3.14-1.658l-6.246-3.925L5.566,26.952z\",\r\n        pen: \"M13.587,12.074c-0.049-0.074-0.11-0.147-0.188-0.202c-0.333-0.243-0.803-0.169-1.047,0.166c-0.244,0.336-0.167,0.805,0.167,1.048c0.303,0.22,0.708,0.167,0.966-0.091l-7.086,9.768l-2.203,7.997l6.917-4.577L26.865,4.468l-4.716-3.42l-1.52,2.096c-0.087-0.349-0.281-0.676-0.596-0.907c-0.73-0.529-1.751-0.369-2.28,0.363C14.721,6.782,16.402,7.896,13.587,12.074zM10.118,25.148L6.56,27.503l1.133-4.117L10.118,25.148zM14.309,11.861c2.183-3.225,1.975-4.099,3.843-6.962c0.309,0.212,0.664,0.287,1.012,0.269L14.309,11.861z\",\r\n        plus: \"M25.979,12.896 19.312,12.896 19.312,6.229 12.647,6.229 12.647,12.896 5.979,12.896 5.979,19.562 12.647,19.562 12.647,26.229 19.312,26.229 19.312,19.562 25.979,19.562z\",\r\n        minus: \"M25.979,12.896,5.979,12.896,5.979,19.562,25.979,19.562z\",\r\n        tshirt: \"M20.1,4.039c-0.681,1.677-2.32,2.862-4.24,2.862c-1.921,0-3.56-1.185-4.24-2.862L1.238,8.442l2.921,6.884l3.208-1.361V28h17.099V14.015l3.093,1.312l2.922-6.884L20.1,4.039z\",\r\n        sticker: \"M15.5,1.999c-1.042,0-1.916,0.377-2.57,1.088L2.895,13.138C2.302,13.784,1.999,14.58,1.999,15.5C1.999,22.943,8.057,29,15.5,29S29,22.943,29,15.5S22.943,1.999,15.5,1.999zM15.5,28C8.596,28,3,22.404,3,15.5c0-3.452,5.239-2.737,7.501-4.999C12.762,8.239,12.048,3,15.5,3C22.404,3,28,8.597,28,15.5S22.404,28,15.5,28z\",\r\n        page2: \"M23.024,5.673c-1.744-1.694-3.625-3.051-5.168-3.236c-0.084-0.012-0.171-0.019-0.263-0.021H7.438c-0.162,0-0.322,0.063-0.436,0.18C6.889,2.71,6.822,2.87,6.822,3.033v25.75c0,0.162,0.063,0.317,0.18,0.435c0.117,0.116,0.271,0.179,0.436,0.179h18.364c0.162,0,0.317-0.062,0.434-0.179c0.117-0.117,0.182-0.272,0.182-0.435V11.648C26.382,9.659,24.824,7.49,23.024,5.673zM22.157,6.545c0.805,0.786,1.529,1.676,2.069,2.534c-0.468-0.185-0.959-0.322-1.42-0.431c-1.015-0.228-2.008-0.32-2.625-0.357c0.003-0.133,0.004-0.283,0.004-0.446c0-0.869-0.055-2.108-0.356-3.2c-0.003-0.01-0.005-0.02-0.009-0.03C20.584,5.119,21.416,5.788,22.157,6.545zM25.184,28.164H8.052V3.646h9.542v0.002c0.416-0.025,0.775,0.386,1.05,1.326c0.25,0.895,0.313,2.062,0.312,2.871c0.002,0.593-0.027,0.991-0.027,0.991l-0.049,0.652l0.656,0.007c0.003,0,1.516,0.018,3,0.355c1.426,0.308,2.541,0.922,2.645,1.617c0.004,0.062,0.005,0.124,0.004,0.182V28.164z\",\r\n        page: \"M23.024,5.673c-1.744-1.694-3.625-3.051-5.168-3.236c-0.084-0.012-0.171-0.019-0.263-0.021H7.438c-0.162,0-0.322,0.063-0.436,0.18C6.889,2.71,6.822,2.87,6.822,3.033v25.75c0,0.162,0.063,0.317,0.18,0.435c0.117,0.116,0.271,0.179,0.436,0.179h18.364c0.162,0,0.317-0.062,0.434-0.179c0.117-0.117,0.182-0.272,0.182-0.435V11.648C26.382,9.659,24.824,7.49,23.024,5.673zM25.184,28.164H8.052V3.646h9.542v0.002c0.416-0.025,0.775,0.386,1.05,1.326c0.25,0.895,0.313,2.062,0.312,2.871c0.002,0.593-0.027,0.991-0.027,0.991l-0.049,0.652l0.656,0.007c0.003,0,1.516,0.018,3,0.355c1.426,0.308,2.541,0.922,2.645,1.617c0.004,0.062,0.005,0.124,0.004,0.182V28.164z\",\r\n        landscape1: \"M19.883,5.71H2.746c-0.163,0-0.319,0.071-0.435,0.188c-0.118,0.117-0.18,0.272-0.18,0.435v18.364c0,0.164,0.063,0.318,0.18,0.436c0.123,0.117,0.287,0.18,0.435,0.18h25.75c0.164,0,0.324-0.066,0.438-0.18c0.118-0.114,0.182-0.273,0.182-0.436V14.551c-0.002-0.102-0.01-0.188-0.021-0.271c-0.186-1.543-1.543-3.424-3.236-5.168C24.039,7.31,21.869,5.753,19.883,5.71zM26.914,12.314c-0.008-0.005-0.019-0.007-0.029-0.01c-1.092-0.293-2.33-0.355-3.199-0.355c-0.162,0-0.312,0.002-0.445,0.004c-0.037-0.604-0.129-1.604-0.356-2.625c-0.11-0.461-0.246-0.94-0.433-1.42c0.857,0.541,1.748,1.264,2.535,2.068C25.74,10.718,26.41,11.551,26.914,12.314zM3.365,6.947h16.517c0.058,0,0.12,0,0.183,0.004c0.694,0.105,1.307,1.221,1.616,2.646c0.335,1.484,0.354,2.997,0.354,3l0.007,0.656l0.651-0.051c0,0,0.398-0.027,0.99-0.025c0.809,0,1.977,0.062,2.871,0.312c0.939,0.275,1.352,0.635,1.326,1.051h0.002v9.542H3.365V6.951V6.947z\",\r\n        landscape2: \"M19.883,5.71H2.746c-0.163,0-0.319,0.071-0.435,0.188c-0.118,0.117-0.18,0.272-0.18,0.435v18.364c0,0.164,0.063,0.318,0.18,0.436c0.123,0.117,0.287,0.18,0.435,0.18h25.75c0.164,0,0.324-0.066,0.438-0.18c0.118-0.114,0.182-0.273,0.182-0.436V14.551c-0.002-0.102-0.01-0.188-0.021-0.271c-0.186-1.543-1.543-3.424-3.236-5.168C24.039,7.31,21.869,5.753,19.883,5.71zM3.365,6.947h16.517c0.058,0,0.12,0,0.183,0.004c0.694,0.105,1.307,1.221,1.616,2.646c0.335,1.484,0.354,2.997,0.354,3l0.007,0.656l0.651-0.051c0,0,0.398-0.027,0.99-0.025c0.809,0,1.977,0.062,2.871,0.312c0.939,0.275,1.352,0.635,1.326,1.051h0.002v9.542H3.365V6.951V6.947z\",\r\n        plugin: \"M26.33,15.836l-3.893-1.545l3.136-7.9c0.28-0.705-0.064-1.505-0.771-1.785c-0.707-0.28-1.506,0.065-1.785,0.771l-3.136,7.9l-4.88-1.937l3.135-7.9c0.281-0.706-0.064-1.506-0.77-1.786c-0.706-0.279-1.506,0.065-1.785,0.771l-3.136,7.9L8.554,8.781l-1.614,4.066l2.15,0.854l-2.537,6.391c-0.61,1.54,0.143,3.283,1.683,3.895l1.626,0.646L8.985,26.84c-0.407,1.025,0.095,2.188,1.122,2.596l0.93,0.369c1.026,0.408,2.188-0.095,2.596-1.121l0.877-2.207l1.858,0.737c1.54,0.611,3.284-0.142,3.896-1.682l2.535-6.391l1.918,0.761L26.33,15.836z\",\r\n        bookmark: \"M17.396,1.841L6.076,25.986l7.341-4.566l1.186,8.564l11.32-24.146L17.396,1.841zM19.131,9.234c-0.562-0.264-0.805-0.933-0.541-1.495c0.265-0.562,0.934-0.805,1.496-0.541s0.805,0.934,0.541,1.496S19.694,9.498,19.131,9.234z\",\r\n        hammer: \"M7.831,29.354c0.685,0.353,1.62,1.178,2.344,0.876c0.475-0.195,0.753-1.301,1.048-1.883c2.221-4.376,4.635-9.353,6.392-13.611c0-0.19,0.101-0.337-0.049-0.595c0.983-1.6,1.65-3.358,2.724-5.138c0.34-0.566,0.686-1.351,1.163-1.577l0.881-0.368c1.12-0.288,1.938-0.278,2.719,0.473c0.396,0.383,0.578,1.015,0.961,1.395c0.259,0.26,1.246,0.899,1.613,0.8c0.285-0.077,0.52-0.364,0.72-0.728l0.696-1.286c0.195-0.366,0.306-0.718,0.215-0.999c-0.117-0.362-1.192-0.84-1.552-0.915c-0.528-0.113-1.154,0.081-1.692-0.041c-1.057-0.243-1.513-0.922-1.883-2.02c-2.608-1.533-6.119-2.53-10.207-1.244c-1.109,0.349-2.172,0.614-2.901,1.323c-0.146,0.412,0.143,0.494,0.446,0.489c-0.237,0.216-0.62,0.341-0.399,0.848c2.495-1.146,7.34-1.542,7.669,0.804c0.072,0.522-0.395,1.241-0.682,1.835c-0.905,1.874-2.011,3.394-2.813,5.091c-0.298,0.017-0.366,0.18-0.525,0.287c-2.604,3.8-5.451,8.541-7.9,12.794c-0.326,0.566-1.098,1.402-1.002,1.906C5.961,28.641,7.146,29,7.831,29.354z\",\r\n        users: \"M21.053,20.8c-1.132-0.453-1.584-1.698-1.584-1.698s-0.51,0.282-0.51-0.51s0.51,0.51,1.02-2.548c0,0,1.414-0.397,1.132-3.68h-0.34c0,0,0.849-3.51,0-4.699c-0.85-1.189-1.189-1.981-3.058-2.548s-1.188-0.454-2.547-0.396c-1.359,0.057-2.492,0.792-2.492,1.188c0,0-0.849,0.057-1.188,0.397c-0.34,0.34-0.906,1.924-0.906,2.321s0.283,3.058,0.566,3.624l-0.337,0.113c-0.283,3.283,1.132,3.68,1.132,3.68c0.509,3.058,1.019,1.756,1.019,2.548s-0.51,0.51-0.51,0.51s-0.452,1.245-1.584,1.698c-1.132,0.452-7.416,2.886-7.927,3.396c-0.511,0.511-0.453,2.888-0.453,2.888h26.947c0,0,0.059-2.377-0.452-2.888C28.469,23.686,22.185,21.252,21.053,20.8zM8.583,20.628c-0.099-0.18-0.148-0.31-0.148-0.31s-0.432,0.239-0.432-0.432s0.432,0.432,0.864-2.159c0,0,1.199-0.336,0.959-3.119H9.538c0,0,0.143-0.591,0.237-1.334c-0.004-0.308,0.006-0.636,0.037-0.996l0.038-0.426c-0.021-0.492-0.107-0.939-0.312-1.226C8.818,9.619,8.53,8.947,6.947,8.467c-1.583-0.48-1.008-0.385-2.159-0.336C3.636,8.179,2.676,8.802,2.676,9.139c0,0-0.72,0.048-1.008,0.336c-0.271,0.271-0.705,1.462-0.757,1.885v0.281c0.047,0.653,0.258,2.449,0.469,2.872l-0.286,0.096c-0.239,2.783,0.959,3.119,0.959,3.119c0.432,2.591,0.864,1.488,0.864,2.159s-0.432,0.432-0.432,0.432s-0.383,1.057-1.343,1.439c-0.061,0.024-0.139,0.056-0.232,0.092v5.234h0.575c-0.029-1.278,0.077-2.927,0.746-3.594C2.587,23.135,3.754,22.551,8.583,20.628zM30.913,11.572c-0.04-0.378-0.127-0.715-0.292-0.946c-0.719-1.008-1.008-1.679-2.59-2.159c-1.584-0.48-1.008-0.385-2.16-0.336C24.72,8.179,23.76,8.802,23.76,9.139c0,0-0.719,0.048-1.008,0.336c-0.271,0.272-0.709,1.472-0.758,1.891h0.033l0.08,0.913c0.02,0.231,0.022,0.436,0.027,0.645c0.09,0.666,0.21,1.35,0.33,1.589l-0.286,0.096c-0.239,2.783,0.96,3.119,0.96,3.119c0.432,2.591,0.863,1.488,0.863,2.159s-0.432,0.432-0.432,0.432s-0.053,0.142-0.163,0.338c4.77,1.9,5.927,2.48,6.279,2.834c0.67,0.667,0.775,2.315,0.746,3.594h0.48v-5.306c-0.016-0.006-0.038-0.015-0.052-0.021c-0.959-0.383-1.343-1.439-1.343-1.439s-0.433,0.239-0.433-0.432s0.433,0.432,0.864-2.159c0,0,0.804-0.229,0.963-1.841v-1.227c-0.001-0.018-0.001-0.033-0.003-0.051h-0.289c0,0,0.215-0.89,0.292-1.861V11.572z\",\r\n        user: \"M20.771,12.364c0,0,0.849-3.51,0-4.699c-0.85-1.189-1.189-1.981-3.058-2.548s-1.188-0.454-2.547-0.396c-1.359,0.057-2.492,0.792-2.492,1.188c0,0-0.849,0.057-1.188,0.397c-0.34,0.34-0.906,1.924-0.906,2.321s0.283,3.058,0.566,3.624l-0.337,0.113c-0.283,3.283,1.132,3.68,1.132,3.68c0.509,3.058,1.019,1.756,1.019,2.548s-0.51,0.51-0.51,0.51s-0.452,1.245-1.584,1.698c-1.132,0.452-7.416,2.886-7.927,3.396c-0.511,0.511-0.453,2.888-0.453,2.888h26.947c0,0,0.059-2.377-0.452-2.888c-0.512-0.511-6.796-2.944-7.928-3.396c-1.132-0.453-1.584-1.698-1.584-1.698s-0.51,0.282-0.51-0.51s0.51,0.51,1.02-2.548c0,0,1.414-0.397,1.132-3.68H20.771z\",\r\n        customer: \"M28.523,23.813c-0.518-0.51-6.795-2.938-7.934-3.396c-1.132-0.451-1.584-1.697-1.584-1.697s-0.51,0.282-0.51-0.51c0-0.793,0.51,0.51,1.021-2.548c0,0,1.414-0.397,1.133-3.68l-0.338,0.001c0,0,0.85-3.511,0-4.699c-0.854-1.188-1.188-1.981-3.062-2.548c-1.869-0.567-1.188-0.454-2.547-0.396c-1.359,0.057-2.492,0.793-2.492,1.188c0,0-0.849,0.057-1.188,0.397c-0.34,0.34-0.906,1.924-0.906,2.32s0.283,3.059,0.566,3.624l-0.337,0.112c-0.283,3.283,1.132,3.681,1.132,3.681c0.509,3.058,1.019,1.755,1.019,2.548c0,0.792-0.51,0.51-0.51,0.51s-0.452,1.246-1.584,1.697c-1.132,0.453-7.416,2.887-7.927,3.396c-0.511,0.521-0.453,2.896-0.453,2.896h12.036l0.878-3.459l-0.781-0.781l1.344-1.344l1.344,1.344l-0.781,0.781l0.879,3.459h12.035C28.977,26.709,29.039,24.332,28.523,23.813z\",\r\n        employee: \"M28.523,23.813c-0.518-0.51-6.795-2.938-7.934-3.396c-1.132-0.451-1.584-1.697-1.584-1.697s-0.51,0.282-0.51-0.51c0-0.793,0.51,0.51,1.021-2.548c0,0,1.414-0.397,1.133-3.68l-0.338,0.001c0,0,0.85-3.511,0-4.699c-0.854-1.188-1.188-1.981-3.062-2.548c-1.869-0.567-1.188-0.454-2.547-0.396c-1.359,0.057-2.492,0.793-2.492,1.188c0,0-0.849,0.057-1.188,0.397c-0.34,0.34-0.906,1.924-0.906,2.32s0.283,3.059,0.566,3.624l-0.337,0.112c-0.283,3.283,1.132,3.681,1.132,3.681c0.509,3.058,1.019,1.755,1.019,2.548c0,0.792-0.51,0.51-0.51,0.51s-0.452,1.246-1.584,1.697c-1.132,0.453-7.416,2.887-7.927,3.396c-0.511,0.521-0.453,2.896-0.453,2.896h26.954C28.977,26.709,29.039,24.332,28.523,23.813zM22.188,26.062h-4.562v-1.25h4.562V26.062z\",\r\n        anonymous: \"M28.523,23.813c-0.518-0.51-6.795-2.938-7.934-3.396c-1.132-0.451-1.584-1.697-1.584-1.697s-0.51,0.282-0.51-0.51c0-0.793,0.51,0.51,1.021-2.548c0,0,1.414-0.397,1.133-3.68l-0.338,0.001c0,0,0.85-3.511,0-4.699c-0.854-1.188-1.188-1.981-3.062-2.548c-1.869-0.567-1.188-0.454-2.547-0.396c-1.359,0.057-2.492,0.793-2.492,1.188c0,0-0.849,0.057-1.188,0.397c-0.34,0.34-0.906,1.924-0.906,2.32s0.283,3.059,0.566,3.624l-0.337,0.112c-0.283,3.283,1.132,3.681,1.132,3.681c0.509,3.058,1.019,1.755,1.019,2.548c0,0.792-0.51,0.51-0.51,0.51s-0.452,1.246-1.584,1.697c-1.132,0.453-7.416,2.887-7.927,3.396c-0.511,0.521-0.453,2.896-0.453,2.896h26.954C28.977,26.709,29.039,24.332,28.523,23.813zM16.618,13.693c-0.398-0.251-0.783-1.211-0.783-1.64c0-0.133,0-0.236,0-0.236c-0.105-0.106-0.574-0.096-0.67,0c0,0,0,0.104,0,0.236c0,0.429-0.385,1.389-0.783,1.64c-0.399,0.251-1.611,0.237-2.084-0.236c-0.473-0.473-0.524-1.663-0.643-1.78c-0.118-0.119-0.185-0.185-0.185-0.185l0.029-0.414c0,0,0.842-0.207,1.699-0.207s1.803,0.502,1.803,0.502c0.231-0.074,0.784-0.083,0.996,0c0,0,0.945-0.502,1.803-0.502s1.699,0.207,1.699,0.207l0.029,0.414c0,0-0.066,0.066-0.185,0.185c-0.118,0.118-0.169,1.308-0.643,1.78C18.229,13.93,17.018,13.944,16.618,13.693z\",\r\n        skull: \"M25.947,11.14c0-5.174-3.979-9.406-10.613-9.406c-6.633,0-10.282,4.232-10.282,9.406c0,5.174,1.459,4.511,1.459,7.43c0,1.095-1.061,0.564-1.061,2.919c0,2.587,3.615,2.223,4.677,3.283c1.061,1.062,0.961,3.019,0.961,3.019s0.199,0.796,0.564,0.563c0,0,0.232,0.564,0.498,0.232c0,0,0.265,0.563,0.531,0.1c0,0,0.265,0.631,0.696,0.166c0,0,0.431,0.63,0.929,0.133c0,0,0.564,0.53,1.194,0.133c0.63,0.397,1.194-0.133,1.194-0.133c0.497,0.497,0.929-0.133,0.929-0.133c0.432,0.465,0.695-0.166,0.695-0.166c0.268,0.464,0.531-0.1,0.531-0.1c0.266,0.332,0.498-0.232,0.498-0.232c0.365,0.232,0.564-0.563,0.564-0.563s-0.1-1.957,0.961-3.019c1.062-1.061,4.676-0.696,4.676-3.283c0-2.354-1.061-1.824-1.061-2.919C24.488,15.651,25.947,16.314,25.947,11.14zM10.333,20.992c-1.783,0.285-2.59-0.215-2.785-1.492c-0.508-3.328,2.555-3.866,4.079-3.683c0.731,0.088,1.99,0.862,1.99,1.825C13.617,20.229,11.992,20.727,10.333,20.992zM16.461,25.303c-0.331,0-0.862-0.431-0.895-1.227c-0.033,0.796-0.63,1.227-0.961,1.227c-0.332,0-0.83-0.331-0.863-1.127c-0.033-0.796,1.028-4.013,1.792-4.013c0.762,0,1.824,3.217,1.791,4.013S16.794,25.303,16.461,25.303zM23.361,19.5c-0.195,1.277-1.004,1.777-2.787,1.492c-1.658-0.266-3.283-0.763-3.283-3.35c0-0.963,1.258-1.737,1.99-1.825C20.805,15.634,23.869,16.172,23.361,19.5z\",\r\n        mail: \"M28.516,7.167H3.482l12.517,7.108L28.516,7.167zM16.74,17.303C16.51,17.434,16.255,17.5,16,17.5s-0.51-0.066-0.741-0.197L2.5,10.06v14.773h27V10.06L16.74,17.303z\",\r\n        picture: \"M2.5,4.833v22.334h27V4.833H2.5zM25.25,25.25H6.75V6.75h18.5V25.25zM11.25,14c1.426,0,2.583-1.157,2.583-2.583c0-1.427-1.157-2.583-2.583-2.583c-1.427,0-2.583,1.157-2.583,2.583C8.667,12.843,9.823,14,11.25,14zM24.251,16.25l-4.917-4.917l-6.917,6.917L10.5,16.333l-2.752,2.752v5.165h16.503V16.25z\",\r\n        bubble: \"M16,5.333c-7.732,0-14,4.701-14,10.5c0,1.982,0.741,3.833,2.016,5.414L2,25.667l5.613-1.441c2.339,1.317,5.237,2.107,8.387,2.107c7.732,0,14-4.701,14-10.5C30,10.034,23.732,5.333,16,5.333z\",\r\n        codetalk: \"M16,4.938c-7.732,0-14,4.701-14,10.5c0,1.981,0.741,3.833,2.016,5.414L2,25.272l5.613-1.44c2.339,1.316,5.237,2.106,8.387,2.106c7.732,0,14-4.701,14-10.5S23.732,4.938,16,4.938zM13.704,19.47l-2.338,2.336l-6.43-6.431l6.429-6.432l2.339,2.341l-4.091,4.091L13.704,19.47zM20.775,21.803l-2.337-2.339l4.092-4.09l-4.092-4.092l2.337-2.339l6.43,6.426L20.775,21.803z\",\r\n        talkq: \"M16,4.938c-7.732,0-14,4.701-14,10.5c0,1.981,0.741,3.833,2.016,5.414L2,25.272l5.613-1.44c2.339,1.316,5.237,2.106,8.387,2.106c7.732,0,14-4.701,14-10.5S23.732,4.938,16,4.938zM16.868,21.375h-1.969v-1.889h1.969V21.375zM16.772,18.094h-1.777l-0.176-8.083h2.113L16.772,18.094z\",\r\n        talke: \"M16,4.938c-7.732,0-14,4.701-14,10.5c0,1.981,0.741,3.833,2.016,5.414L2,25.272l5.613-1.44c2.339,1.316,5.237,2.106,8.387,2.106c7.732,0,14-4.701,14-10.5S23.732,4.938,16,4.938zM16.982,21.375h-1.969v-1.889h1.969V21.375zM16.982,17.469v0.625h-1.969v-0.769c0-2.321,2.641-2.689,2.641-4.337c0-0.752-0.672-1.329-1.553-1.329c-0.912,0-1.713,0.672-1.713,0.672l-1.12-1.393c0,0,1.104-1.153,3.009-1.153c1.81,0,3.49,1.121,3.49,3.009C19.768,15.437,16.982,15.741,16.982,17.469z\",\r\n        home: \"M27.812,16l-3.062-3.062V5.625h-2.625v4.688L16,4.188L4.188,16L7,15.933v11.942h17.875V16H27.812zM16,26.167h-5.833v-7H16V26.167zM21.667,23.167h-3.833v-4.042h3.833V23.167z\",\r\n        lock: \"M24.875,15.334v-4.876c0-4.894-3.981-8.875-8.875-8.875s-8.875,3.981-8.875,8.875v4.876H5.042v15.083h21.916V15.334H24.875zM10.625,10.458c0-2.964,2.411-5.375,5.375-5.375s5.375,2.411,5.375,5.375v4.876h-10.75V10.458zM18.272,26.956h-4.545l1.222-3.667c-0.782-0.389-1.324-1.188-1.324-2.119c0-1.312,1.063-2.375,2.375-2.375s2.375,1.062,2.375,2.375c0,0.932-0.542,1.73-1.324,2.119L18.272,26.956z\",\r\n        unlock: \"M24.875,15.334v-4.876c0-4.894-3.981-8.875-8.875-8.875s-8.875,3.981-8.875,8.875v0.375h3.5v-0.375c0-2.964,2.411-5.375,5.375-5.375s5.375,2.411,5.375,5.375v4.876H5.042v15.083h21.916V15.334H24.875zM18.272,26.956h-4.545l1.222-3.667c-0.782-0.389-1.324-1.188-1.324-2.119c0-1.312,1.063-2.375,2.375-2.375s2.375,1.062,2.375,2.375c0,0.932-0.542,1.73-1.324,2.119L18.272,26.956z\",\r\n        clip: \"M23.898,6.135c-1.571-1.125-3.758-0.764-4.884,0.808l-8.832,12.331c-0.804,1.122-0.546,2.684,0.577,3.488c1.123,0.803,2.684,0.545,3.488-0.578l6.236-8.706l-0.813-0.583l-6.235,8.707h0c-0.483,0.672-1.42,0.828-2.092,0.347c-0.673-0.481-0.827-1.419-0.345-2.093h0l8.831-12.33l0.001-0.001l-0.002-0.001c0.803-1.119,2.369-1.378,3.489-0.576c1.12,0.803,1.379,2.369,0.577,3.489v-0.001l-9.68,13.516l0.001,0.001c-1.124,1.569-3.316,1.931-4.885,0.808c-1.569-1.125-1.93-3.315-0.807-4.885l7.035-9.822l-0.813-0.582l-7.035,9.822c-1.447,2.02-0.982,4.83,1.039,6.277c2.021,1.448,4.831,0.982,6.278-1.037l9.68-13.516C25.83,9.447,25.47,7.261,23.898,6.135z\",\r\n        star: \"M16,22.375L7.116,28.83l3.396-10.438l-8.883-6.458l10.979,0.002L16.002,1.5l3.391,10.434h10.981l-8.886,6.457l3.396,10.439L16,22.375L16,22.375z\",\r\n        staroff: \"M16,22.375L7.116,28.83l3.396-10.438l-8.883-6.458l10.979,0.002L16.002,1.5l3.391,10.434h10.981l-8.886,6.457l3.396,10.439L16,22.375L16,22.375zM22.979,26.209l-2.664-8.205l6.979-5.062h-8.627L16,4.729l-2.666,8.206H4.708l6.979,5.07l-2.666,8.203L16,21.146L22.979,26.209L22.979,26.209z\",\r\n        star2: \"M14.615,4.928c0.487-0.986,1.284-0.986,1.771,0l2.249,4.554c0.486,0.986,1.775,1.923,2.864,2.081l5.024,0.73c1.089,0.158,1.335,0.916,0.547,1.684l-3.636,3.544c-0.788,0.769-1.28,2.283-1.095,3.368l0.859,5.004c0.186,1.085-0.459,1.553-1.433,1.041l-4.495-2.363c-0.974-0.512-2.567-0.512-3.541,0l-4.495,2.363c-0.974,0.512-1.618,0.044-1.432-1.041l0.858-5.004c0.186-1.085-0.307-2.6-1.094-3.368L3.93,13.977c-0.788-0.768-0.542-1.525,0.547-1.684l5.026-0.73c1.088-0.158,2.377-1.095,2.864-2.081L14.615,4.928z\",\r\n        star2off: \"M26.522,12.293l-5.024-0.73c-1.089-0.158-2.378-1.095-2.864-2.081l-2.249-4.554c-0.487-0.986-1.284-0.986-1.771,0l-2.247,4.554c-0.487,0.986-1.776,1.923-2.864,2.081l-5.026,0.73c-1.088,0.158-1.334,0.916-0.547,1.684l3.637,3.544c0.788,0.769,1.28,2.283,1.094,3.368l-0.858,5.004c-0.186,1.085,0.458,1.553,1.432,1.041l4.495-2.363c0.974-0.512,2.566-0.512,3.541,0l4.495,2.363c0.974,0.512,1.618,0.044,1.433-1.041l-0.859-5.004c-0.186-1.085,0.307-2.6,1.095-3.368l3.636-3.544C27.857,13.209,27.611,12.452,26.522,12.293zM22.037,16.089c-1.266,1.232-1.966,3.394-1.67,5.137l0.514,2.984l-2.679-1.409c-0.757-0.396-1.715-0.612-2.702-0.612s-1.945,0.216-2.7,0.61l-2.679,1.409l0.511-2.982c0.297-1.743-0.404-3.905-1.671-5.137l-2.166-2.112l2.995-0.435c1.754-0.255,3.592-1.591,4.373-3.175L15.5,7.652l1.342,2.716c0.781,1.583,2.617,2.92,4.369,3.173l2.992,0.435L22.037,16.089z\",\r\n        star3: \"M22.441,28.181c-0.419,0-0.835-0.132-1.189-0.392l-5.751-4.247L9.75,27.789c-0.354,0.26-0.771,0.392-1.189,0.392c-0.412,0-0.824-0.128-1.175-0.384c-0.707-0.511-1-1.422-0.723-2.25l2.26-6.783l-5.815-4.158c-0.71-0.509-1.009-1.416-0.74-2.246c0.268-0.826,1.037-1.382,1.904-1.382c0.004,0,0.01,0,0.014,0l7.15,0.056l2.157-6.816c0.262-0.831,1.035-1.397,1.906-1.397s1.645,0.566,1.906,1.397l2.155,6.816l7.15-0.056c0.004,0,0.01,0,0.015,0c0.867,0,1.636,0.556,1.903,1.382c0.271,0.831-0.028,1.737-0.739,2.246l-5.815,4.158l2.263,6.783c0.276,0.826-0.017,1.737-0.721,2.25C23.268,28.053,22.854,28.181,22.441,28.181L22.441,28.181z\",\r\n        star3off: \"M28.631,12.359c-0.268-0.826-1.036-1.382-1.903-1.382h-0.015l-7.15,0.056l-2.155-6.816c-0.262-0.831-1.035-1.397-1.906-1.397s-1.645,0.566-1.906,1.397l-2.157,6.816l-7.15-0.056H4.273c-0.868,0-1.636,0.556-1.904,1.382c-0.27,0.831,0.029,1.737,0.74,2.246l5.815,4.158l-2.26,6.783c-0.276,0.828,0.017,1.739,0.723,2.25c0.351,0.256,0.763,0.384,1.175,0.384c0.418,0,0.834-0.132,1.189-0.392l5.751-4.247l5.751,4.247c0.354,0.26,0.771,0.392,1.189,0.392c0.412,0,0.826-0.128,1.177-0.384c0.704-0.513,0.997-1.424,0.721-2.25l-2.263-6.783l5.815-4.158C28.603,14.097,28.901,13.19,28.631,12.359zM19.712,17.996l2.729,8.184l-6.94-5.125L8.56,26.18l2.729-8.184l-7.019-5.018l8.627,0.066L15.5,4.82l2.603,8.225l8.627-0.066L19.712,17.996z\",\r\n        chat: \"M15.985,5.972c-7.563,0-13.695,4.077-13.695,9.106c0,2.877,2.013,5.44,5.147,7.108c-0.446,1.479-1.336,3.117-3.056,4.566c0,0,4.015-0.266,6.851-3.143c0.163,0.04,0.332,0.07,0.497,0.107c-0.155-0.462-0.246-0.943-0.246-1.443c0-3.393,3.776-6.05,8.599-6.05c3.464,0,6.379,1.376,7.751,3.406c1.168-1.34,1.847-2.892,1.847-4.552C29.68,10.049,23.548,5.972,15.985,5.972zM27.68,22.274c0-2.79-3.401-5.053-7.599-5.053c-4.196,0-7.599,2.263-7.599,5.053c0,2.791,3.403,5.053,7.599,5.053c0.929,0,1.814-0.116,2.637-0.319c1.573,1.597,3.801,1.744,3.801,1.744c-0.954-0.804-1.447-1.713-1.695-2.534C26.562,25.293,27.68,23.871,27.68,22.274z\",\r\n        quote: \"M14.505,5.873c-3.937,2.52-5.904,5.556-5.904,9.108c0,1.104,0.192,1.656,0.576,1.656l0.396-0.107c0.312-0.12,0.563-0.18,0.756-0.18c1.128,0,2.07,0.411,2.826,1.229c0.756,0.82,1.134,1.832,1.134,3.037c0,1.157-0.408,2.14-1.224,2.947c-0.816,0.807-1.801,1.211-2.952,1.211c-1.608,0-2.935-0.661-3.979-1.984c-1.044-1.321-1.565-2.98-1.565-4.977c0-2.259,0.443-4.327,1.332-6.203c0.888-1.875,2.243-3.57,4.067-5.085c1.824-1.514,2.988-2.272,3.492-2.272c0.336,0,0.612,0.162,0.828,0.486c0.216,0.324,0.324,0.606,0.324,0.846L14.505,5.873zM27.465,5.873c-3.937,2.52-5.904,5.556-5.904,9.108c0,1.104,0.192,1.656,0.576,1.656l0.396-0.107c0.312-0.12,0.563-0.18,0.756-0.18c1.104,0,2.04,0.411,2.808,1.229c0.769,0.82,1.152,1.832,1.152,3.037c0,1.157-0.408,2.14-1.224,2.947c-0.816,0.807-1.801,1.211-2.952,1.211c-1.608,0-2.935-0.661-3.979-1.984c-1.044-1.321-1.565-2.98-1.565-4.977c0-2.284,0.449-4.369,1.35-6.256c0.9-1.887,2.256-3.577,4.068-5.067c1.812-1.49,2.97-2.236,3.474-2.236c0.336,0,0.612,0.162,0.828,0.486c0.216,0.324,0.324,0.606,0.324,0.846L27.465,5.873z\",\r\n        gear: \"M26.974,16.514l3.765-1.991c-0.074-0.738-0.217-1.454-0.396-2.157l-4.182-0.579c-0.362-0.872-0.84-1.681-1.402-2.423l1.594-3.921c-0.524-0.511-1.09-0.977-1.686-1.406l-3.551,2.229c-0.833-0.438-1.73-0.77-2.672-0.984l-1.283-3.976c-0.364-0.027-0.728-0.056-1.099-0.056s-0.734,0.028-1.099,0.056l-1.271,3.941c-0.967,0.207-1.884,0.543-2.738,0.986L7.458,4.037C6.863,4.466,6.297,4.932,5.773,5.443l1.55,3.812c-0.604,0.775-1.11,1.629-1.49,2.55l-4.05,0.56c-0.178,0.703-0.322,1.418-0.395,2.157l3.635,1.923c0.041,1.013,0.209,1.994,0.506,2.918l-2.742,3.032c0.319,0.661,0.674,1.303,1.085,1.905l4.037-0.867c0.662,0.72,1.416,1.351,2.248,1.873l-0.153,4.131c0.663,0.299,1.352,0.549,2.062,0.749l2.554-3.283C15.073,26.961,15.532,27,16,27c0.507,0,1.003-0.046,1.491-0.113l2.567,3.301c0.711-0.2,1.399-0.45,2.062-0.749l-0.156-4.205c0.793-0.513,1.512-1.127,2.146-1.821l4.142,0.889c0.411-0.602,0.766-1.243,1.085-1.905l-2.831-3.131C26.778,18.391,26.93,17.467,26.974,16.514zM20.717,21.297l-1.785,1.162l-1.098-1.687c-0.571,0.22-1.186,0.353-1.834,0.353c-2.831,0-5.125-2.295-5.125-5.125c0-2.831,2.294-5.125,5.125-5.125c2.83,0,5.125,2.294,5.125,5.125c0,1.414-0.573,2.693-1.499,3.621L20.717,21.297z\",\r\n\t\tsmallgear: \"M31.229,17.736c0.064-0.571,0.104-1.148,0.104-1.736s-0.04-1.166-0.104-1.737l-4.377-1.557c-0.218-0.716-0.504-1.401-0.851-2.05l1.993-4.192c-0.725-0.91-1.549-1.734-2.458-2.459l-4.193,1.994c-0.647-0.347-1.334-0.632-2.049-0.849l-1.558-4.378C17.165,0.708,16.588,0.667,16,0.667s-1.166,0.041-1.737,0.105L12.707,5.15c-0.716,0.217-1.401,0.502-2.05,0.849L6.464,4.005C5.554,4.73,4.73,5.554,4.005,6.464l1.994,4.192c-0.347,0.648-0.632,1.334-0.849,2.05l-4.378,1.557C0.708,14.834,0.667,15.412,0.667,16s0.041,1.165,0.105,1.736l4.378,1.558c0.217,0.715,0.502,1.401,0.849,2.049l-1.994,4.193c0.725,0.909,1.549,1.733,2.459,2.458l4.192-1.993c0.648,0.347,1.334,0.633,2.05,0.851l1.557,4.377c0.571,0.064,1.148,0.104,1.737,0.104c0.588,0,1.165-0.04,1.736-0.104l1.558-4.377c0.715-0.218,1.399-0.504,2.049-0.851l4.193,1.993c0.909-0.725,1.733-1.549,2.458-2.458l-1.993-4.193c0.347-0.647,0.633-1.334,0.851-2.049L31.229,17.736zM16,20.871c-2.69,0-4.872-2.182-4.872-4.871c0-2.69,2.182-4.872,4.872-4.872c2.689,0,4.871,2.182,4.871,4.872C20.871,18.689,18.689,20.871,16,20.871z\",\r\n        wrench: \"M26.834,14.693c1.816-2.088,2.181-4.938,1.193-7.334l-3.646,4.252l-3.594-0.699L19.596,7.45l3.637-4.242c-2.502-0.63-5.258,0.13-7.066,2.21c-1.907,2.193-2.219,5.229-1.039,7.693L5.624,24.04c-1.011,1.162-0.888,2.924,0.274,3.935c1.162,1.01,2.924,0.888,3.935-0.274l9.493-10.918C21.939,17.625,24.918,16.896,26.834,14.693z\",\r\n        wrench2: \"M24.946,9.721l-2.872-0.768l-0.771-2.874l3.188-3.231c-1.992-0.653-4.268-0.192-5.848,1.391c-1.668,1.668-2.095,4.111-1.279,6.172l-3.476,3.478l-3.478,3.478c-2.062-0.816-4.504-0.391-6.173,1.277c-1.583,1.581-2.043,3.856-1.39,5.849l3.231-3.188l2.874,0.77l0.769,2.872l-3.239,3.197c1.998,0.665,4.288,0.207,5.876-1.384c1.678-1.678,2.1-4.133,1.271-6.202l3.463-3.464l3.464-3.463c2.069,0.828,4.523,0.406,6.202-1.272c1.592-1.589,2.049-3.878,1.384-5.876L24.946,9.721z\",\r\n        wrench3: \"M27.839,6.775l-3.197,3.239L21.77,9.246l-0.771-2.874l3.188-3.231c-1.992-0.653-4.268-0.192-5.848,1.391c-1.668,1.668-2.095,4.111-1.279,6.172L7.42,20.344c-0.204-0.032-0.408-0.062-0.621-0.062c-2.173,0-3.933,1.759-3.933,3.933c0,2.173,1.76,3.933,3.933,3.933c2.171,0,3.931-1.76,3.933-3.933c0-0.24-0.03-0.473-0.071-0.7l9.592-9.59c2.069,0.828,4.523,0.406,6.202-1.272C28.047,11.062,28.504,8.772,27.839,6.775zM6.799,25.146c-0.517,0-0.933-0.418-0.935-0.933c0.002-0.515,0.418-0.933,0.935-0.933c0.514,0,0.932,0.418,0.932,0.933S7.313,25.146,6.799,25.146z\",\r\n        // wrench4: \"M8.829,27.945c0,0,8.189-12.872,9.627-14.736c0.93-1.205,2.377-1.88,3.473-2.24c0.5,0.876,0.973,1.704,0.973,1.704c1.246-3.411,3.513-4.619,2.484-6.36l-3.322,1.962L20.408,5.47c0,0-0.185-0.643,0.228-0.885c0.41-0.243,2.809-1.561,2.809-1.561s-1.733-1.531-4.828,0.296c-2.031,1.2-0.297,4.687-2.43,8.034S5.678,25.468,5.678,25.468c-0.4,0.621-0.445,1.439-0.045,2.117c0.566,0.957,1.8,1.276,2.758,0.711C8.557,28.197,8.703,28.079,8.829,27.945zM19.613,11.615c-0.403,0.238-0.929,0.102-1.167-0.301l-0.562-0.95c-0.237-0.403-0.104-0.929,0.3-1.167l1.434-0.847c0.403-0.238,0.93-0.103,1.168,0.3l0.561,0.95c0.238,0.403,0.104,0.93-0.301,1.168L19.613,11.615zM6.119,27.308c-0.419-0.71-0.184-1.625,0.526-2.043c0.71-0.42,1.625-0.186,2.044,0.525c0.419,0.709,0.184,1.624-0.527,2.044C7.453,28.253,6.538,28.018,6.119,27.308z\",\r\n        screwdriver: \"M19.387,14.373c2.119-2.619,5.322-6.77,5.149-7.75c-0.128-0.729-0.882-1.547-1.763-2.171c-0.883-0.625-1.916-1.044-2.645-0.915c-0.98,0.173-3.786,4.603-5.521,7.49c-0.208,0.344,0.328,1.177,0.156,1.468c-0.172,0.292-1.052,0.042-1.18,0.261c-0.263,0.451-0.417,0.722-0.417,0.722s-0.553,0.823,1.163,2.163l-5.233,7.473c-0.267,0.381-1.456,0.459-1.456,0.459l-1.184,3.312l0.859,0.602l2.708-2.246c0,0-0.334-1.143-0.068-1.523l5.242-7.489c1.719,1,2.377,0.336,2.377,0.336s0.201-0.238,0.536-0.639c0.161-0.194-0.374-0.936-0.159-1.197C18.169,14.467,19.133,14.685,19.387,14.373z\",\r\n        hammerandscrewdriver: \"M28.537,9.859c-0.473-0.259-1.127-0.252-1.609-0.523c-0.943-0.534-1.186-1.316-1.226-2.475c-2.059-2.215-5.138-4.176-9.424-4.114c-1.162,0.017-2.256-0.035-3.158,0.435c-0.258,0.354-0.004,0.516,0.288,0.599c-0.29,0.138-0.692,0.147-0.626,0.697c2.72-0.383,7.475,0.624,7.116,2.966c-0.08,0.521-0.735,1.076-1.179,1.563c-1.263,1.382-2.599,2.45-3.761,3.667l0.336,0.336c0.742-0.521,1.446-0.785,2.104-0.785c0.707,0,1.121,0.297,1.276,0.433c0.575-0.618,1.166-1.244,1.839-1.853c0.488-0.444,1.047-1.099,1.566-1.178l0.949-0.101c1.156,0.047,1.937,0.29,2.471,1.232c0.27,0.481,0.262,1.139,0.521,1.613c0.175,0.324,0.937,1.218,1.316,1.228c0.294,0.009,0.603-0.199,0.899-0.49l1.033-1.034c0.291-0.294,0.501-0.6,0.492-0.896C29.754,10.801,28.861,10.035,28.537,9.859zM13.021,15.353l-0.741-0.741c-3.139,2.643-6.52,5.738-9.531,8.589c-0.473,0.443-1.452,1.021-1.506,1.539c-0.083,0.781,0.95,1.465,1.506,2c0.556,0.533,1.212,1.602,1.994,1.51c0.509-0.043,1.095-1.029,1.544-1.502c2.255-2.374,4.664-4.976,6.883-7.509c-0.312-0.371-0.498-0.596-0.498-0.596C12.535,18.451,11.779,17.272,13.021,15.353zM20.64,15.643c-0.366-0.318-1.466,0.143-1.777-0.122c-0.311-0.266,0.171-1.259-0.061-1.455c-0.482-0.406-0.77-0.646-0.77-0.646s-0.862-0.829-2.812,0.928L7.44,6.569C7.045,6.173,7.203,4.746,7.203,4.746L3.517,2.646L2.623,3.541l2.1,3.686c0,0,1.428-0.158,1.824,0.237l7.792,7.793c-1.548,1.831-0.895,2.752-0.895,2.752s0.238,0.288,0.646,0.771c0.196,0.23,1.188-0.249,1.455,0.061c0.264,0.312-0.196,1.41,0.12,1.777c2.666,3.064,6.926,7.736,8.125,7.736c0.892,0,2.021-0.724,2.948-1.64c0.925-0.917,1.639-2.055,1.639-2.947C28.377,22.567,23.704,18.309,20.64,15.643z\",\r\n        magic: \"M23.043,4.649l-0.404-2.312l-1.59,1.727l-2.323-0.33l1.151,2.045l-1.032,2.108l2.302-0.463l1.686,1.633l0.271-2.332l2.074-1.099L23.043,4.649zM26.217,18.198l-0.182-1.25l-0.882,0.905l-1.245-0.214l0.588,1.118l-0.588,1.118l1.245-0.214l0.882,0.905l0.182-1.25l1.133-0.56L26.217,18.198zM4.92,7.672L5.868,7.3l0.844,0.569L6.65,6.853l0.802-0.627L6.467,5.97L6.118,5.013L5.571,5.872L4.553,5.908l0.647,0.786L4.92,7.672zM10.439,10.505l1.021-1.096l1.481,0.219l-0.727-1.31l0.667-1.341l-1.47,0.287l-1.069-1.048L10.16,7.703L8.832,8.396l1.358,0.632L10.439,10.505zM17.234,12.721c-0.588-0.368-1.172-0.618-1.692-0.729c-0.492-0.089-1.039-0.149-1.425,0.374L2.562,30.788h6.68l9.669-15.416c0.303-0.576,0.012-1.041-0.283-1.447C18.303,13.508,17.822,13.09,17.234,12.721zM13.613,21.936c-0.254-0.396-0.74-0.857-1.373-1.254c-0.632-0.396-1.258-0.634-1.726-0.69l4.421-7.052c0.064-0.013,0.262-0.021,0.543,0.066c0.346,0.092,0.785,0.285,1.225,0.562c0.504,0.313,0.908,0.677,1.133,0.97c0.113,0.145,0.178,0.271,0.195,0.335c0.002,0.006,0.004,0.011,0.004,0.015L13.613,21.936z\",\r\n        download: \"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM16,28.792c-1.549,0-2.806-1.256-2.806-2.806s1.256-2.806,2.806-2.806c1.55,0,2.806,1.256,2.806,2.806S17.55,28.792,16,28.792zM16,21.087l-7.858-6.562h3.469V5.747h8.779v8.778h3.468L16,21.087z\",\r\n        view: \"M16,8.286C8.454,8.286,2.5,16,2.5,16s5.954,7.715,13.5,7.715c5.771,0,13.5-7.715,13.5-7.715S21.771,8.286,16,8.286zM16,20.807c-2.649,0-4.807-2.157-4.807-4.807s2.158-4.807,4.807-4.807s4.807,2.158,4.807,4.807S18.649,20.807,16,20.807zM16,13.194c-1.549,0-2.806,1.256-2.806,2.806c0,1.55,1.256,2.806,2.806,2.806c1.55,0,2.806-1.256,2.806-2.806C18.806,14.451,17.55,13.194,16,13.194z\",\r\n        noview: \"M11.478,17.568c-0.172-0.494-0.285-1.017-0.285-1.568c0-2.65,2.158-4.807,4.807-4.807c0.552,0,1.074,0.113,1.568,0.285l2.283-2.283C18.541,8.647,17.227,8.286,16,8.286C8.454,8.286,2.5,16,2.5,16s2.167,2.791,5.53,5.017L11.478,17.568zM23.518,11.185l-3.056,3.056c0.217,0.546,0.345,1.138,0.345,1.76c0,2.648-2.158,4.807-4.807,4.807c-0.622,0-1.213-0.128-1.76-0.345l-2.469,2.47c1.327,0.479,2.745,0.783,4.229,0.783c5.771,0,13.5-7.715,13.5-7.715S26.859,13.374,23.518,11.185zM25.542,4.917L4.855,25.604L6.27,27.02L26.956,6.332L25.542,4.917z\",\r\n        cloud: \"M24.345,13.904c0.019-0.195,0.03-0.392,0.03-0.591c0-3.452-2.798-6.25-6.25-6.25c-2.679,0-4.958,1.689-5.847,4.059c-0.589-0.646-1.429-1.059-2.372-1.059c-1.778,0-3.219,1.441-3.219,3.219c0,0.21,0.023,0.415,0.062,0.613c-2.372,0.391-4.187,2.436-4.187,4.918c0,2.762,2.239,5,5,5h15.875c2.762,0,5-2.238,5-5C28.438,16.362,26.672,14.332,24.345,13.904z\",\r\n        cloud2: \"M7.562,24.812c-3.313,0-6-2.687-6-6l0,0c0.002-2.659,1.734-4.899,4.127-5.684l0,0c0.083-2.26,1.937-4.064,4.216-4.066l0,0c0.73,0,1.415,0.19,2.01,0.517l0,0c1.266-2.105,3.57-3.516,6.208-3.517l0,0c3.947,0.002,7.157,3.155,7.248,7.079l0,0c2.362,0.804,4.062,3.034,4.064,5.671l0,0c0,3.313-2.687,6-6,6l0,0H7.562L7.562,24.812zM24.163,14.887c-0.511-0.095-0.864-0.562-0.815-1.079l0,0c0.017-0.171,0.027-0.336,0.027-0.497l0,0c-0.007-2.899-2.352-5.245-5.251-5.249l0,0c-2.249-0.002-4.162,1.418-4.911,3.41l0,0c-0.122,0.323-0.406,0.564-0.748,0.63l0,0c-0.34,0.066-0.694-0.052-0.927-0.309l0,0c-0.416-0.453-0.986-0.731-1.633-0.731l0,0c-1.225,0.002-2.216,0.993-2.22,2.218l0,0c0,0.136,0.017,0.276,0.045,0.424l0,0c0.049,0.266-0.008,0.54-0.163,0.762l0,0c-0.155,0.223-0.392,0.371-0.657,0.414l0,0c-1.9,0.313-3.352,1.949-3.35,3.931l0,0c0.004,2.209,1.792,3.995,4.001,4.001l0,0h15.874c2.209-0.006,3.994-1.792,3.999-4.001l0,0C27.438,16.854,26.024,15.231,24.163,14.887L24.163,14.887\",\r\n        cloudDown: \"M24.345,13.904c0.019-0.195,0.03-0.392,0.03-0.591c0-3.452-2.798-6.25-6.25-6.25c-2.679,0-4.958,1.689-5.847,4.059c-0.589-0.646-1.429-1.059-2.372-1.059c-1.778,0-3.219,1.441-3.219,3.219c0,0.21,0.023,0.415,0.062,0.613c-2.372,0.391-4.187,2.436-4.187,4.918c0,2.762,2.239,5,5,5h3.404l-0.707-0.707c-0.377-0.377-0.585-0.879-0.585-1.413c0-0.533,0.208-1.035,0.585-1.412l0.556-0.557c0.4-0.399,0.937-0.628,1.471-0.628c0.027,0,0.054,0,0.08,0.002v-0.472c0-1.104,0.898-2.002,2-2.002h3.266c1.103,0,2,0.898,2,2.002v0.472c0.027-0.002,0.054-0.002,0.081-0.002c0.533,0,1.07,0.229,1.47,0.63l0.557,0.552c0.78,0.781,0.78,2.05,0,2.828l-0.706,0.707h2.403c2.762,0,5-2.238,5-5C28.438,16.362,26.672,14.332,24.345,13.904z M21.033,20.986l-0.556-0.555c-0.39-0.389-0.964-0.45-1.276-0.137c-0.312,0.312-0.568,0.118-0.568-0.432v-1.238c0-0.55-0.451-1-1-1h-3.265c-0.55,0-1,0.45-1,1v1.238c0,0.55-0.256,0.744-0.569,0.432c-0.312-0.313-0.887-0.252-1.276,0.137l-0.556,0.555c-0.39,0.389-0.39,1.024-0.001,1.413l4.328,4.331c0.194,0.194,0.451,0.291,0.707,0.291s0.512-0.097,0.707-0.291l4.327-4.331C21.424,22.011,21.423,21.375,21.033,20.986z\",\r\n        cloudUp: \"M24.345,13.904c0.019-0.195,0.03-0.392,0.03-0.591c0-3.452-2.798-6.25-6.25-6.25c-2.679,0-4.958,1.689-5.847,4.059c-0.589-0.646-1.429-1.059-2.372-1.059c-1.778,0-3.219,1.441-3.219,3.219c0,0.21,0.023,0.415,0.062,0.613c-2.372,0.391-4.187,2.436-4.187,4.918c0,2.762,2.239,5,5,5h2.312c-0.126-0.266-0.2-0.556-0.2-0.859c0-0.535,0.208-1.04,0.587-1.415l4.325-4.329c0.375-0.377,0.877-0.585,1.413-0.585c0.54,0,1.042,0.21,1.417,0.587l4.323,4.329c0.377,0.373,0.585,0.878,0.585,1.413c0,0.304-0.073,0.594-0.2,0.859h1.312c2.762,0,5-2.238,5-5C28.438,16.362,26.672,14.332,24.345,13.904z M16.706,17.916c-0.193-0.195-0.45-0.291-0.706-0.291s-0.512,0.096-0.707,0.291l-4.327,4.33c-0.39,0.389-0.389,1.025,0.001,1.414l0.556,0.555c0.39,0.389,0.964,0.449,1.276,0.137s0.568-0.119,0.568,0.432v1.238c0,0.549,0.451,1,1,1h3.265c0.551,0,1-0.451,1-1v-1.238c0-0.551,0.256-0.744,0.569-0.432c0.312,0.312,0.887,0.252,1.276-0.137l0.556-0.555c0.39-0.389,0.39-1.025,0.001-1.414L16.706,17.916z\",\r\n        location: \"M16,3.5c-4.142,0-7.5,3.358-7.5,7.5c0,4.143,7.5,18.121,7.5,18.121S23.5,15.143,23.5,11C23.5,6.858,20.143,3.5,16,3.5z M16,14.584c-1.979,0-3.584-1.604-3.584-3.584S14.021,7.416,16,7.416S19.584,9.021,19.584,11S17.979,14.584,16,14.584z\",\r\n\t\tloaction2: \"M15.834,29.084 15.834,16.166 2.917,16.166 29.083,2.917z\",\r\n        volume0: \"M4.998,12.127v7.896h4.495l6.729,5.526l0.004-18.948l-6.73,5.526H4.998z\",\r\n        volume1: \"M4.998,12.127v7.896h4.495l6.729,5.526l0.004-18.948l-6.73,5.526H4.998z M18.806,11.219c-0.393-0.389-1.024-0.389-1.415,0.002c-0.39,0.391-0.39,1.024,0.002,1.416v-0.002c0.863,0.864,1.395,2.049,1.395,3.366c0,1.316-0.531,2.497-1.393,3.361c-0.394,0.389-0.394,1.022-0.002,1.415c0.195,0.195,0.451,0.293,0.707,0.293c0.257,0,0.513-0.098,0.708-0.293c1.222-1.22,1.98-2.915,1.979-4.776C20.788,14.136,20.027,12.439,18.806,11.219z\",\r\n        volume2: \"M4.998,12.127v7.896h4.495l6.729,5.526l0.004-18.948l-6.73,5.526H4.998z M18.806,11.219c-0.393-0.389-1.024-0.389-1.415,0.002c-0.39,0.391-0.39,1.024,0.002,1.416v-0.002c0.863,0.864,1.395,2.049,1.395,3.366c0,1.316-0.531,2.497-1.393,3.361c-0.394,0.389-0.394,1.022-0.002,1.415c0.195,0.195,0.451,0.293,0.707,0.293c0.257,0,0.513-0.098,0.708-0.293c1.222-1.22,1.98-2.915,1.979-4.776C20.788,14.136,20.027,12.439,18.806,11.219z M21.101,8.925c-0.393-0.391-1.024-0.391-1.413,0c-0.392,0.391-0.392,1.025,0,1.414c1.45,1.451,2.344,3.447,2.344,5.661c0,2.212-0.894,4.207-2.342,5.659c-0.392,0.39-0.392,1.023,0,1.414c0.195,0.195,0.451,0.293,0.708,0.293c0.256,0,0.512-0.098,0.707-0.293c1.808-1.809,2.929-4.315,2.927-7.073C24.033,13.24,22.912,10.732,21.101,8.925z\",\r\n        volume3: \"M4.998,12.127v7.896h4.495l6.729,5.526l0.004-18.948l-6.73,5.526H4.998z M18.806,11.219c-0.393-0.389-1.024-0.389-1.415,0.002c-0.39,0.391-0.39,1.024,0.002,1.416v-0.002c0.863,0.864,1.395,2.049,1.395,3.366c0,1.316-0.531,2.497-1.393,3.361c-0.394,0.389-0.394,1.022-0.002,1.415c0.195,0.195,0.451,0.293,0.707,0.293c0.257,0,0.513-0.098,0.708-0.293c1.222-1.22,1.98-2.915,1.979-4.776C20.788,14.136,20.027,12.439,18.806,11.219z M21.101,8.925c-0.393-0.391-1.024-0.391-1.413,0c-0.392,0.391-0.392,1.025,0,1.414c1.45,1.451,2.344,3.447,2.344,5.661c0,2.212-0.894,4.207-2.342,5.659c-0.392,0.39-0.392,1.023,0,1.414c0.195,0.195,0.451,0.293,0.708,0.293c0.256,0,0.512-0.098,0.707-0.293c1.808-1.809,2.929-4.315,2.927-7.073C24.033,13.24,22.912,10.732,21.101,8.925z M23.28,6.746c-0.393-0.391-1.025-0.389-1.414,0.002c-0.391,0.389-0.391,1.023,0.002,1.413h-0.002c2.009,2.009,3.248,4.773,3.248,7.839c0,3.063-1.239,5.828-3.246,7.838c-0.391,0.39-0.391,1.023,0.002,1.415c0.194,0.194,0.45,0.291,0.706,0.291s0.513-0.098,0.708-0.293c2.363-2.366,3.831-5.643,3.829-9.251C27.115,12.389,25.647,9.111,23.28,6.746z\",\r\n\t\tbell: \"M24.264,20.958c-2.484-4.226-2.168-13.199-6.143-15.486c0.254-0.395,0.404-0.861,0.404-1.366c0-1.396-1.129-2.526-2.526-2.526c-1.396,0-2.527,1.131-2.527,2.526c0,0.505,0.151,0.973,0.406,1.367C9.905,7.76,10.221,16.732,7.736,20.958C5.585,21.523,4.25,22.311,4.25,23.18v1.125c0,1.604,3.877,2.938,9.077,3.283c-0.003,0.048-0.015,0.096-0.015,0.145c0,1.483,1.203,2.688,2.688,2.688c1.484,0,2.688-1.203,2.688-2.688c0-0.049-0.012-0.097-0.015-0.145c5.199-0.349,9.077-1.688,9.077-3.283V23.18C27.75,22.311,26.415,21.523,24.264,20.958zM14.472,4.105c0.002-0.843,0.685-1.525,1.527-1.527c0.843,0.002,1.526,0.685,1.528,1.527c-0.002,0.372-0.144,0.708-0.361,0.974c-0.359-0.096-0.745-0.15-1.166-0.15s-0.807,0.055-1.167,0.15C14.612,4.814,14.473,4.478,14.472,4.105z\",\r\n\t\tmute: \"M21.328,8.956c-0.605-1.545-1.4-2.809-2.572-3.484c0.254-0.395,0.404-0.861,0.404-1.366c0-1.396-1.129-2.526-2.526-2.526c-1.396,0-2.526,1.131-2.526,2.526c0,0.505,0.15,0.973,0.405,1.367C10.54,7.76,10.856,16.732,8.371,20.958c-2.151,0.565-3.486,1.353-3.486,2.222v1.125c0,0.271,0.117,0.525,0.322,0.774L21.328,8.956zM16.635,2.578c0.844,0.002,1.525,0.685,1.527,1.527c0,0.372-0.139,0.708-0.36,0.974c-0.358-0.096-0.745-0.15-1.165-0.15c-0.422,0-0.808,0.055-1.167,0.15c-0.221-0.265-0.359-0.602-0.36-0.974C15.109,3.263,15.792,2.58,16.635,2.578zM24.898,20.958c-1.125-1.914-1.678-4.802-2.312-7.602L9.065,26.878c1.395,0.338,3.061,0.587,4.896,0.71c-0.003,0.048-0.015,0.096-0.015,0.145c0,1.483,1.203,2.688,2.688,2.688c1.485,0,2.688-1.203,2.688-2.688c0-0.049-0.012-0.097-0.016-0.145c5.188-0.349,9.062-1.688,9.062-3.283V23.18C28.385,22.311,27.05,21.523,24.898,20.958zM26.677,5.021L3.615,28.083l1.415,1.416L28.091,6.436L26.677,5.021z\",\r\n        key: \"M18.386,16.009l0.009-0.006l-0.58-0.912c1.654-2.226,1.876-5.319,0.3-7.8c-2.043-3.213-6.303-4.161-9.516-2.118c-3.212,2.042-4.163,6.302-2.12,9.517c1.528,2.402,4.3,3.537,6.944,3.102l0.424,0.669l0.206,0.045l0.779-0.447l-0.305,1.377l2.483,0.552l-0.296,1.325l1.903,0.424l-0.68,3.06l1.406,0.313l-0.424,1.906l4.135,0.918l0.758-3.392L18.386,16.009z M10.996,8.944c-0.685,0.436-1.593,0.233-2.029-0.452C8.532,7.807,8.733,6.898,9.418,6.463s1.594-0.233,2.028,0.452C11.883,7.6,11.68,8.509,10.996,8.944z\",\r\n        ruler: \"M6.63,21.796l-5.122,5.121h25.743V1.175L6.63,21.796zM18.702,10.48c0.186-0.183,0.48-0.183,0.664,0l1.16,1.159c0.184,0.183,0.186,0.48,0.002,0.663c-0.092,0.091-0.213,0.137-0.332,0.137c-0.121,0-0.24-0.046-0.33-0.137l-1.164-1.159C18.519,10.96,18.519,10.664,18.702,10.48zM17.101,12.084c0.184-0.183,0.48-0.183,0.662,0l2.156,2.154c0.184,0.183,0.184,0.48,0.002,0.661c-0.092,0.092-0.213,0.139-0.334,0.139s-0.24-0.046-0.33-0.137l-2.156-2.154C16.917,12.564,16.917,12.267,17.101,12.084zM15.497,13.685c0.184-0.183,0.48-0.183,0.664,0l1.16,1.161c0.184,0.183,0.182,0.48-0.002,0.663c-0.092,0.092-0.211,0.138-0.33,0.138c-0.121,0-0.24-0.046-0.332-0.138l-1.16-1.16C15.314,14.166,15.314,13.868,15.497,13.685zM13.896,15.288c0.184-0.183,0.48-0.181,0.664,0.002l1.158,1.159c0.183,0.184,0.183,0.48,0,0.663c-0.092,0.092-0.212,0.138-0.332,0.138c-0.119,0-0.24-0.046-0.332-0.138l-1.158-1.161C13.713,15.767,13.713,15.471,13.896,15.288zM12.293,16.892c0.183-0.184,0.479-0.184,0.663,0l2.154,2.153c0.184,0.184,0.184,0.481,0,0.665c-0.092,0.092-0.211,0.138-0.33,0.138c-0.121,0-0.242-0.046-0.334-0.138l-2.153-2.155C12.11,17.371,12.11,17.075,12.293,16.892zM10.302,24.515c-0.091,0.093-0.212,0.139-0.332,0.139c-0.119,0-0.238-0.045-0.33-0.137l-2.154-2.153c-0.184-0.183-0.184-0.479,0-0.663s0.479-0.184,0.662,0l2.154,2.153C10.485,24.036,10.485,24.332,10.302,24.515zM10.912,21.918c-0.093,0.093-0.214,0.139-0.333,0.139c-0.12,0-0.24-0.045-0.33-0.137l-1.162-1.161c-0.184-0.183-0.184-0.479,0-0.66c0.184-0.185,0.48-0.187,0.664-0.003l1.161,1.162C11.095,21.438,11.095,21.735,10.912,21.918zM12.513,20.316c-0.092,0.092-0.211,0.138-0.332,0.138c-0.119,0-0.239-0.046-0.331-0.138l-1.159-1.16c-0.184-0.184-0.184-0.48,0-0.664s0.48-0.182,0.663,0.002l1.159,1.161C12.696,19.838,12.696,20.135,12.513,20.316zM22.25,21.917h-8.67l8.67-8.67V21.917zM22.13,10.7c-0.09,0.092-0.211,0.138-0.33,0.138c-0.121,0-0.242-0.046-0.334-0.138l-1.16-1.159c-0.184-0.183-0.184-0.479,0-0.663c0.182-0.183,0.479-0.183,0.662,0l1.16,1.159C22.312,10.221,22.313,10.517,22.13,10.7zM24.726,10.092c-0.092,0.092-0.213,0.137-0.332,0.137s-0.24-0.045-0.33-0.137l-2.154-2.154c-0.184-0.183-0.184-0.481,0-0.664s0.482-0.181,0.664,0.002l2.154,2.154C24.911,9.613,24.909,9.91,24.726,10.092z\",\r\n        power: \"M25.542,8.354c-1.47-1.766-2.896-2.617-3.025-2.695c-0.954-0.565-2.181-0.241-2.739,0.724c-0.556,0.961-0.24,2.194,0.705,2.763c0,0,0.001,0,0.002,0.001c0.001,0,0.002,0.001,0.003,0.002c0.001,0,0.003,0.001,0.004,0.001c0.102,0.062,1.124,0.729,2.08,1.925c1.003,1.261,1.933,3.017,1.937,5.438c-0.001,2.519-1.005,4.783-2.64,6.438c-1.637,1.652-3.877,2.668-6.368,2.669c-2.491-0.001-4.731-1.017-6.369-2.669c-1.635-1.654-2.639-3.919-2.64-6.438c0.005-2.499,0.995-4.292,2.035-5.558c0.517-0.625,1.043-1.098,1.425-1.401c0.191-0.152,0.346-0.263,0.445-0.329c0.049-0.034,0.085-0.058,0.104-0.069c0.005-0.004,0.009-0.006,0.012-0.008s0.004-0.002,0.004-0.002l0,0c0.946-0.567,1.262-1.802,0.705-2.763c-0.559-0.965-1.785-1.288-2.739-0.724c-0.128,0.079-1.555,0.93-3.024,2.696c-1.462,1.751-2.974,4.511-2.97,8.157C2.49,23.775,8.315,29.664,15.5,29.667c7.186-0.003,13.01-5.892,13.012-13.155C28.516,12.864,27.005,10.105,25.542,8.354zM15.5,17.523c1.105,0,2.002-0.907,2.002-2.023h-0.001V3.357c0-1.118-0.896-2.024-2.001-2.024s-2.002,0.906-2.002,2.024V15.5C13.498,16.616,14.395,17.523,15.5,17.523z\",\r\n        flag: \"M9.5,3v10c8,0,8,4,16,4V7C17.5,7,17.5,3,9.5,3z M6.5,29h2V3h-2V29z\",\r\n\t\t\"flag-alt\": \"M19.562,10.75C21.74,8.572,25.5,7,25.5,7c-8,0-8-4-16-4v10c8,0,8,4,16,4C25.5,17,21.75,14,19.562,10.75zM6.5,29h2V3h-2V29z\",\r\n        tag: \"M14.263,2.826H7.904L2.702,8.028v6.359L18.405,30.09l11.561-11.562L14.263,2.826zM6.495,8.859c-0.619-0.619-0.619-1.622,0-2.24C7.114,6,8.117,6,8.736,6.619c0.62,0.62,0.619,1.621,0,2.241C8.117,9.479,7.114,9.479,6.495,8.859z\",\r\n        search: \"M29.772,26.433l-7.126-7.126c0.96-1.583,1.523-3.435,1.524-5.421C24.169,8.093,19.478,3.401,13.688,3.399C7.897,3.401,3.204,8.093,3.204,13.885c0,5.789,4.693,10.481,10.484,10.481c1.987,0,3.839-0.563,5.422-1.523l7.128,7.127L29.772,26.433zM7.203,13.885c0.006-3.582,2.903-6.478,6.484-6.486c3.579,0.008,6.478,2.904,6.484,6.486c-0.007,3.58-2.905,6.476-6.484,6.484C10.106,20.361,7.209,17.465,7.203,13.885z\",\r\n        zoomout: \"M22.646,19.307c0.96-1.583,1.523-3.435,1.524-5.421C24.169,8.093,19.478,3.401,13.688,3.399C7.897,3.401,3.204,8.093,3.204,13.885c0,5.789,4.693,10.481,10.484,10.481c1.987,0,3.839-0.563,5.422-1.523l7.128,7.127l3.535-3.537L22.646,19.307zM13.688,20.369c-3.582-0.008-6.478-2.904-6.484-6.484c0.006-3.582,2.903-6.478,6.484-6.486c3.579,0.008,6.478,2.904,6.484,6.486C20.165,17.465,17.267,20.361,13.688,20.369zM8.854,11.884v4.001l9.665-0.001v-3.999L8.854,11.884z\",\r\n        zoomin: \"M22.646,19.307c0.96-1.583,1.523-3.435,1.524-5.421C24.169,8.093,19.478,3.401,13.688,3.399C7.897,3.401,3.204,8.093,3.204,13.885c0,5.789,4.693,10.481,10.484,10.481c1.987,0,3.839-0.563,5.422-1.523l7.128,7.127l3.535-3.537L22.646,19.307zM13.688,20.369c-3.582-0.008-6.478-2.904-6.484-6.484c0.006-3.582,2.903-6.478,6.484-6.486c3.579,0.008,6.478,2.904,6.484,6.486C20.165,17.465,17.267,20.361,13.688,20.369zM15.687,9.051h-4v2.833H8.854v4.001h2.833v2.833h4v-2.834h2.832v-3.999h-2.833V9.051z\",\r\n        cross: \"M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z\",\r\n        check: \"M2.379,14.729 5.208,11.899 12.958,19.648 25.877,6.733 28.707,9.561 12.958,25.308z\",\r\n        settings: \"M16.015,12.03c-2.156,0-3.903,1.747-3.903,3.903c0,2.155,1.747,3.903,3.903,3.903c0.494,0,0.962-0.102,1.397-0.27l0.836,1.285l1.359-0.885l-0.831-1.276c0.705-0.706,1.142-1.681,1.142-2.757C19.918,13.777,18.171,12.03,16.015,12.03zM16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM26.174,20.809c-0.241,0.504-0.513,0.99-0.826,1.45L22.19,21.58c-0.481,0.526-1.029,0.994-1.634,1.385l0.119,3.202c-0.507,0.23-1.028,0.421-1.569,0.57l-1.955-2.514c-0.372,0.051-0.75,0.086-1.136,0.086c-0.356,0-0.706-0.029-1.051-0.074l-1.945,2.5c-0.541-0.151-1.065-0.342-1.57-0.569l0.117-3.146c-0.634-0.398-1.208-0.88-1.712-1.427L6.78,22.251c-0.313-0.456-0.583-0.944-0.826-1.448l2.088-2.309c-0.226-0.703-0.354-1.451-0.385-2.223l-2.768-1.464c0.055-0.563,0.165-1.107,0.301-1.643l3.084-0.427c0.29-0.702,0.675-1.352,1.135-1.942L8.227,7.894c0.399-0.389,0.83-0.744,1.283-1.07l2.663,1.672c0.65-0.337,1.349-0.593,2.085-0.75l0.968-3.001c0.278-0.021,0.555-0.042,0.837-0.042c0.282,0,0.56,0.022,0.837,0.042l0.976,3.028c0.72,0.163,1.401,0.416,2.036,0.75l2.704-1.697c0.455,0.326,0.887,0.681,1.285,1.07l-1.216,2.986c0.428,0.564,0.793,1.181,1.068,1.845l3.185,0.441c0.135,0.535,0.247,1.081,0.302,1.643l-2.867,1.516c-0.034,0.726-0.15,1.43-0.355,2.1L26.174,20.809z\",\r\n        settingsalt: \"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM24.386,14.968c-1.451,1.669-3.706,2.221-5.685,1.586l-7.188,8.266c-0.766,0.88-2.099,0.97-2.979,0.205s-0.973-2.099-0.208-2.979l7.198-8.275c-0.893-1.865-0.657-4.164,0.787-5.824c1.367-1.575,3.453-2.151,5.348-1.674l-2.754,3.212l0.901,2.621l2.722,0.529l2.761-3.22C26.037,11.229,25.762,13.387,24.386,14.968z\",\r\n        feed: \"M4.135,16.762c3.078,0,5.972,1.205,8.146,3.391c2.179,2.187,3.377,5.101,3.377,8.202h4.745c0-9.008-7.299-16.335-16.269-16.335V16.762zM4.141,8.354c10.973,0,19.898,8.975,19.898,20.006h4.743c0-13.646-11.054-24.749-24.642-24.749V8.354zM10.701,25.045c0,1.815-1.471,3.287-3.285,3.287s-3.285-1.472-3.285-3.287c0-1.813,1.471-3.285,3.285-3.285S10.701,23.231,10.701,25.045z\",\r\n        bug: \"M28.589,10.903l-5.828,1.612c-0.534-1.419-1.338-2.649-2.311-3.628l3.082-5.44c0.271-0.48,0.104-1.092-0.38-1.365c-0.479-0.271-1.09-0.102-1.36,0.377l-2.924,5.162c-0.604-0.383-1.24-0.689-1.9-0.896c-0.416-1.437-1.652-2.411-3.058-2.562c-0.001-0.004-0.002-0.008-0.003-0.012c-0.061-0.242-0.093-0.46-0.098-0.65c-0.005-0.189,0.012-0.351,0.046-0.479c0.037-0.13,0.079-0.235,0.125-0.317c0.146-0.26,0.34-0.43,0.577-0.509c0.023,0.281,0.142,0.482,0.352,0.601c0.155,0.088,0.336,0.115,0.546,0.086c0.211-0.031,0.376-0.152,0.496-0.363c0.105-0.186,0.127-0.389,0.064-0.607c-0.064-0.219-0.203-0.388-0.414-0.507c-0.154-0.087-0.314-0.131-0.482-0.129c-0.167,0.001-0.327,0.034-0.481,0.097c-0.153,0.063-0.296,0.16-0.429,0.289c-0.132,0.129-0.241,0.271-0.33,0.426c-0.132,0.234-0.216,0.496-0.25,0.783c-0.033,0.286-0.037,0.565-0.009,0.84c0.017,0.16,0.061,0.301,0.094,0.449c-0.375-0.021-0.758,0.002-1.14,0.108c-0.482,0.133-0.913,0.36-1.28,0.653c-0.052-0.172-0.098-0.344-0.18-0.518c-0.116-0.249-0.263-0.486-0.438-0.716c-0.178-0.229-0.384-0.41-0.618-0.543C9.904,3.059,9.737,2.994,9.557,2.951c-0.18-0.043-0.352-0.052-0.516-0.027s-0.318,0.08-0.463,0.164C8.432,3.172,8.318,3.293,8.23,3.445C8.111,3.656,8.08,3.873,8.136,4.092c0.058,0.221,0.181,0.384,0.367,0.49c0.21,0.119,0.415,0.138,0.611,0.056C9.31,4.556,9.451,4.439,9.539,4.283c0.119-0.21,0.118-0.443-0.007-0.695c0.244-0.055,0.497-0.008,0.757,0.141c0.081,0.045,0.171,0.115,0.27,0.208c0.097,0.092,0.193,0.222,0.286,0.388c0.094,0.166,0.179,0.368,0.251,0.608c0.013,0.044,0.023,0.098,0.035,0.146c-0.911,0.828-1.357,2.088-1.098,3.357c-0.582,0.584-1.072,1.27-1.457,2.035l-5.16-2.926c-0.48-0.271-1.092-0.102-1.364,0.377C1.781,8.404,1.95,9.016,2.43,9.289l5.441,3.082c-0.331,1.34-0.387,2.807-0.117,4.297l-5.828,1.613c-0.534,0.147-0.846,0.699-0.698,1.231c0.147,0.53,0.697,0.843,1.231,0.694l5.879-1.627c0.503,1.057,1.363,2.28,2.371,3.443l-3.194,5.639c-0.272,0.481-0.104,1.092,0.378,1.363c0.239,0.137,0.512,0.162,0.758,0.094c0.248-0.068,0.469-0.229,0.604-0.471l2.895-5.109c2.7,2.594,5.684,4.123,5.778,1.053c1.598,2.56,3.451-0.338,4.502-3.976l5.203,2.947c0.24,0.138,0.514,0.162,0.762,0.094c0.246-0.067,0.467-0.229,0.603-0.471c0.272-0.479,0.104-1.091-0.377-1.362l-5.701-3.229c0.291-1.505,0.422-2.983,0.319-4.138l5.886-1.627c0.53-0.147,0.847-0.697,0.696-1.229C29.673,11.068,29.121,10.756,28.589,10.903z\",\r\n        link: \"M16.45,18.085l-2.47,2.471c0.054,1.023-0.297,2.062-1.078,2.846c-1.465,1.459-3.837,1.459-5.302-0.002c-1.461-1.465-1.46-3.836-0.001-5.301c0.783-0.781,1.824-1.131,2.847-1.078l2.469-2.469c-2.463-1.057-5.425-0.586-7.438,1.426c-2.634,2.637-2.636,6.907,0,9.545c2.638,2.637,6.909,2.635,9.545,0l0.001,0.002C17.033,23.511,17.506,20.548,16.45,18.085zM14.552,12.915l2.467-2.469c-0.053-1.023,0.297-2.062,1.078-2.848C19.564,6.139,21.934,6.137,23.4,7.6c1.462,1.465,1.462,3.837,0,5.301c-0.783,0.783-1.822,1.132-2.846,1.079l-2.469,2.468c2.463,1.057,5.424,0.584,7.438-1.424c2.634-2.639,2.633-6.91,0-9.546c-2.639-2.636-6.91-2.637-9.545-0.001C13.967,7.489,13.495,10.451,14.552,12.915zM18.152,10.727l-7.424,7.426c-0.585,0.584-0.587,1.535,0,2.121c0.585,0.584,1.536,0.584,2.121-0.002l7.425-7.424c0.584-0.586,0.584-1.535,0-2.121C19.687,10.141,18.736,10.142,18.152,10.727z\",\r\n        calendar: \"M22,4.582h-2v3.335h2V4.582zM25.416,5.748H23v3.17h-4v-3.17h-6v3.168H9.002V5.748H6.583v21.555h18.833V5.748zM24.418,26.303H7.584V13.988h16.833V26.303zM12,4.582h-2v3.335h2V4.582zM19.428,23.962h1.568v-7.788h-1.277c0,0.067-0.021,0.172-0.061,0.312c-0.066,0.232-0.168,0.419-0.299,0.559c-0.193,0.204-0.443,0.34-0.75,0.408c-0.193,0.043-0.531,0.075-1.014,0.097v1.042h1.832V23.962zM13.673,22.909c-0.489,0-0.827-0.188-1.013-0.564c-0.101-0.203-0.15-0.461-0.15-0.773h-1.504c0.025,0.62,0.15,1.121,0.376,1.504c0.429,0.721,1.194,1.08,2.296,1.08c0.895,0,1.569-0.25,2.026-0.749c0.455-0.5,0.684-1.079,0.684-1.737c0-0.627-0.195-1.121-0.586-1.482c-0.261-0.24-0.461-0.36-0.602-0.36c0.187-0.071,0.365-0.206,0.537-0.403c0.272-0.314,0.408-0.701,0.408-1.16c0-0.647-0.228-1.164-0.684-1.549c-0.456-0.386-1.056-0.578-1.8-0.578c-0.4,0-0.738,0.049-1.014,0.146c-0.276,0.097-0.514,0.236-0.714,0.419c-0.269,0.258-0.465,0.539-0.591,0.843c-0.117,0.348-0.184,0.715-0.198,1.102h1.429c-0.007-0.384,0.074-0.689,0.244-0.919c0.169-0.229,0.435-0.344,0.795-0.344c0.314,0,0.559,0.094,0.731,0.279c0.174,0.187,0.26,0.428,0.26,0.726c0,0.458-0.169,0.763-0.508,0.913c-0.196,0.09-0.543,0.138-1.039,0.145v1.096c0.507,0,0.878,0.049,1.114,0.146c0.414,0.172,0.621,0.514,0.621,1.026c0,0.387-0.112,0.683-0.335,0.889C14.234,22.807,13.973,22.909,13.673,22.909z\",\r\n\t\tcalendar2: \"M22,4.582h-2v3.335h2V4.582zM12,4.582h-2v3.335h2V4.582zM25.416,5.748H23v3.17h-4v-3.17h-6v3.168H9.002V5.748H6.583v21.555h18.833V5.748zM11.033,26.303H7.584v-3.44h3.449V26.303zM11.033,21.862H7.584v-3.434h3.449V21.862zM11.033,17.429H7.584v-3.441h3.449V17.429zM15.501,26.303h-3.468v-3.44h3.468V26.303zM15.501,21.862h-3.468v-3.434h3.468V21.862zM15.501,17.429h-3.468v-3.441h3.468V17.429zM19.97,26.303h-3.469v-3.44h3.469V26.303zM19.97,21.862h-3.469v-3.434h3.469V21.862zM19.97,17.429h-3.469v-3.441h3.469V17.429zM24.418,26.303H20.97v-3.44h3.448V26.303zM24.418,21.862H20.97v-3.434h3.448V21.862zM24.418,17.429H20.97v-3.441h3.448V17.429z\",\r\n        picker: \"M22.221,10.853c-0.111-0.414-0.261-0.412,0.221-1.539l1.66-3.519c0.021-0.051,0.2-0.412,0.192-0.946c0.015-0.529-0.313-1.289-1.119-1.642c-1.172-0.555-1.17-0.557-2.344-1.107c-0.784-0.396-1.581-0.171-1.979,0.179c-0.42,0.333-0.584,0.7-0.609,0.75L16.58,6.545c-0.564,1.084-0.655,0.97-1.048,1.147c-0.469,0.129-1.244,0.558-1.785,1.815c-1.108,2.346-1.108,2.346-1.108,2.346l-0.276,0.586l1.17,0.553l-3.599,7.623c-0.38,0.828-0.166,1.436-0.166,2.032c0.01,0.627-0.077,1.509-0.876,3.21l-0.276,0.586l3.517,1.661l0.276-0.585c0.808-1.699,1.431-2.326,1.922-2.717c0.46-0.381,1.066-0.6,1.465-1.42l3.599-7.618l1.172,0.554l0.279-0.589c0,0,0,0,1.105-2.345C22.578,12.166,22.419,11.301,22.221,10.853zM14.623,22.83c-0.156,0.353-0.413,0.439-1.091,0.955c-0.577,0.448-1.264,1.172-2.009,2.6l-1.191-0.562c0.628-1.48,0.75-2.474,0.73-3.203c-0.031-0.851-0.128-1.104,0.045-1.449l3.599-7.621l3.517,1.662L14.623,22.83z\",\r\n        no: \"M16,3.667C9.189,3.667,3.667,9.188,3.667,16S9.189,28.333,16,28.333c6.812,0,12.333-5.521,12.333-12.333S22.812,3.667,16,3.667zM16,6.667c1.851,0,3.572,0.548,5.024,1.48L8.147,21.024c-0.933-1.452-1.48-3.174-1.48-5.024C6.667,10.854,10.854,6.667,16,6.667zM16,25.333c-1.85,0-3.572-0.548-5.024-1.48l12.876-12.877c0.933,1.452,1.48,3.174,1.48,5.024C25.333,21.146,21.146,25.333,16,25.333z\",\r\n        commandline: \"M2.021,9.748L2.021,9.748V9.746V9.748zM2.022,9.746l5.771,5.773l-5.772,5.771l2.122,2.123l7.894-7.895L4.143,7.623L2.022,9.746zM12.248,23.269h14.419V20.27H12.248V23.269zM16.583,17.019h10.084V14.02H16.583V17.019zM12.248,7.769v3.001h14.419V7.769H12.248z\",\r\n        photo: \"M24.25,10.25H20.5v-1.5h-9.375v1.5h-3.75c-1.104,0-2,0.896-2,2v10.375c0,1.104,0.896,2,2,2H24.25c1.104,0,2-0.896,2-2V12.25C26.25,11.146,25.354,10.25,24.25,10.25zM15.812,23.499c-3.342,0-6.06-2.719-6.06-6.061c0-3.342,2.718-6.062,6.06-6.062s6.062,2.72,6.062,6.062C21.874,20.78,19.153,23.499,15.812,23.499zM15.812,13.375c-2.244,0-4.062,1.819-4.062,4.062c0,2.244,1.819,4.062,4.062,4.062c2.244,0,4.062-1.818,4.062-4.062C19.875,15.194,18.057,13.375,15.812,13.375z\",\r\n        printer: \"M24.569,12.125h-2.12c-0.207-1.34-1.247-2.759-2.444-3.967c-1.277-1.24-2.654-2.234-3.784-2.37c-0.062-0.008-0.124-0.014-0.198-0.015H8.594c-0.119,0-0.235,0.047-0.319,0.132c-0.083,0.083-0.132,0.2-0.132,0.32v5.9H6.069c-1.104,0-2,0.896-2,2V23h4.074v2.079c0,0.118,0.046,0.23,0.132,0.318c0.086,0.085,0.199,0.131,0.319,0.131h13.445c0.118,0,0.232-0.046,0.318-0.131s0.138-0.199,0.138-0.318V23h4.074v-8.875C26.569,13.021,25.674,12.125,24.569,12.125zM21.589,24.626H9.043V21.5h12.546V24.626zM21.589,13.921c0-0.03,0-0.063-0.003-0.096c-0.015-0.068-0.062-0.135-0.124-0.2H9.043v-6.95h6.987v0.001c0.305-0.019,0.567,0.282,0.769,0.971c0.183,0.655,0.229,1.509,0.229,2.102c0.001,0.433-0.019,0.725-0.019,0.725l-0.037,0.478l0.48,0.005c0.002,0,1.109,0.014,2.196,0.26c1.044,0.226,1.86,0.675,1.938,1.184c0.003,0.045,0.003,0.091,0.003,0.133V13.921z\",\r\n        \"export\": \"M24.086,20.904c-1.805,3.113-5.163,5.212-9.023,5.219c-5.766-0.01-10.427-4.672-10.438-10.435C4.636,9.922,9.297,5.261,15.063,5.25c3.859,0.007,7.216,2.105,9.022,5.218l3.962,2.284l0.143,0.082C26.879,6.784,21.504,2.25,15.063,2.248C7.64,2.25,1.625,8.265,1.624,15.688c0.002,7.42,6.017,13.435,13.439,13.437c6.442-0.002,11.819-4.538,13.127-10.589l-0.141,0.081L24.086,20.904zM28.4,15.688l-7.15-4.129v2.297H10.275v3.661H21.25v2.297L28.4,15.688z\",\r\n        \"import\": \"M15.067,2.25c-5.979,0-11.035,3.91-12.778,9.309h3.213c1.602-3.705,5.271-6.301,9.565-6.309c5.764,0.01,10.428,4.674,10.437,10.437c-0.009,5.764-4.673,10.428-10.437,10.438c-4.294-0.007-7.964-2.605-9.566-6.311H2.289c1.744,5.399,6.799,9.31,12.779,9.312c7.419-0.002,13.437-6.016,13.438-13.438C28.504,8.265,22.486,2.252,15.067,2.25zM10.918,19.813l7.15-4.126l-7.15-4.129v2.297H-0.057v3.661h10.975V19.813z\",\r\n        run: \"M17.41,20.395l-0.778-2.723c0.228-0.2,0.442-0.414,0.644-0.643l2.721,0.778c0.287-0.418,0.534-0.862,0.755-1.323l-2.025-1.96c0.097-0.288,0.181-0.581,0.241-0.883l2.729-0.684c0.02-0.252,0.039-0.505,0.039-0.763s-0.02-0.51-0.039-0.762l-2.729-0.684c-0.061-0.302-0.145-0.595-0.241-0.883l2.026-1.96c-0.222-0.46-0.469-0.905-0.756-1.323l-2.721,0.777c-0.201-0.228-0.416-0.442-0.644-0.643l0.778-2.722c-0.418-0.286-0.863-0.534-1.324-0.755l-1.96,2.026c-0.287-0.097-0.581-0.18-0.883-0.241l-0.683-2.73c-0.253-0.019-0.505-0.039-0.763-0.039s-0.51,0.02-0.762,0.039l-0.684,2.73c-0.302,0.061-0.595,0.144-0.883,0.241l-1.96-2.026C7.048,3.463,6.604,3.71,6.186,3.997l0.778,2.722C6.736,6.919,6.521,7.134,6.321,7.361L3.599,6.583C3.312,7.001,3.065,7.446,2.844,7.907l2.026,1.96c-0.096,0.288-0.18,0.581-0.241,0.883l-2.73,0.684c-0.019,0.252-0.039,0.505-0.039,0.762s0.02,0.51,0.039,0.763l2.73,0.684c0.061,0.302,0.145,0.595,0.241,0.883l-2.026,1.96c0.221,0.46,0.468,0.905,0.755,1.323l2.722-0.778c0.2,0.229,0.415,0.442,0.643,0.643l-0.778,2.723c0.418,0.286,0.863,0.533,1.323,0.755l1.96-2.026c0.288,0.097,0.581,0.181,0.883,0.241l0.684,2.729c0.252,0.02,0.505,0.039,0.763,0.039s0.51-0.02,0.763-0.039l0.683-2.729c0.302-0.061,0.596-0.145,0.883-0.241l1.96,2.026C16.547,20.928,16.992,20.681,17.41,20.395zM11.798,15.594c-1.877,0-3.399-1.522-3.399-3.399s1.522-3.398,3.399-3.398s3.398,1.521,3.398,3.398S13.675,15.594,11.798,15.594zM27.29,22.699c0.019-0.547-0.06-1.104-0.23-1.654l1.244-1.773c-0.188-0.35-0.4-0.682-0.641-0.984l-2.122,0.445c-0.428-0.364-0.915-0.648-1.436-0.851l-0.611-2.079c-0.386-0.068-0.777-0.105-1.173-0.106l-0.974,1.936c-0.279,0.054-0.558,0.128-0.832,0.233c-0.257,0.098-0.497,0.22-0.727,0.353L17.782,17.4c-0.297,0.262-0.568,0.545-0.813,0.852l0.907,1.968c-0.259,0.495-0.437,1.028-0.519,1.585l-1.891,1.06c0.019,0.388,0.076,0.776,0.164,1.165l2.104,0.519c0.231,0.524,0.541,0.993,0.916,1.393l-0.352,2.138c0.32,0.23,0.66,0.428,1.013,0.6l1.715-1.32c0.536,0.141,1.097,0.195,1.662,0.15l1.452,1.607c0.2-0.057,0.399-0.118,0.596-0.193c0.175-0.066,0.34-0.144,0.505-0.223l0.037-2.165c0.455-0.339,0.843-0.747,1.152-1.206l2.161-0.134c0.152-0.359,0.279-0.732,0.368-1.115L27.29,22.699zM23.127,24.706c-1.201,0.458-2.545-0.144-3.004-1.345s0.143-2.546,1.344-3.005c1.201-0.458,2.547,0.144,3.006,1.345C24.931,22.902,24.328,24.247,23.127,24.706z\",\r\n        magnet: \"M20.812,19.5h5.002v-6.867c-0.028-1.706-0.61-3.807-2.172-5.841c-1.539-2.014-4.315-3.72-7.939-3.687C12.076,3.073,9.3,4.779,7.762,6.792C6.2,8.826,5.617,10.928,5.588,12.634V19.5h5v-6.866c-0.027-0.377,0.303-1.789,1.099-2.748c0.819-0.979,1.848-1.747,4.014-1.778c2.165,0.032,3.195,0.799,4.013,1.778c0.798,0.959,1.126,2.372,1.099,2.748V19.5L20.812,19.5zM25.814,25.579c0,0,0-2.354,0-5.079h-5.002c0,2.727,0,5.08,0,5.08l5.004-0.001H25.814zM5.588,25.58h5c0,0,0-2.354,0-5.08h-5C5.588,23.227,5.588,25.58,5.588,25.58z\",\r\n        nomagnet: \"M10.59,17.857v-5.225c-0.027-0.376,0.303-1.789,1.099-2.748c0.819-0.979,1.849-1.748,4.014-1.778c1.704,0.026,2.699,0.508,3.447,1.189l3.539-3.539c-1.616-1.526-4.01-2.679-6.986-2.652C12.077,3.073,9.3,4.779,7.762,6.793C6.2,8.826,5.617,10.928,5.59,12.634V19.5h3.357L10.59,17.857zM5.59,20.5v2.357L7.947,20.5H5.59zM20.812,13.29v6.21h5.002v-6.866c-0.021-1.064-0.252-2.283-0.803-3.542L20.812,13.29zM25.339,4.522L4.652,25.209l1.415,1.416L26.753,5.937L25.339,4.522zM20.812,25.58h5.002c0,0,0-2.354,0-5.08h-5.002C20.812,23.227,20.812,25.58,20.812,25.58zM10.59,25.58c0,0,0-0.827,0-2.064L8.525,25.58H10.59z\",\r\n        reflecth: \"M15.57,20.273h0.854v-1.705H15.57V20.273zM15.57,23.686h0.854V21.98H15.57V23.686zM15.57,27.096h0.854v-1.705H15.57V27.096zM15.57,29.689h0.854V28.8H15.57V29.689zM15.57,16.865h0.854V15.16H15.57V16.865zM15.57,3.225h0.854V1.52H15.57V3.225zM15.57,6.635h0.854V4.93H15.57V6.635zM15.57,10.045h0.854V8.34H15.57V10.045zM15.57,13.455h0.854V11.75H15.57V13.455zM18.41,3.327V25.46h12.015L18.41,3.327zM19.264,6.68l9.729,17.93h-9.729V6.68zM13.535,25.46V3.327L1.521,25.46H13.535z\",\r\n        reflectv: \"M20.643,16.008v-0.854h-1.705v0.854H20.643zM24.053,16.008v-0.854h-1.705v0.854H24.053zM27.463,16.008v-0.854h-1.705v0.854H27.463zM30.059,16.008v-0.854h-0.891v0.854H30.059zM17.232,16.008v-0.854h-1.709v0.854H17.232zM3.593,16.008v-0.854H1.888v0.854H3.593zM7.003,16.008v-0.854H5.298v0.854H7.003zM10.414,16.008v-0.854H8.709v0.854H10.414zM13.824,16.008v-0.854h-1.705v0.854H13.824zM3.694,13.167h22.134V1.152L3.694,13.167zM7.048,12.314l17.929-9.729v9.729H7.048zM25.828,18.042H3.694l22.134,12.015V18.042z\",\r\n        resize2: \"M1.999,2.332v26.499H28.5V2.332H1.999zM26.499,26.832H4V12.5h8.167V4.332h14.332V26.832zM15.631,17.649l5.468,5.469l-1.208,1.206l5.482,1.469l-1.47-5.481l-1.195,1.195l-5.467-5.466l1.209-1.208l-5.482-1.469l1.468,5.48L15.631,17.649z\",\r\n        rotate: \"M15.5,5.27c1.914,0,3.666,0.629,5.089,1.686l-1.781,1.783l8.428,2.256l-2.26-8.427l-1.889,1.89C21.016,2.781,18.371,1.77,15.5,1.77C8.827,1.773,3.418,7.181,3.417,13.855c0.001,4.063,2.012,7.647,5.084,9.838v-4.887c-0.993-1.4-1.583-3.105-1.585-4.952C6.923,9.114,10.759,5.278,15.5,5.27zM9.5,29.23h12V12.355h-12V29.23z\",\r\n        connect: \"M25.06,13.719c-0.944-5.172-5.461-9.094-10.903-9.094v4c3.917,0.006,7.085,3.176,7.094,7.094c-0.009,3.917-3.177,7.085-7.094,7.093v4.002c5.442-0.004,9.959-3.926,10.903-9.096h4.69v-3.999H25.06zM20.375,15.719c0-3.435-2.784-6.219-6.219-6.219c-2.733,0-5.05,1.766-5.884,4.218H1.438v4.001h6.834c0.833,2.452,3.15,4.219,5.884,4.219C17.591,21.938,20.375,19.153,20.375,15.719z\",\r\n        disconnect: \"M9.219,9.5c-2.733,0-5.05,1.766-5.884,4.218H1.438v4.001h1.897c0.833,2.452,3.15,4.219,5.884,4.219c3.435,0,6.219-2.784,6.219-6.219S12.653,9.5,9.219,9.5zM27.685,13.719c-0.944-5.172-5.461-9.094-10.903-9.094v4c3.917,0.006,7.085,3.176,7.094,7.094c-0.009,3.917-3.177,7.085-7.094,7.093v4.002c5.442-0.004,9.959-3.926,10.903-9.096h2.065v-3.999H27.685z\",\r\n        folder: \"M28.625,26.75h-26.5V8.375h1.124c1.751,0,0.748-3.125,3-3.125c3.215,0,1.912,0,5.126,0c2.251,0,1.251,3.125,3.001,3.125h14.25V26.75z\",\r\n        man: \"M21.021,16.349c-0.611-1.104-1.359-1.998-2.109-2.623c-0.875,0.641-1.941,1.031-3.103,1.031c-1.164,0-2.231-0.391-3.105-1.031c-0.75,0.625-1.498,1.519-2.111,2.623c-1.422,2.563-1.578,5.192-0.35,5.874c0.55,0.307,1.127,0.078,1.723-0.496c-0.105,0.582-0.166,1.213-0.166,1.873c0,2.932,1.139,5.307,2.543,5.307c0.846,0,1.265-0.865,1.466-2.189c0.201,1.324,0.62,2.189,1.463,2.189c1.406,0,2.545-2.375,2.545-5.307c0-0.66-0.061-1.291-0.168-1.873c0.598,0.574,1.174,0.803,1.725,0.496C22.602,21.541,22.443,18.912,21.021,16.349zM15.808,13.757c2.362,0,4.278-1.916,4.278-4.279s-1.916-4.279-4.278-4.279c-2.363,0-4.28,1.916-4.28,4.279S13.445,13.757,15.808,13.757z\",\r\n        woman: \"M21.022,16.349c-0.611-1.104-1.359-1.998-2.109-2.623c-0.875,0.641-1.941,1.031-3.104,1.031c-1.164,0-2.231-0.391-3.105-1.031c-0.75,0.625-1.498,1.519-2.111,2.623c-1.422,2.563-1.579,5.192-0.351,5.874c0.55,0.307,1.127,0.078,1.723-0.496c-0.105,0.582-0.167,1.213-0.167,1.873c0,2.932,1.139,5.307,2.543,5.307c0.846,0,1.265-0.865,1.466-2.189c0.201,1.324,0.62,2.189,1.464,2.189c1.406,0,2.545-2.375,2.545-5.307c0-0.66-0.061-1.291-0.168-1.873c0.598,0.574,1.174,0.803,1.725,0.496C22.603,21.541,22.444,18.912,21.022,16.349zM15.808,13.757c2.363,0,4.279-1.916,4.279-4.279s-1.916-4.279-4.279-4.279c-2.363,0-4.28,1.916-4.28,4.279S13.445,13.757,15.808,13.757zM18.731,4.974c1.235,0.455,0.492-0.725,0.492-1.531s0.762-1.792-0.492-1.391c-1.316,0.422-2.383,0.654-2.383,1.461S17.415,4.489,18.731,4.974zM15.816,4.4c0.782,0,0.345-0.396,0.345-0.884c0-0.488,0.438-0.883-0.345-0.883s-0.374,0.396-0.374,0.883C15.442,4.005,15.034,4.4,15.816,4.4zM12.884,4.974c1.316-0.484,2.383-0.654,2.383-1.461S14.2,2.474,12.884,2.052c-1.254-0.402-0.492,0.584-0.492,1.391S11.648,5.428,12.884,4.974z\",\r\n\t\tspeaker: \"M12.558,15.254c2.362,0,4.277-1.916,4.277-4.279s-1.916-4.279-4.277-4.279c-2.363,0-4.28,1.916-4.28,4.279S10.194,15.254,12.558,15.254zM15.662,15.224c-0.875,0.641-1.941,1.031-3.103,1.031c-1.164,0-2.231-0.391-3.105-1.031c-0.75,0.625-1.498,1.519-2.111,2.623c-1.422,2.563-1.578,5.192-0.35,5.874c0.55,0.312,1.127,0.078,1.723-0.496c-0.105,0.582-0.166,1.213-0.166,1.873c0,2.938,1.139,5.312,2.543,5.312c0.846,0,1.265-0.865,1.466-2.188c0.201,1.311,0.62,2.188,1.462,2.188c1.396,0,2.544-2.375,2.544-5.312c0-0.66-0.062-1.291-0.167-1.873c0.598,0.574,1.174,0.812,1.725,0.496c1.228-0.682,1.069-3.311-0.353-5.874C17.159,16.742,16.412,15.849,15.662,15.224zM19.821,3.711l-1.414,1.414c1.499,1.499,2.428,3.569,2.428,5.851c0,2.283-0.929,4.353-2.428,5.853l1.413,1.412c1.861-1.86,3.015-4.43,3.015-7.265C22.835,8.142,21.683,5.572,19.821,3.711zM16.288,14.707l1.413,1.414c1.318-1.318,2.135-3.138,2.135-5.145c0-2.007-0.816-3.827-2.134-5.145l-1.414,1.414c0.956,0.956,1.547,2.275,1.547,3.731S17.243,13.751,16.288,14.707zM21.941,1.59l-1.413,1.414c2.042,2.042,3.307,4.862,3.307,7.971c0,3.11-1.265,5.93-3.308,7.972l1.413,1.414c2.405-2.404,3.895-5.725,3.895-9.386C25.835,7.315,24.346,3.995,21.941,1.59z\",\r\n        people: \"M21.066,20.667c1.227-0.682,1.068-3.311-0.354-5.874c-0.611-1.104-1.359-1.998-2.109-2.623c-0.875,0.641-1.941,1.031-3.102,1.031c-1.164,0-2.231-0.391-3.104-1.031c-0.75,0.625-1.498,1.519-2.111,2.623c-1.422,2.563-1.578,5.192-0.35,5.874c0.549,0.312,1.127,0.078,1.723-0.496c-0.105,0.582-0.166,1.213-0.166,1.873c0,2.938,1.139,5.312,2.543,5.312c0.846,0,1.265-0.865,1.466-2.188c0.2,1.314,0.62,2.188,1.461,2.188c1.396,0,2.545-2.375,2.545-5.312c0-0.66-0.062-1.291-0.168-1.873C19.939,20.745,20.516,20.983,21.066,20.667zM15.5,12.201c2.361,0,4.277-1.916,4.277-4.279S17.861,3.644,15.5,3.644c-2.363,0-4.28,1.916-4.28,4.279S13.137,12.201,15.5,12.201zM24.094,14.914c1.938,0,3.512-1.573,3.512-3.513c0-1.939-1.573-3.513-3.512-3.513c-1.94,0-3.513,1.573-3.513,3.513C20.581,13.341,22.153,14.914,24.094,14.914zM28.374,17.043c-0.502-0.907-1.116-1.641-1.732-2.154c-0.718,0.526-1.594,0.846-2.546,0.846c-0.756,0-1.459-0.207-2.076-0.55c0.496,1.093,0.803,2.2,0.861,3.19c0.093,1.516-0.381,2.641-1.329,3.165c-0.204,0.117-0.426,0.183-0.653,0.224c-0.056,0.392-0.095,0.801-0.095,1.231c0,2.412,0.935,4.361,2.088,4.361c0.694,0,1.039-0.71,1.204-1.796c0.163,1.079,0.508,1.796,1.199,1.796c1.146,0,2.09-1.95,2.09-4.361c0-0.542-0.052-1.06-0.139-1.538c0.492,0.472,0.966,0.667,1.418,0.407C29.671,21.305,29.541,19.146,28.374,17.043zM6.906,14.914c1.939,0,3.512-1.573,3.512-3.513c0-1.939-1.573-3.513-3.512-3.513c-1.94,0-3.514,1.573-3.514,3.513C3.392,13.341,4.966,14.914,6.906,14.914zM9.441,21.536c-1.593-0.885-1.739-3.524-0.457-6.354c-0.619,0.346-1.322,0.553-2.078,0.553c-0.956,0-1.832-0.321-2.549-0.846c-0.616,0.513-1.229,1.247-1.733,2.154c-1.167,2.104-1.295,4.262-0.287,4.821c0.451,0.257,0.925,0.064,1.414-0.407c-0.086,0.479-0.136,0.996-0.136,1.538c0,2.412,0.935,4.361,2.088,4.361c0.694,0,1.039-0.71,1.204-1.796c0.165,1.079,0.509,1.796,1.201,1.796c1.146,0,2.089-1.95,2.089-4.361c0-0.432-0.04-0.841-0.097-1.233C9.874,21.721,9.651,21.656,9.441,21.536z\",\r\n        parent: \"M14.423,12.17c-0.875,0.641-1.941,1.031-3.102,1.031c-1.164,0-2.231-0.391-3.104-1.031c-0.75,0.625-1.498,1.519-2.111,2.623c-1.422,2.563-1.578,5.192-0.35,5.874c0.549,0.312,1.127,0.078,1.723-0.496c-0.105,0.582-0.166,1.213-0.166,1.873c0,2.938,1.139,5.312,2.543,5.312c0.846,0,1.265-0.865,1.466-2.188c0.2,1.314,0.62,2.188,1.461,2.188c1.396,0,2.545-2.375,2.545-5.312c0-0.66-0.062-1.291-0.168-1.873c0.6,0.574,1.176,0.812,1.726,0.496c1.227-0.682,1.068-3.311-0.354-5.874C15.921,13.689,15.173,12.795,14.423,12.17zM11.32,12.201c2.361,0,4.277-1.916,4.277-4.279s-1.916-4.279-4.277-4.279c-2.363,0-4.28,1.916-4.28,4.279S8.957,12.201,11.32,12.201zM21.987,17.671c1.508,0,2.732-1.225,2.732-2.735c0-1.51-1.225-2.735-2.732-2.735c-1.511,0-2.736,1.225-2.736,2.735C19.251,16.446,20.477,17.671,21.987,17.671zM25.318,19.327c-0.391-0.705-0.869-1.277-1.349-1.677c-0.56,0.41-1.24,0.659-1.982,0.659c-0.744,0-1.426-0.25-1.983-0.659c-0.479,0.399-0.958,0.972-1.35,1.677c-0.909,1.638-1.009,3.318-0.224,3.754c0.351,0.2,0.721,0.05,1.101-0.317c-0.067,0.372-0.105,0.775-0.105,1.197c0,1.878,0.728,3.396,1.625,3.396c0.54,0,0.808-0.553,0.937-1.398c0.128,0.841,0.396,1.398,0.934,1.398c0.893,0,1.627-1.518,1.627-3.396c0-0.422-0.04-0.825-0.107-1.197c0.383,0.367,0.752,0.52,1.104,0.317C26.328,22.646,26.227,20.965,25.318,19.327z\",\r\n        notebook: \"M24.875,1.375H8c-1.033,0-1.874,0.787-1.979,1.792h1.604c1.102,0,2,0.898,2,2c0,1.102-0.898,2-2,2H6v0.999h1.625c1.104,0,2.002,0.898,2.002,2.002c0,1.104-0.898,2.001-2.002,2.001H6v0.997h1.625c1.102,0,2,0.898,2,2c0,1.104-0.898,2.004-2,2.004H6v0.994h1.625c1.102,0,2,0.898,2,2.002s-0.898,2.002-2,2.002H6v0.997h1.624c1.104,0,2.002,0.897,2.002,2.001c0,1.104-0.898,2.002-2.002,2.002H6.004C6.027,28.252,6.91,29.125,8,29.125h16.875c1.104,0,2-0.896,2-2V3.375C26.875,2.271,25.979,1.375,24.875,1.375zM25.25,8.375c0,0.552-0.447,1-1,1H14c-0.553,0-1-0.448-1-1V4c0-0.552,0.447-1,1-1h10.25c0.553,0,1,0.448,1,1V8.375zM8.625,25.166c0-0.554-0.449-1.001-1-1.001h-3.25c-0.552,0-1,0.447-1,1.001c0,0.552,0.449,1,1,1h3.25C8.176,26.166,8.625,25.718,8.625,25.166zM4.375,6.166h3.251c0.551,0,0.999-0.448,0.999-0.999c0-0.555-0.448-1-0.999-1H4.375c-0.553,0-1,0.445-1,1C3.374,5.718,3.822,6.166,4.375,6.166zM4.375,11.167h3.25c0.553,0,1-0.448,1-1s-0.448-1-1-1h-3.25c-0.553,0-1,0.448-1,1S3.822,11.167,4.375,11.167zM4.375,16.167h3.25c0.551,0,1-0.448,1-1.001s-0.448-0.999-1-0.999h-3.25c-0.553,0-1.001,0.446-1.001,0.999S3.822,16.167,4.375,16.167zM3.375,20.165c0,0.553,0.446,1.002,1,1.002h3.25c0.551,0,1-0.449,1-1.002c0-0.552-0.448-1-1-1h-3.25C3.821,19.165,3.375,19.613,3.375,20.165z\",\r\n        diagram: \"M6.812,17.202l7.396-3.665v-2.164h-0.834c-0.414,0-0.808-0.084-1.167-0.237v1.159l-7.396,3.667v2.912h2V17.202zM26.561,18.875v-2.913l-7.396-3.666v-1.158c-0.358,0.152-0.753,0.236-1.166,0.236h-0.832l-0.001,2.164l7.396,3.666v1.672H26.561zM16.688,18.875v-7.501h-2v7.501H16.688zM27.875,19.875H23.25c-1.104,0-2,0.896-2,2V26.5c0,1.104,0.896,2,2,2h4.625c1.104,0,2-0.896,2-2v-4.625C29.875,20.771,28.979,19.875,27.875,19.875zM8.125,19.875H3.5c-1.104,0-2,0.896-2,2V26.5c0,1.104,0.896,2,2,2h4.625c1.104,0,2-0.896,2-2v-4.625C10.125,20.771,9.229,19.875,8.125,19.875zM13.375,10.375H18c1.104,0,2-0.896,2-2V3.75c0-1.104-0.896-2-2-2h-4.625c-1.104,0-2,0.896-2,2v4.625C11.375,9.479,12.271,10.375,13.375,10.375zM18,19.875h-4.625c-1.104,0-2,0.896-2,2V26.5c0,1.104,0.896,2,2,2H18c1.104,0,2-0.896,2-2v-4.625C20,20.771,19.104,19.875,18,19.875z\",\r\n        barchart: \"M21.25,8.375V28h6.5V8.375H21.25zM12.25,28h6.5V4.125h-6.5V28zM3.25,28h6.5V12.625h-6.5V28z\",\r\n        piechart: \"M15.583,15.917l1.648-10.779C16.692,5.056,16.145,5,15.583,5C9.554,5,4.666,9.888,4.666,15.917c0,6.029,4.888,10.917,10.917,10.917S26.5,21.946,26.5,15.917c0-0.256-0.021-0.507-0.038-0.759L15.583,15.917zM19.437,3.127l-1.648,10.779l10.879-0.759C28.313,8.026,24.436,3.886,19.437,3.127z\",\r\n        linechart: \"M3.625,25.062c-0.539-0.115-0.885-0.646-0.77-1.187l0,0L6.51,6.584l2.267,9.259l1.923-5.188l3.581,3.741l3.883-13.103l2.934,11.734l1.96-1.509l5.271,11.74c0.226,0.504,0,1.095-0.505,1.321l0,0c-0.505,0.227-1.096,0-1.322-0.504l0,0l-4.23-9.428l-2.374,1.826l-1.896-7.596l-2.783,9.393l-3.754-3.924L8.386,22.66l-1.731-7.083l-1.843,8.711c-0.101,0.472-0.515,0.794-0.979,0.794l0,0C3.765,25.083,3.695,25.076,3.625,25.062L3.625,25.062z\",\r\n        apps: \"M24.359,18.424l-2.326,1.215c0.708,1.174,1.384,2.281,1.844,3.033l2.043-1.066C25.538,20.822,24.966,19.652,24.359,18.424zM19.143,14.688c0.445,0.84,1.342,2.367,2.274,3.926l2.414-1.261c-0.872-1.769-1.72-3.458-2.087-4.122c-0.896-1.621-1.982-3.108-3.454-5.417c-1.673-2.625-3.462-5.492-4.052-4.947c-1.194,0.384,1.237,4.094,1.876,5.715C16.73,10.147,17.991,12.512,19.143,14.688zM26.457,22.673l-1.961,1.022l1.982,4.598c0,0,0.811,0.684,1.92,0.213c1.104-0.469,0.81-1.706,0.81-1.706L26.457,22.673zM24.35,15.711c0.168,0.339,2.924,5.93,2.924,5.93h1.983v-5.93H24.35zM18.34,15.704h-4.726l-3.424,5.935h11.66C21.559,21.159,18.771,16.479,18.34,15.704zM3.231,21.613l3.437-5.902H2.083v5.93h1.133L3.231,21.613zM15.048,10.145c0-0.93-0.754-1.685-1.685-1.685c-0.661,0-1.231,0.381-1.507,0.936l2.976,1.572C14.97,10.725,15.048,10.444,15.048,10.145zM14.343,12.06l-3.188-1.684L9.62,13.012l3.197,1.689L14.343,12.06zM3.192,26.886l-0.384,1.108v0.299l0.298-0.128l0.725-0.896l2.997-2.354l-3.137-1.651L3.192,26.886zM9.02,14.044l-4.757,8.17l3.23,1.706l4.728-8.186L9.02,14.044z\",\r\n        locked: \"M26.711,14.085L16.914,4.29c-0.778-0.778-2.051-0.778-2.829,0L4.29,14.086c-0.778,0.778-0.778,2.05,0,2.829l9.796,9.796c0.778,0.777,2.051,0.777,2.829,0l9.797-9.797C27.488,16.136,27.488,14.863,26.711,14.085zM8.218,16.424c-0.4-0.153-0.687-0.533-0.687-0.987s0.287-0.834,0.687-0.987V16.424zM8.969,16.424v-1.974c0.4,0.152,0.687,0.533,0.687,0.987S9.369,16.272,8.969,16.424zM13.5,19.188l1.203-3.609c-0.689-0.306-1.172-0.994-1.172-1.797c0-1.087,0.881-1.969,1.969-1.969c1.087,0,1.969,0.881,1.969,1.969c0,0.803-0.482,1.491-1.172,1.797l1.203,3.609H13.5zM22.03,16.549c-0.399-0.152-0.687-0.533-0.687-0.986s0.287-0.834,0.687-0.987V16.549zM22.781,16.549v-1.973c0.4,0.152,0.688,0.533,0.688,0.987S23.182,16.397,22.781,16.549z\",\r\n        ppt: \"M16.604,1.914c0-0.575-0.466-1.041-1.041-1.041s-1.041,0.466-1.041,1.041v1.04h2.082V1.914zM16.604,22.717h-2.082v3.207c0,0.574-4.225,4.031-4.225,4.031l2.468-0.003l2.807-2.673l3.013,2.693l2.272-0.039l-4.254-4.011V22.717L16.604,22.717zM28.566,7.113c0.86,0,1.56-0.698,1.56-1.56c0-0.861-0.698-1.56-1.56-1.56H2.561c-0.861,0-1.56,0.699-1.56,1.56c0,0.862,0.699,1.56,1.56,1.56h1.583v12.505l-0.932-0.022c-0.861,0-1.213,0.467-1.213,1.04c0,0.576,0.352,1.041,1.213,1.041h24.597c0.86,0,1.299-0.465,1.299-1.041c0-1.094-1.299-1.04-1.299-1.04l-0.804,0.109V7.113H28.566zM11.435,17.516c-3.771,0-4.194-4.191-4.194-4.191c0-4.096,4.162-4.161,4.162-4.161v4.161h4.193C15.596,17.516,11.435,17.516,11.435,17.516zM18.716,13.388h-1.071v-1.073h1.071V13.388zM18.716,10.267h-1.071V9.194h1.071V10.267zM23.314,13.388H20.26c-0.296,0-0.535-0.24-0.535-0.536c0-0.297,0.239-0.537,0.535-0.537h3.057c0.297,0,0.535,0.24,0.535,0.537C23.852,13.147,23.611,13.388,23.314,13.388zM23.314,10.267H20.26c-0.296,0-0.535-0.239-0.535-0.535c0-0.297,0.239-0.537,0.535-0.537h3.057c0.297,0,0.535,0.24,0.535,0.537C23.852,10.027,23.611,10.267,23.314,10.267z\",\r\n        lab: \"M22.121,24.438l-3.362-7.847c-0.329-0.769-0.599-2.081-0.599-2.917s0.513-1.521,1.14-1.521s1.141-0.513,1.141-1.14s-0.685-1.14-1.521-1.14h-6.84c-0.836,0-1.52,0.513-1.52,1.14s0.513,1.14,1.14,1.14s1.14,0.685,1.14,1.521s-0.269,2.148-0.599,2.917l-3.362,7.847C8.55,25.206,8.28,26.177,8.28,26.595s0.342,1.103,0.76,1.521s1.444,0.76,2.28,0.76h8.359c0.836,0,1.862-0.342,2.28-0.76s0.76-1.103,0.76-1.521S22.45,25.206,22.121,24.438zM16.582,7.625c0,0.599,0.484,1.083,1.083,1.083s1.083-0.484,1.083-1.083s-0.484-1.084-1.083-1.084S16.582,7.026,16.582,7.625zM13.667,7.792c0.276,0,0.5-0.224,0.5-0.5s-0.224-0.5-0.5-0.5s-0.5,0.224-0.5,0.5S13.391,7.792,13.667,7.792zM15.584,5.292c0.874,0,1.583-0.709,1.583-1.583c0-0.875-0.709-1.584-1.583-1.584C14.709,2.125,14,2.834,14,3.709C14,4.583,14.709,5.292,15.584,5.292z\",\r\n        umbrella: \"M14.784,26.991c0,1.238-1.329,1.696-1.835,1.696c-0.504,0-1.536-0.413-1.65-1.812c0-0.354-0.288-0.642-0.644-0.642c-0.354,0-0.641,0.287-0.641,0.642c0.045,1.056,0.756,3.052,2.935,3.052c2.432,0,3.166-1.882,3.166-3.144v-8.176l-1.328-0.024C14.787,18.584,14.784,25.889,14.784,26.991zM15.584,9.804c-6.807,0-11.084,4.859-11.587,8.326c0.636-0.913,1.694-1.51,2.89-1.51c1.197,0,2.22,0.582,2.855,1.495c0.638-0.904,1.69-1.495,2.88-1.495c1.2,0,2.26,0.6,2.896,1.517c0.635-0.917,1.83-1.517,3.03-1.517c1.19,0,2.241,0.591,2.879,1.495c0.636-0.913,1.659-1.495,2.855-1.495c1.197,0,2.254,0.597,2.89,1.51C26.669,14.663,22.393,9.804,15.584,9.804zM14.733,7.125v2.081h1.323V7.125c0-0.365-0.296-0.661-0.661-0.661C15.029,6.464,14.733,6.76,14.733,7.125z\",\r\n        dry: \"M14.784,26.991c0,1.238-1.329,1.696-1.835,1.696c-0.504,0-1.536-0.413-1.65-1.812c0-0.354-0.288-0.642-0.644-0.642c-0.354,0-0.641,0.287-0.641,0.642c0.045,1.056,0.756,3.052,2.935,3.052c2.432,0,3.166-1.882,3.166-3.144v-8.176l-1.328-0.024C14.787,18.584,14.784,25.889,14.784,26.991zM15.584,9.804c-6.807,0-11.084,4.859-11.587,8.326c0.636-0.913,1.694-1.51,2.89-1.51c1.197,0,2.22,0.582,2.855,1.495c0.638-0.904,1.69-1.495,2.88-1.495c1.2,0,2.26,0.6,2.896,1.517c0.635-0.917,1.83-1.517,3.03-1.517c1.19,0,2.241,0.591,2.879,1.495c0.636-0.913,1.659-1.495,2.855-1.495c1.197,0,2.254,0.597,2.89,1.51C26.669,14.663,22.393,9.804,15.584,9.804zM14.733,7.125v2.081h1.323V7.125c0-0.365-0.296-0.661-0.661-0.661C15.029,6.464,14.733,6.76,14.733,7.125zM7.562,6.015c0.54,0.312,1.229,0.128,1.54-0.412c0.109-0.189,0.157-0.398,0.15-0.602L9.251,3.09L7.59,4.047c-0.178,0.095-0.333,0.24-0.441,0.428C6.837,5.015,7.022,5.703,7.562,6.015zM5.572,11.717c0.109-0.19,0.158-0.398,0.151-0.602L5.721,9.203l-1.66,0.957c-0.178,0.096-0.333,0.241-0.441,0.429c-0.311,0.539-0.127,1.229,0.413,1.539C4.571,12.44,5.26,12.256,5.572,11.717zM10.523,9.355c0.539,0.312,1.229,0.126,1.541-0.412c0.109-0.189,0.156-0.398,0.15-0.603L12.214,6.43l-1.662,0.956c-0.177,0.097-0.332,0.241-0.441,0.43C9.799,8.354,9.984,9.044,10.523,9.355zM15.251,3.998c0.539,0.312,1.229,0.126,1.54-0.412c0.11-0.19,0.157-0.398,0.15-0.603L16.94,1.072l-1.661,0.956c-0.178,0.097-0.332,0.242-0.441,0.43C14.526,2.998,14.711,3.687,15.251,3.998zM19.348,8.914c0.539,0.312,1.228,0.128,1.541-0.412c0.109-0.189,0.156-0.398,0.149-0.602h-0.001V5.988l-1.661,0.957c-0.178,0.096-0.332,0.241-0.441,0.429C18.623,7.914,18.809,8.603,19.348,8.914zM23.633,5.196c0.54,0.312,1.23,0.126,1.542-0.413c0.109-0.189,0.156-0.398,0.149-0.602h-0.001V2.27l-1.662,0.957c-0.177,0.096-0.331,0.24-0.44,0.43C22.909,4.195,23.094,4.885,23.633,5.196zM27.528,8.51l-1.659,0.956c-0.18,0.097-0.334,0.242-0.443,0.43c-0.312,0.539-0.127,1.229,0.413,1.54c0.539,0.312,1.229,0.127,1.541-0.412c0.109-0.19,0.158-0.398,0.151-0.603L27.528,8.51z\",\r\n        ipad: \"M25.221,1.417H6.11c-0.865,0-1.566,0.702-1.566,1.566v25.313c0,0.865,0.701,1.565,1.566,1.565h19.111c0.865,0,1.565-0.7,1.565-1.565V2.984C26.787,2.119,26.087,1.417,25.221,1.417zM15.666,29.299c-0.346,0-0.626-0.279-0.626-0.625s0.281-0.627,0.626-0.627c0.346,0,0.627,0.281,0.627,0.627S16.012,29.299,15.666,29.299zM24.376,26.855c0,0.174-0.142,0.312-0.313,0.312H7.27c-0.173,0-0.313-0.142-0.313-0.312V4.3c0-0.173,0.14-0.313,0.313-0.313h16.792c0.172,0,0.312,0.14,0.312,0.313L24.376,26.855L24.376,26.855z\",\r\n        iphone: \"M20.755,1H10.62C9.484,1,8.562,1.921,8.562,3.058v24.385c0,1.136,0.921,2.058,2.058,2.058h10.135c1.136,0,2.058-0.922,2.058-2.058V3.058C22.812,1.921,21.891,1,20.755,1zM14.659,3.264h2.057c0.101,0,0.183,0.081,0.183,0.18c0,0.1-0.082,0.18-0.183,0.18h-2.057c-0.1,0-0.181-0.081-0.181-0.18C14.478,3.344,14.559,3.264,14.659,3.264zM13.225,3.058c0.199,0,0.359,0.162,0.359,0.36c0,0.198-0.161,0.36-0.359,0.36c-0.2,0-0.36-0.161-0.36-0.36S13.025,3.058,13.225,3.058zM15.688,28.473c-0.796,0-1.44-0.646-1.44-1.438c0-0.799,0.645-1.439,1.44-1.439s1.44,0.646,1.44,1.439S16.483,28.473,15.688,28.473zM22.041,24.355c0,0.17-0.139,0.309-0.309,0.309H9.642c-0.17,0-0.308-0.139-0.308-0.309V6.042c0-0.17,0.138-0.309,0.308-0.309h12.09c0.17,0,0.309,0.138,0.309,0.309V24.355z\",\r\n        jigsaw: \"M3.739,13.619c0,0,3.516-4.669,5.592-3.642c2.077,1.027-0.414,2.795,1.598,3.719c2.011,0.924,5.048-0.229,4.376-2.899c-0.672-2.67-1.866-0.776-2.798-2.208c-0.934-1.432,4.586-4.59,4.586-4.59s3.361,6.651,4.316,4.911c1.157-2.105,3.193-4.265,5.305-1.025c0,0,1.814,2.412,0.246,3.434s-2.917,0.443-3.506,1.553c-0.586,1.112,3.784,4.093,3.784,4.093s-2.987,4.81-4.926,3.548c-1.939-1.262,0.356-3.364-2.599-3.989c-1.288-0.23-3.438,0.538-3.818,2.34c-0.13,2.709,1.604,2.016,2.797,3.475c1.191,1.457-4.484,4.522-4.484,4.522s-1.584-3.923-3.811-4.657c-2.227-0.735-0.893,2.135-2.917,2.531c-2.024,0.396-4.816-2.399-3.46-4.789c1.358-2.391,3.275-0.044,3.441-1.951C7.629,16.087,3.739,13.619,3.739,13.619z\",\r\n        lamp: \"M15.5,2.833c-3.866,0-7,3.134-7,7c0,3.859,3.945,4.937,4.223,9.499h5.553c0.278-4.562,4.224-5.639,4.224-9.499C22.5,5.968,19.366,2.833,15.5,2.833zM15.5,28.166c1.894,0,2.483-1.027,2.667-1.666h-5.334C13.017,27.139,13.606,28.166,15.5,28.166zM12.75,25.498h5.5v-5.164h-5.5V25.498z\",\r\n        lamp_alt: \"M12.75,25.498h5.5v-5.164h-5.5V25.498zM15.5,28.166c1.894,0,2.483-1.027,2.667-1.666h-5.334C13.017,27.139,13.606,28.166,15.5,28.166zM15.5,2.833c-3.866,0-7,3.134-7,7c0,3.859,3.945,4.937,4.223,9.499h1.271c-0.009-0.025-0.024-0.049-0.029-0.078L11.965,8.256c-0.043-0.245,0.099-0.485,0.335-0.563c0.237-0.078,0.494,0.026,0.605,0.25l0.553,1.106l0.553-1.106c0.084-0.17,0.257-0.277,0.446-0.277c0.189,0,0.362,0.107,0.446,0.277l0.553,1.106l0.553-1.106c0.084-0.17,0.257-0.277,0.448-0.277c0.189,0,0.36,0.107,0.446,0.277l0.554,1.106l0.553-1.106c0.111-0.224,0.368-0.329,0.604-0.25s0.377,0.318,0.333,0.563l-1.999,10.998c-0.005,0.029-0.02,0.053-0.029,0.078h1.356c0.278-4.562,4.224-5.639,4.224-9.499C22.5,5.968,19.366,2.833,15.5,2.833zM17.458,10.666c-0.191,0-0.364-0.107-0.446-0.275l-0.554-1.106l-0.553,1.106c-0.086,0.168-0.257,0.275-0.446,0.275c-0.191,0-0.364-0.107-0.449-0.275l-0.553-1.106l-0.553,1.106c-0.084,0.168-0.257,0.275-0.446,0.275c-0.012,0-0.025,0-0.037-0.001l1.454,8.001h1.167l1.454-8.001C17.482,10.666,17.47,10.666,17.458,10.666z\",\r\n        video: \"M27.188,4.875v1.094h-4.5V4.875H8.062v1.094h-4.5V4.875h-1v21.25h1v-1.094h4.5v1.094h14.625v-1.094h4.5v1.094h1.25V4.875H27.188zM8.062,23.719h-4.5v-3.125h4.5V23.719zM8.062,19.281h-4.5v-3.125h4.5V19.281zM8.062,14.844h-4.5v-3.125h4.5V14.844zM8.062,10.406h-4.5V7.281h4.5V10.406zM11.247,20.59V9.754l9.382,5.418L11.247,20.59zM27.188,23.719h-4.5v-3.125h4.5V23.719zM27.188,19.281h-4.5v-3.125h4.5V19.281zM27.188,14.844h-4.5v-3.125h4.5V14.844zM27.188,10.406h-4.5V7.281h4.5V10.406z\",\r\n        palm: \"M14.296,27.885v-2.013c0,0-0.402-1.408-1.073-2.013c-0.671-0.604-1.274-1.274-1.409-1.61c0,0-0.268,0.135-0.737-0.335s-1.812-2.616-1.812-2.616l-0.671-0.872c0,0-0.47-0.671-1.275-1.342c-0.805-0.672-0.938-0.067-1.476-0.738s0.604-1.275,1.006-1.409c0.403-0.134,1.946,0.134,2.684,0.872c0.738,0.738,0.738,0.738,0.738,0.738l1.073,1.141l0.537,0.201l0.671-1.073l-0.269-2.281c0,0-0.604-2.55-0.737-4.764c-0.135-2.214-0.47-5.703,1.006-5.837s1.007,2.55,1.073,3.489c0.067,0.938,0.806,5.232,1.208,5.568c0.402,0.335,0.671,0.066,0.671,0.066l0.402-7.514c0,0-0.479-2.438,1.073-2.549c0.939-0.067,0.872,1.543,0.872,2.147c0,0.604,0.269,7.514,0.269,7.514l0.537,0.135c0,0,0.402-2.214,0.604-3.153s0.604-2.416,0.537-3.087c-0.067-0.671-0.135-2.348,1.006-2.348s0.872,1.812,0.939,2.415s-0.134,3.153-0.134,3.757c0,0.604-0.738,3.623-0.537,3.824s2.08-2.817,2.349-3.958c0.268-1.141,0.201-3.02,1.408-2.885c1.208,0.134,0.47,2.817,0.402,3.086c-0.066,0.269-0.671,2.349-0.872,2.952s-0.805,1.476-1.006,2.013s0.402,2.349,0,4.629c-0.402,2.281-1.61,5.166-1.61,5.166l0.604,2.08c0,0-1.744,0.671-3.824,0.805C16.443,28.221,14.296,27.885,14.296,27.885z\",\r\n        fave: \"M24.132,7.971c-2.203-2.205-5.916-2.098-8.25,0.235L15.5,8.588l-0.382-0.382c-2.334-2.333-6.047-2.44-8.25-0.235c-2.204,2.203-2.098,5.916,0.235,8.249l8.396,8.396l8.396-8.396C26.229,13.887,26.336,10.174,24.132,7.971z\",\r\n        help: \"M4.834,4.834L4.833,4.833c-5.889,5.892-5.89,15.443,0.001,21.334s15.44,5.888,21.33-0.002c5.891-5.891,5.893-15.44,0.002-21.33C20.275-1.056,10.725-1.056,4.834,4.834zM25.459,5.542c0.833,0.836,1.523,1.757,2.104,2.726l-4.08,4.08c-0.418-1.062-1.053-2.06-1.912-2.918c-0.859-0.859-1.857-1.494-2.92-1.913l4.08-4.08C23.7,4.018,24.622,4.709,25.459,5.542zM10.139,20.862c-2.958-2.968-2.959-7.758-0.001-10.725c2.966-2.957,7.756-2.957,10.725,0c2.954,2.965,2.955,7.757-0.001,10.724C17.896,23.819,13.104,23.817,10.139,20.862zM5.542,25.459c-0.833-0.837-1.524-1.759-2.105-2.728l4.081-4.081c0.418,1.063,1.055,2.06,1.914,2.919c0.858,0.859,1.855,1.494,2.917,1.913l-4.081,4.081C7.299,26.982,6.379,26.292,5.542,25.459zM8.268,3.435l4.082,4.082C11.288,7.935,10.29,8.571,9.43,9.43c-0.858,0.859-1.494,1.855-1.912,2.918L3.436,8.267c0.58-0.969,1.271-1.89,2.105-2.727C6.377,4.707,7.299,4.016,8.268,3.435zM22.732,27.563l-4.082-4.082c1.062-0.418,2.061-1.053,2.919-1.912c0.859-0.859,1.495-1.857,1.913-2.92l4.082,4.082c-0.58,0.969-1.271,1.891-2.105,2.728C24.623,26.292,23.701,26.983,22.732,27.563z\",\r\n        crop: \"M24.303,21.707V8.275l4.48-4.421l-2.021-2.048l-4.126,4.07H8.761V2.083H5.882v3.793H1.8v2.877h4.083v15.832h15.542v4.609h2.878v-4.609H29.2v-2.878H24.303zM19.72,8.753L8.761,19.565V8.753H19.72zM10.688,21.706l10.735-10.591l0.001,10.592L10.688,21.706z\",\r\n        biohazard: \"M26.154,13.988c-0.96-0.554-1.982-0.892-3.019-1.032c0.396-0.966,0.616-2.023,0.616-3.131c0-4.399-3.438-8.001-7.772-8.264c3.245,0.258,5.803,2.979,5.803,6.292c0,3.373-2.653,6.123-5.983,6.294v1.292c0.908,0.144,1.605,0.934,1.605,1.883c0,0.232-0.043,0.454-0.118,0.66l1.181,0.683c1.826-2.758,5.509-3.658,8.41-1.981c2.896,1.672,3.965,5.299,2.506,8.254C31.386,21.038,29.992,16.204,26.154,13.988zM4.122,16.587c2.92-1.686,6.628-0.764,8.442,2.034l1.141-0.657c-0.072-0.2-0.109-0.417-0.109-0.642c0-0.909,0.638-1.67,1.489-1.859v-1.319c-3.3-0.202-5.92-2.94-5.92-6.292c0-3.297,2.532-6.007,5.757-6.286c-4.312,0.285-7.729,3.875-7.729,8.258c0,1.078,0.206,2.106,0.581,3.05c-1.004,0.147-1.999,0.481-2.931,1.02c-3.812,2.201-5.209,6.985-3.264,10.87C0.174,21.823,1.251,18.244,4.122,16.587zM11.15,11.452c0.114,0.139,0.235,0.271,0.362,0.398c0.126,0.126,0.259,0.247,0.397,0.361c0.102,0.084,0.211,0.16,0.318,0.236c0.93-0.611,2.045-0.969,3.244-0.969c1.201,0,2.312,0.357,3.242,0.969c0.107-0.077,0.217-0.152,0.318-0.236c0.139-0.114,0.271-0.235,0.397-0.361c0.127-0.127,0.248-0.259,0.362-0.398c0.113-0.138,0.222-0.283,0.323-0.431c-1.307-0.956-2.908-1.528-4.643-1.528c-0.042,0-0.083-0.001-0.124,0c-0.019,0-0.04-0.001-0.06,0c-1.666,0.038-3.201,0.605-4.462,1.528C10.929,11.17,11.037,11.314,11.15,11.452zM9.269,16.787c-0.168-0.062-0.338-0.117-0.512-0.164c-0.173-0.047-0.348-0.083-0.525-0.113c-0.177-0.03-0.355-0.053-0.535-0.065c-0.175,1.609,0.13,3.282,0.998,4.786c0.868,1.503,2.164,2.606,3.645,3.259c0.079-0.162,0.15-0.328,0.212-0.496c0.063-0.169,0.118-0.338,0.164-0.512c0.047-0.173,0.087-0.349,0.115-0.525c0.022-0.13,0.034-0.262,0.046-0.394c-0.993-0.5-1.86-1.286-2.461-2.325c-0.6-1.04-0.847-2.182-0.783-3.294C9.512,16.889,9.392,16.833,9.269,16.787zM18.122,22.657c0.014,0.132,0.024,0.263,0.046,0.394c0.03,0.177,0.067,0.352,0.113,0.524c0.047,0.174,0.102,0.346,0.165,0.514c0.062,0.169,0.132,0.333,0.212,0.495c1.48-0.653,2.777-1.755,3.644-3.257c0.868-1.504,1.176-3.179,1.001-4.788c-0.18,0.013-0.358,0.035-0.535,0.065c-0.177,0.029-0.353,0.067-0.525,0.113s-0.345,0.101-0.513,0.163c-0.124,0.047-0.241,0.105-0.362,0.16c0.063,1.11-0.183,2.253-0.784,3.292C19.984,21.373,19.116,22.157,18.122,22.657zM20.569,27.611c-2.92-1.687-3.977-5.358-2.46-8.329l-1.192-0.689c-0.349,0.389-0.854,0.634-1.417,0.634c-0.571,0-1.086-0.254-1.436-0.653l-1.146,0.666c1.475,2.96,0.414,6.598-2.488,8.272c-2.888,1.668-6.552,0.791-8.386-1.935c2.38,3.667,7.249,4.87,11.079,2.658c0.929-0.535,1.711-1.227,2.339-2.018c0.64,0.832,1.45,1.554,2.416,2.112c3.835,2.213,8.709,1.006,11.086-2.671C27.132,28.396,23.463,29.282,20.569,27.611z\",\r\n        wheelchair: \"M20.373,19.85c0,4.079-3.318,7.397-7.398,7.397c-4.079,0-7.398-3.318-7.398-7.397c0-2.466,1.213-4.652,3.073-5.997l-0.251-2.21c-2.875,1.609-4.825,4.684-4.825,8.207c0,5.184,4.217,9.4,9.401,9.4c4.395,0,8.093-3.031,9.117-7.111L20.37,19.73C20.37,19.771,20.373,19.81,20.373,19.85zM11.768,6.534c1.321,0,2.392-1.071,2.392-2.392c0-1.321-1.071-2.392-2.392-2.392c-1.321,0-2.392,1.071-2.392,2.392C9.375,5.463,10.446,6.534,11.768,6.534zM27.188,22.677l-5.367-7.505c-0.28-0.393-0.749-0.579-1.226-0.538c-0.035-0.003-0.071-0.006-0.106-0.006h-6.132l-0.152-1.335h4.557c0.53,0,0.96-0.429,0.96-0.959c0-0.53-0.43-0.959-0.96-0.959h-4.776l-0.25-2.192c-0.146-1.282-1.303-2.203-2.585-2.057C9.869,7.271,8.948,8.428,9.094,9.71l0.705,6.19c0.136,1.197,1.154,2.078,2.332,2.071c0.004,0,0.007,0.001,0.012,0.001h8.023l4.603,6.436c0.439,0.615,1.338,0.727,2.007,0.248C27.442,24.178,27.628,23.292,27.188,22.677z\",\r\n        mic: \"M15.5,21.125c2.682,0,4.875-2.25,4.875-5V5.875c0-2.75-2.193-5-4.875-5s-4.875,2.25-4.875,5v10.25C10.625,18.875,12.818,21.125,15.5,21.125zM21.376,11v5.125c0,3.308-2.636,6-5.876,6s-5.875-2.691-5.875-6V11H6.626v5.125c0,4.443,3.194,8.132,7.372,8.861v2.139h-3.372v3h9.749v-3h-3.376v-2.139c4.181-0.727,7.375-4.418,7.375-8.861V11H21.376z\",\r\n        micmute: \"M10.121,18.529c-0.317-0.736-0.496-1.549-0.496-2.404V11H6.626v5.125c0,1.693,0.466,3.275,1.272,4.627L10.121,18.529zM20.375,8.276V5.875c0-2.75-2.193-5-4.875-5s-4.875,2.25-4.875,5v10.25c0,0.568,0.113,1.105,0.285,1.615L20.375,8.276zM21.376,12.931v3.195c0,3.308-2.636,6-5.876,6c-0.958,0-1.861-0.24-2.661-0.657l-2.179,2.179c0.995,0.659,2.123,1.128,3.338,1.34v2.139h-3.372v3h9.749v-3h-3.376v-2.139c4.181-0.727,7.375-4.418,7.375-8.861V11h-1.068L21.376,12.931zM20.375,16.125v-2.194l-6.788,6.788c0.588,0.26,1.234,0.405,1.913,0.405C18.182,21.125,20.375,18.875,20.375,16.125zM25.542,4.522L4.855,25.209l1.415,1.416L26.956,5.937L25.542,4.522z\",\r\n        imac: \"M28.936,2.099H2.046c-0.506,0-0.919,0.414-0.919,0.92v21.097c0,0.506,0.413,0.919,0.919,0.919h17.062v-0.003h9.828c0.506,0,0.92-0.413,0.92-0.921V3.019C29.854,2.513,29.439,2.099,28.936,2.099zM28.562,20.062c0,0.412-0.338,0.75-0.75,0.75H3.062c-0.413,0-0.75-0.338-0.75-0.75v-16c0-0.413,0.337-0.75,0.75-0.75h24.75c0.412,0,0.75,0.337,0.75,0.75V20.062zM20.518,28.4c-0.033-0.035-0.062-0.055-0.068-0.062l-0.01-0.004l-0.008-0.004c0,0-0.046-0.021-0.119-0.062c-0.108-0.056-0.283-0.144-0.445-0.237c-0.162-0.097-0.32-0.199-0.393-0.271c-0.008-0.014-0.035-0.079-0.058-0.17c-0.083-0.32-0.161-0.95-0.22-1.539h-7.5c-0.023,0.23-0.048,0.467-0.076,0.691c-0.035,0.272-0.073,0.524-0.113,0.716c-0.02,0.096-0.039,0.175-0.059,0.23c-0.009,0.025-0.018,0.05-0.024,0.062c-0.003,0.006-0.005,0.01-0.007,0.013c-0.094,0.096-0.34,0.246-0.553,0.36c-0.107,0.062-0.209,0.11-0.283,0.146c-0.074,0.037-0.119,0.062-0.119,0.062l-0.007,0.004l-0.008,0.004c-0.01,0.009-0.038,0.022-0.07,0.062c-0.031,0.037-0.067,0.103-0.067,0.185c0.002,0.002-0.004,0.037-0.006,0.088c0,0.043,0.007,0.118,0.068,0.185c0.061,0.062,0.143,0.08,0.217,0.08h9.716c0.073,0,0.153-0.021,0.215-0.08c0.062-0.063,0.068-0.142,0.068-0.185c-0.001-0.051-0.008-0.086-0.007-0.088C20.583,28.503,20.548,28.439,20.518,28.4z\",\r\n        pc: \"M29.249,3.14h-9.188l-0.459,0.459v18.225l0.33,2.389H19.57v0.245h-0.307v-0.306h-0.611v0.244h-0.311v-0.367h-0.486v0.307h-1.104l-2.022-0.367v-0.92h0.858l0.302-1.47h2.728c0.188,0,0.339-0.152,0.339-0.339V7.828c0-0.187-0.149-0.338-0.339-0.338H1.591c-0.187,0-0.339,0.152-0.339,0.338V21.24c0,0.187,0.152,0.339,0.339,0.339h3.016l0.199,1.47h1.409l-3.4,3.4L2.11,27.951c0,0,2.941,1.102,6.678,1.102c3.737,0,9.679-0.857,10.476-0.857s4.84,0,4.84,0v-1.225l-0.137-1.068h1.744c-0.2,0.106-0.322,0.244-0.322,0.396v0.979c0,0.341,0.604,0.613,1.352,0.613c0.742,0,1.348-0.272,1.348-0.613v-0.979c0-0.339-0.604-0.611-1.348-0.611c-0.188,0-0.364,0.019-0.525,0.049v-0.17h-2.29l-0.055-0.432h5.382L29.249,3.14L29.249,3.14zM2.478,20.17V8.714h15.07V20.17H2.478z\",\r\n        cube: \"M15.5,3.029l-10.8,6.235L4.7,21.735L15.5,27.971l10.8-6.235V9.265L15.5,3.029zM24.988,10.599L16,15.789v10.378c0,0.275-0.225,0.5-0.5,0.5s-0.5-0.225-0.5-0.5V15.786l-8.987-5.188c-0.239-0.138-0.321-0.444-0.183-0.683c0.138-0.238,0.444-0.321,0.683-0.183l8.988,5.189l8.988-5.189c0.238-0.138,0.545-0.055,0.684,0.184C25.309,10.155,25.227,10.461,24.988,10.599z\",\r\n        fullcube: \"M15.5,3.029l-10.8,6.235L4.7,21.735L15.5,27.971l10.8-6.235V9.265L15.5,3.029zM15.5,7.029l6.327,3.652L15.5,14.334l-6.326-3.652L15.5,7.029zM24.988,10.599L16,15.789v10.378c0,0.275-0.225,0.5-0.5,0.5s-0.5-0.225-0.5-0.5V15.786l-8.987-5.188c-0.239-0.138-0.321-0.444-0.183-0.683c0.138-0.238,0.444-0.321,0.683-0.183l8.988,5.189l8.988-5.189c0.238-0.138,0.545-0.055,0.684,0.184C25.309,10.155,25.227,10.461,24.988,10.599z\",\r\n        font: \"M22.255,19.327l-1.017,0.131c-0.609,0.081-1.067,0.208-1.375,0.382c-0.521,0.293-0.779,0.76-0.779,1.398c0,0.484,0.178,0.867,0.532,1.146c0.354,0.28,0.774,0.421,1.262,0.421c0.593,0,1.164-0.138,1.72-0.412c0.938-0.453,1.4-1.188,1.4-2.229v-1.354c-0.205,0.131-0.469,0.229-0.792,0.328C22.883,19.229,22.564,19.29,22.255,19.327zM8.036,18.273h4.309l-2.113-6.063L8.036,18.273zM28.167,7.75H3.168c-0.552,0-1,0.448-1,1v16.583c0,0.553,0.448,1,1,1h24.999c0.554,0,1-0.447,1-1V8.75C29.167,8.198,28.721,7.75,28.167,7.75zM14.305,23.896l-1.433-4.109H7.488L6,23.896H4.094L9.262,10.17h2.099l4.981,13.727H14.305L14.305,23.896zM26.792,23.943c-0.263,0.074-0.461,0.121-0.599,0.141c-0.137,0.02-0.323,0.027-0.562,0.027c-0.579,0-0.999-0.204-1.261-0.615c-0.138-0.219-0.231-0.525-0.29-0.926c-0.344,0.449-0.834,0.839-1.477,1.169c-0.646,0.329-1.354,0.493-2.121,0.493c-0.928,0-1.688-0.28-2.273-0.844c-0.589-0.562-0.884-1.271-0.884-2.113c0-0.928,0.29-1.646,0.868-2.155c0.578-0.511,1.34-0.824,2.279-0.942l2.682-0.336c0.388-0.05,0.646-0.211,0.775-0.484c0.063-0.146,0.104-0.354,0.104-0.646c0-0.575-0.203-0.993-0.604-1.252c-0.408-0.26-0.99-0.389-1.748-0.389c-0.877,0-1.5,0.238-1.865,0.713c-0.205,0.263-0.34,0.654-0.399,1.174H17.85c0.031-1.237,0.438-2.097,1.199-2.582c0.77-0.484,1.659-0.726,2.674-0.726c1.176,0,2.131,0.225,2.864,0.673c0.729,0.448,1.093,1.146,1.093,2.093v5.766c0,0.176,0.035,0.313,0.106,0.422c0.071,0.104,0.223,0.156,0.452,0.156c0.076,0,0.16-0.005,0.254-0.015c0.093-0.011,0.191-0.021,0.299-0.041L26.792,23.943L26.792,23.943z\",\r\n        trash: \"M20.826,5.75l0.396,1.188c1.54,0.575,2.589,1.44,2.589,2.626c0,2.405-4.308,3.498-8.312,3.498c-4.003,0-8.311-1.093-8.311-3.498c0-1.272,1.21-2.174,2.938-2.746l0.388-1.165c-2.443,0.648-4.327,1.876-4.327,3.91v2.264c0,1.224,0.685,2.155,1.759,2.845l0.396,9.265c0,1.381,3.274,2.5,7.312,2.5c4.038,0,7.313-1.119,7.313-2.5l0.405-9.493c0.885-0.664,1.438-1.521,1.438-2.617V9.562C24.812,7.625,23.101,6.42,20.826,5.75zM11.093,24.127c-0.476-0.286-1.022-0.846-1.166-1.237c-1.007-2.76-0.73-4.921-0.529-7.509c0.747,0.28,1.58,0.491,2.45,0.642c-0.216,2.658-0.43,4.923,0.003,7.828C11.916,24.278,11.567,24.411,11.093,24.127zM17.219,24.329c-0.019,0.445-0.691,0.856-1.517,0.856c-0.828,0-1.498-0.413-1.517-0.858c-0.126-2.996-0.032-5.322,0.068-8.039c0.418,0.022,0.835,0.037,1.246,0.037c0.543,0,1.097-0.02,1.651-0.059C17.251,18.994,17.346,21.325,17.219,24.329zM21.476,22.892c-0.143,0.392-0.69,0.95-1.165,1.235c-0.474,0.284-0.817,0.151-0.754-0.276c0.437-2.93,0.214-5.209-0.005-7.897c0.881-0.174,1.708-0.417,2.44-0.731C22.194,17.883,22.503,20.076,21.476,22.892zM11.338,9.512c0.525,0.173,1.092-0.109,1.268-0.633h-0.002l0.771-2.316h4.56l0.771,2.316c0.14,0.419,0.53,0.685,0.949,0.685c0.104,0,0.211-0.017,0.316-0.052c0.524-0.175,0.808-0.742,0.633-1.265l-1.002-3.001c-0.136-0.407-0.518-0.683-0.945-0.683h-6.002c-0.428,0-0.812,0.275-0.948,0.683l-1,2.999C10.532,8.77,10.815,9.337,11.338,9.512z\",\r\n        newwindow: \"M5.896,5.333V21.25h23.417V5.333H5.896zM26.312,18.25H8.896V8.334h17.417V18.25L26.312,18.25zM4.896,9.542H1.687v15.917h23.417V22.25H4.896V9.542z\",\r\n        dockright: \"M3.083,7.333v16.334h24.833V7.333H3.083z M19.333,20.668H6.083V10.332h13.25V20.668z\",\r\n        dockleft: \"M3.084,7.333v16.334h24.832V7.333H3.084z M11.667,10.332h13.251v10.336H11.667V10.332z\",\r\n        dockbottom: \"M3.083,7.333v16.334h24.833V7.333H3.083zM24.915,16.833H6.083v-6.501h18.833L24.915,16.833L24.915,16.833z\",\r\n        docktop: \"M27.916,23.667V7.333H3.083v16.334H27.916zM24.915,20.668H6.083v-6.501h18.833L24.915,20.668L24.915,20.668z\",\r\n        pallete: \"M15.653,7.25c-3.417,0-8.577,0.983-8.577,3.282c0,1.91,2.704,3.229,1.691,3.889c-1.02,0.666-2.684-1.848-4.048-1.848c-1.653,0-2.815,1.434-2.815,2.926c0,4.558,6.326,8.25,13.749,8.25c7.424,0,13.443-3.692,13.443-8.25C29.096,10.944,23.077,7.25,15.653,7.25zM10.308,13.521c0-0.645,0.887-1.166,1.98-1.166c1.093,0,1.979,0.521,1.979,1.166c0,0.644-0.886,1.166-1.979,1.166C11.195,14.687,10.308,14.164,10.308,13.521zM14.289,22.299c-1.058,0-1.914-0.68-1.914-1.518s0.856-1.518,1.914-1.518c1.057,0,1.914,0.68,1.914,1.518S15.346,22.299,14.289,22.299zM19.611,21.771c-1.057,0-1.913-0.681-1.913-1.519c0-0.84,0.856-1.521,1.913-1.521c1.059,0,1.914,0.681,1.914,1.521C21.525,21.092,20.67,21.771,19.611,21.771zM20.075,10.66c0-0.838,0.856-1.518,1.914-1.518s1.913,0.68,1.913,1.518c0,0.839-0.855,1.518-1.913,1.518C20.934,12.178,20.075,11.499,20.075,10.66zM24.275,19.482c-1.057,0-1.914-0.681-1.914-1.519s0.857-1.518,1.914-1.518c1.059,0,1.914,0.68,1.914,1.518S25.334,19.482,24.275,19.482zM25.286,15.475c-1.058,0-1.914-0.68-1.914-1.519c0-0.838,0.856-1.518,1.914-1.518c1.057,0,1.913,0.68,1.913,1.518C27.199,14.795,26.343,15.475,25.286,15.475z\",\r\n        cart: \"M29.02,11.754L8.416,9.473L7.16,4.716C7.071,4.389,6.772,4.158,6.433,4.158H3.341C3.114,3.866,2.775,3.667,2.377,3.667c-0.686,0-1.242,0.556-1.242,1.242c0,0.686,0.556,1.242,1.242,1.242c0.399,0,0.738-0.201,0.965-0.493h2.512l5.23,19.8c-0.548,0.589-0.891,1.373-0.891,2.242c0,1.821,1.473,3.293,3.293,3.293c1.82,0,3.294-1.472,3.297-3.293c0-0.257-0.036-0.504-0.093-0.743h5.533c-0.056,0.239-0.092,0.486-0.092,0.743c0,1.821,1.475,3.293,3.295,3.293s3.295-1.472,3.295-3.293c0-1.82-1.473-3.295-3.295-3.297c-0.951,0.001-1.801,0.409-2.402,1.053h-7.136c-0.601-0.644-1.451-1.052-2.402-1.053c-0.379,0-0.738,0.078-1.077,0.196l-0.181-0.685H26.81c1.157-0.027,2.138-0.83,2.391-1.959l1.574-7.799c0.028-0.145,0.041-0.282,0.039-0.414C30.823,12.733,30.051,11.86,29.02,11.754zM25.428,27.994c-0.163,0-0.295-0.132-0.297-0.295c0.002-0.165,0.134-0.297,0.297-0.297s0.295,0.132,0.297,0.297C25.723,27.862,25.591,27.994,25.428,27.994zM27.208,20.499l0.948-0.948l-0.318,1.578L27.208,20.499zM12.755,11.463l1.036,1.036l-1.292,1.292l-1.292-1.292l1.087-1.087L12.755,11.463zM17.253,11.961l0.538,0.538l-1.292,1.292l-1.292-1.292l0.688-0.688L17.253,11.961zM9.631,14.075l0.868-0.868l1.292,1.292l-1.292,1.292l-0.564-0.564L9.631,14.075zM9.335,12.956l-0.328-1.24L9.792,12.5L9.335,12.956zM21.791,16.499l-1.292,1.292l-1.292-1.292l1.292-1.292L21.791,16.499zM21.207,14.5l1.292-1.292l1.292,1.292l-1.292,1.292L21.207,14.5zM18.5,15.791l-1.293-1.292l1.292-1.292l1.292,1.292L18.5,15.791zM17.791,16.499L16.5,17.791l-1.292-1.292l1.292-1.292L17.791,16.499zM14.499,15.791l-1.292-1.292l1.292-1.292l1.292,1.292L14.499,15.791zM13.791,16.499l-1.292,1.291l-1.292-1.291l1.292-1.292L13.791,16.499zM10.499,17.207l1.292,1.292l-0.785,0.784l-0.54-2.044L10.499,17.207zM11.302,20.404l1.197-1.197l1.292,1.292L12.5,21.791l-1.131-1.13L11.302,20.404zM13.208,18.499l1.291-1.292l1.292,1.292L14.5,19.791L13.208,18.499zM16.5,19.207l1.292,1.292L16.5,21.79l-1.292-1.291L16.5,19.207zM17.208,18.499l1.292-1.292l1.291,1.292L18.5,19.79L17.208,18.499zM20.499,19.207l1.292,1.292L20.5,21.79l-1.292-1.292L20.499,19.207zM21.207,18.499l1.292-1.292l1.292,1.292l-1.292,1.292L21.207,18.499zM23.207,16.499l1.292-1.292l1.292,1.292l-1.292,1.292L23.207,16.499zM25.207,14.499l1.292-1.292L27.79,14.5l-1.291,1.292L25.207,14.499zM24.499,13.792l-1.156-1.156l2.082,0.23L24.499,13.792zM21.791,12.5l-1.292,1.292L19.207,12.5l0.29-0.29l2.253,0.25L21.791,12.5zM14.5,11.791l-0.152-0.152l0.273,0.03L14.5,11.791zM10.5,11.792l-0.65-0.65l1.171,0.129L10.5,11.792zM14.5,21.207l1.205,1.205h-2.409L14.5,21.207zM18.499,21.207l1.206,1.206h-2.412L18.499,21.207zM22.499,21.207l1.208,1.207l-2.414-0.001L22.499,21.207zM23.207,20.499l1.292-1.292l1.292,1.292l-1.292,1.292L23.207,20.499zM25.207,18.499l1.292-1.291l1.291,1.291l-1.291,1.292L25.207,18.499zM28.499,17.791l-1.291-1.292l1.291-1.291l0.444,0.444l-0.429,2.124L28.499,17.791zM29.001,13.289l-0.502,0.502l-0.658-0.658l1.016,0.112C28.911,13.253,28.956,13.271,29.001,13.289zM13.487,27.994c-0.161,0-0.295-0.132-0.295-0.295c0-0.165,0.134-0.297,0.295-0.297c0.163,0,0.296,0.132,0.296,0.297C13.783,27.862,13.651,27.994,13.487,27.994zM26.81,22.414h-1.517l1.207-1.207l0.93,0.93C27.243,22.306,27.007,22.428,26.81,22.414z\",\r\n        glasses: \"M14.075,9.531c0,0-2.705-1.438-5.158-1.438c-2.453,0-4.862,0.593-4.862,0.593L3.971,9.869c0,0,0.19,0.19,0.528,0.53c0.338,0.336,0.486,3.741,1.838,5.094c1.353,1.354,4.82,1.396,5.963,0.676c1.14-0.718,2.241-3.466,2.241-4.693c0-0.38,0-0.676,0-0.676c0.274-0.275,1.615-0.303,1.917,0c0,0,0,0.296,0,0.676c0,1.227,1.101,3.975,2.241,4.693c1.144,0.72,4.611,0.678,5.963-0.676c1.355-1.353,1.501-4.757,1.839-5.094c0.338-0.34,0.528-0.53,0.528-0.53l-0.084-1.183c0,0-2.408-0.593-4.862-0.593c-2.453,0-5.158,1.438-5.158,1.438C16.319,9.292,14.737,9.32,14.075,9.531z\",\r\n        \"package\": \"M17.078,22.004l-1.758-4.129l-2.007,4.752l-7.519-3.289l0.174,3.905l9.437,4.374l10.909-5.365l-0.149-4.989L17.078,22.004zM29.454,6.619L18.521,3.383l-3.006,2.671l-3.091-2.359L1.546,8.199l3.795,3.048l-3.433,5.302l10.879,4.757l2.53-5.998l2.257,5.308l11.393-5.942l-3.105-4.709L29.454,6.619zM15.277,14.579l-9.059-3.83l9.275-4.101l9.608,3.255L15.277,14.579z\",\r\n        book: \"M25.754,4.626c-0.233-0.161-0.536-0.198-0.802-0.097L12.16,9.409c-0.557,0.213-1.253,0.316-1.968,0.316c-0.997,0.002-2.029-0.202-2.747-0.48C7.188,9.148,6.972,9.04,6.821,8.943c0.056-0.024,0.12-0.05,0.193-0.075L18.648,4.43l1.733,0.654V3.172c0-0.284-0.14-0.554-0.374-0.714c-0.233-0.161-0.538-0.198-0.802-0.097L6.414,7.241c-0.395,0.142-0.732,0.312-1.02,0.564C5.111,8.049,4.868,8.45,4.872,8.896c0,0.012,0.004,0.031,0.004,0.031v17.186c0,0.008-0.003,0.015-0.003,0.021c0,0.006,0.003,0.01,0.003,0.016v0.017h0.002c0.028,0.601,0.371,0.983,0.699,1.255c1.034,0.803,2.769,1.252,4.614,1.274c0.874,0,1.761-0.116,2.583-0.427l12.796-4.881c0.337-0.128,0.558-0.448,0.558-0.809V5.341C26.128,5.057,25.988,4.787,25.754,4.626zM5.672,11.736c0.035,0.086,0.064,0.176,0.069,0.273l0.004,0.054c0.016,0.264,0.13,0.406,0.363,0.611c0.783,0.626,2.382,1.08,4.083,1.093c0.669,0,1.326-0.083,1.931-0.264v1.791c-0.647,0.143-1.301,0.206-1.942,0.206c-1.674-0.026-3.266-0.353-4.509-1.053V11.736zM10.181,24.588c-1.674-0.028-3.266-0.354-4.508-1.055v-2.712c0.035,0.086,0.065,0.176,0.07,0.275l0.002,0.053c0.018,0.267,0.13,0.408,0.364,0.613c0.783,0.625,2.381,1.079,4.083,1.091c0.67,0,1.327-0.082,1.932-0.262v1.789C11.476,24.525,10.821,24.588,10.181,24.588z\",\r\n        books: \"M26.679,7.858c-0.176-0.138-0.404-0.17-0.606-0.083l-9.66,4.183c-0.42,0.183-0.946,0.271-1.486,0.271c-0.753,0.002-1.532-0.173-2.075-0.412c-0.194-0.083-0.356-0.176-0.471-0.259c0.042-0.021,0.09-0.042,0.146-0.064l8.786-3.804l1.31,0.561V6.612c0-0.244-0.106-0.475-0.283-0.612c-0.176-0.138-0.406-0.17-0.605-0.083l-9.66,4.183c-0.298,0.121-0.554,0.268-0.771,0.483c-0.213,0.208-0.397,0.552-0.394,0.934c0,0.01,0.003,0.027,0.003,0.027v14.73c0,0.006-0.002,0.012-0.002,0.019c0,0.005,0.002,0.007,0.002,0.012v0.015h0.002c0.021,0.515,0.28,0.843,0.528,1.075c0.781,0.688,2.091,1.073,3.484,1.093c0.66,0,1.33-0.1,1.951-0.366l9.662-4.184c0.255-0.109,0.422-0.383,0.422-0.692V8.471C26.961,8.227,26.855,7.996,26.679,7.858zM20.553,5.058c-0.017-0.221-0.108-0.429-0.271-0.556c-0.176-0.138-0.404-0.17-0.606-0.083l-9.66,4.183C9.596,8.784,9.069,8.873,8.53,8.873C7.777,8.874,6.998,8.699,6.455,8.46C6.262,8.378,6.099,8.285,5.984,8.202C6.026,8.181,6.075,8.16,6.13,8.138l8.787-3.804l1.309,0.561V3.256c0-0.244-0.106-0.475-0.283-0.612c-0.176-0.138-0.407-0.17-0.606-0.083l-9.66,4.183C5.379,6.864,5.124,7.011,4.907,7.227C4.693,7.435,4.51,7.779,4.513,8.161c0,0.011,0.003,0.027,0.003,0.027v14.73c0,0.006-0.001,0.013-0.001,0.019c0,0.005,0.001,0.007,0.001,0.012v0.016h0.002c0.021,0.515,0.28,0.843,0.528,1.075c0.781,0.688,2.091,1.072,3.485,1.092c0.376,0,0.754-0.045,1.126-0.122V11.544c-0.01-0.7,0.27-1.372,0.762-1.856c0.319-0.315,0.708-0.564,1.19-0.756L20.553,5.058z\",\r\n        icons: \"M4.083,14H14V4.083H4.083V14zM17,4.083V14h9.917V4.083H17zM17,26.917h9.917v-9.918H17V26.917zM4.083,26.917H14v-9.918H4.083V26.917z\",\r\n        list: \"M4.082,4.083v2.999h22.835V4.083H4.082zM4.082,20.306h22.835v-2.999H4.082V20.306zM4.082,13.694h22.835v-2.999H4.082V13.694zM4.082,26.917h22.835v-2.999H4.082V26.917z\",\r\n        db: \"M15.499,23.438c-3.846,0-7.708-0.987-9.534-3.117c-0.054,0.236-0.09,0.48-0.09,0.737v3.877c0,3.435,4.988,4.998,9.625,4.998s9.625-1.563,9.625-4.998v-3.877c0-0.258-0.036-0.501-0.09-0.737C23.209,22.451,19.347,23.438,15.499,23.438zM15.499,15.943c-3.846,0-7.708-0.987-9.533-3.117c-0.054,0.236-0.091,0.479-0.091,0.736v3.877c0,3.435,4.988,4.998,9.625,4.998s9.625-1.563,9.625-4.998v-3.877c0-0.257-0.036-0.501-0.09-0.737C23.209,14.956,19.347,15.943,15.499,15.943zM15.5,1.066c-4.637,0-9.625,1.565-9.625,5.001v3.876c0,3.435,4.988,4.998,9.625,4.998s9.625-1.563,9.625-4.998V6.067C25.125,2.632,20.137,1.066,15.5,1.066zM15.5,9.066c-4.211,0-7.625-1.343-7.625-3c0-1.656,3.414-3,7.625-3s7.625,1.344,7.625,3C23.125,7.724,19.711,9.066,15.5,9.066z\",\r\n        paper: \"M28.916,8.009L15.953,1.888c-0.251-0.119-0.548-0.115-0.798,0.008c-0.25,0.125-0.433,0.357-0.491,0.629c-0.002,0.01-1.04,4.83-2.578,9.636c-0.526,1.646-1.114,3.274-1.728,4.704l1.665,0.786c2-4.643,3.584-11.052,4.181-13.614l11.264,5.316c-0.346,1.513-1.233,5.223-2.42,8.927c-0.767,2.399-1.665,4.797-2.585,6.532c-0.889,1.79-1.958,2.669-2.197,2.552c-1.419,0.03-2.418-1.262-3.09-2.918c-0.32-0.803-0.53-1.63-0.657-2.246c-0.127-0.618-0.166-1.006-0.168-1.006c-0.034-0.317-0.232-0.597-0.52-0.731l-12.962-6.12c-0.301-0.142-0.654-0.11-0.925,0.081c-0.27,0.193-0.416,0.518-0.38,0.847c0.008,0.045,0.195,1.848,0.947,3.736c0.521,1.321,1.406,2.818,2.845,3.575l12.956,6.131l0.006-0.013c0.562,0.295,1.201,0.487,1.947,0.496c1.797-0.117,2.777-1.668,3.818-3.525c3-5.69,5.32-16.602,5.338-16.642C29.512,8.615,29.302,8.19,28.916,8.009z\",\r\n        takeoff: \"M10.27,19.267c0,0,9.375-1.981,16.074-8.681c0,0,1.395-1.339-1.338-1.339c-2.305,0-5.6,2.438-5.6,2.438l-9.137-1.42l-1.769,1.769l4.983,2.411l-3.001,2.035l-2.571-1.285L6.09,16.052C6.09,16.052,8.02,18.062,10.27,19.267zM3.251,23.106v1.998h24.498v-1.998H3.251z\",\r\n        landing: \"M23.322,19.491c0,0,1.903,0.342,0.299-1.869c-1.353-1.866-5.261-3.104-5.261-3.104l-4.213-8.229l-2.47-0.394l0.973,5.449L9.241,10.11L8.772,7.273L7.008,6.302c0,0-0.496,2.742-0.149,5.271C6.859,11.573,13.965,17.999,23.322,19.491zM3.251,23.106v1.998h24.498v-1.998H3.251zM14,17.94c0,0.414,0.336,0.75,0.75,0.75s0.75-0.336,0.75-0.75s-0.336-0.75-0.75-0.75S14,17.526,14,17.94z\",\r\n        plane: \"M19.671,8.11l-2.777,2.777l-3.837-0.861c0.362-0.505,0.916-1.683,0.464-2.135c-0.518-0.517-1.979,0.278-2.305,0.604l-0.913,0.913L7.614,8.804l-2.021,2.021l2.232,1.061l-0.082,0.082l1.701,1.701l0.688-0.687l3.164,1.504L9.571,18.21H6.413l-1.137,1.138l3.6,0.948l1.83,1.83l0.947,3.598l1.137-1.137V21.43l3.725-3.725l1.504,3.164l-0.687,0.687l1.702,1.701l0.081-0.081l1.062,2.231l2.02-2.02l-0.604-2.689l0.912-0.912c0.326-0.326,1.121-1.789,0.604-2.306c-0.452-0.452-1.63,0.101-2.135,0.464l-0.861-3.838l2.777-2.777c0.947-0.947,3.599-4.862,2.62-5.839C24.533,4.512,20.618,7.163,19.671,8.11z\",\r\n        phone: \"M22.065,18.53c-0.467-0.29-1.167-0.21-1.556,0.179l-3.093,3.092c-0.389,0.389-1.025,0.389-1.414,0L9.05,14.848c-0.389-0.389-0.389-1.025,0-1.414l2.913-2.912c0.389-0.389,0.447-1.075,0.131-1.524L6.792,1.485C6.476,1.036,5.863,0.948,5.433,1.29c0,0-4.134,3.281-4.134,6.295c0,12.335,10,22.334,22.334,22.334c3.015,0,5.948-5.533,5.948-5.533c0.258-0.486,0.087-1.122-0.38-1.412L22.065,18.53z\",\r\n        hangup: \"M28.563,10.494c-7.35-7.349-19.265-7.348-26.612,0.001c-1.796,1.796-0.247,6.84-0.247,6.84c0.135,0.443,0.616,0.72,1.067,0.614l6.898-1.604c0.451-0.105,0.82-0.57,0.82-1.033l0.001-3.685c0-0.463,0.379-0.842,0.842-0.842h8.285c0.464,0,0.843,0.379,0.843,0.842l-0.001,3.471c0.001,0.462,0.375,0.907,0.83,0.986l7.635,1.316c0.456,0.08,0.873-0.232,0.926-0.692C29.851,16.708,30.359,12.29,28.563,10.494zM17.264,14.072h-3.501v4.39h-2.625l4.363,7.556l4.363-7.556h-2.6V14.072z\",\r\n\t\tmusic: \"M12.751,8.042v6.041v9.862c-0.677-0.45-1.636-0.736-2.708-0.736c-2.048,0-3.708,1.025-3.708,2.292c0,1.265,1.66,2.291,3.708,2.291s3.708-1.026,3.708-2.291V13.786l10.915-3.24v9.565c-0.678-0.45-1.635-0.736-2.708-0.736c-2.048,0-3.708,1.025-3.708,2.292c0,1.265,1.66,2.291,3.708,2.291s3.708-1.026,3.708-2.291V10.249V4.208L12.751,8.042z\",\r\n\t\troadmap: \"M23.188,3.735c0-0.975-0.789-1.766-1.766-1.766s-1.766,0.791-1.766,1.766s1.766,4.267,1.766,4.267S23.188,4.71,23.188,3.735zM20.578,3.734c0-0.466,0.378-0.843,0.844-0.843c0.467,0,0.844,0.377,0.844,0.844c0,0.466-0.377,0.843-0.844,0.843C20.956,4.578,20.578,4.201,20.578,3.734zM25.281,18.496c-0.562,0-1.098,0.046-1.592,0.122L11.1,13.976c0.199-0.181,0.312-0.38,0.312-0.59c0-0.108-0.033-0.213-0.088-0.315l8.41-2.239c0.459,0.137,1.023,0.221,1.646,0.221c1.521,0,2.75-0.485,2.75-1.083c0-0.599-1.229-1.083-2.75-1.083s-2.75,0.485-2.75,1.083c0,0.069,0.021,0.137,0.054,0.202L9.896,12.2c-0.633-0.188-1.411-0.303-2.265-0.303c-2.088,0-3.781,0.667-3.781,1.49c0,0.823,1.693,1.489,3.781,1.489c0.573,0,1.11-0.054,1.597-0.144l11.99,4.866c-0.19,0.192-0.306,0.401-0.306,0.623c0,0.188,0.096,0.363,0.236,0.532L8.695,25.415c-0.158-0.005-0.316-0.011-0.477-0.011c-3.241,0-5.87,1.037-5.87,2.312c0,1.276,2.629,2.312,5.87,2.312c3.241,0,5.87-1.034,5.87-2.312c0-0.22-0.083-0.432-0.229-0.633l10.265-5.214c0.37,0.04,0.753,0.066,1.155,0.066c2.414,0,4.371-0.771,4.371-1.723C29.65,19.268,27.693,18.496,25.281,18.496z\",\r\n\t\tbrush: \"M8.125,29.178l1.311-1.5l1.315,1.5l1.311-1.5l1.311,1.5l1.315-1.5l1.311,1.5l1.312-1.5l1.314,1.5l1.312-1.5l1.312,1.5l1.314-1.5l1.312,1.5v-8.521H8.125V29.178zM23.375,17.156c-0.354,0-5.833-0.166-5.833-2.917s0.75-8.834,0.75-8.834S18.542,2.822,16,2.822s-2.292,2.583-2.292,2.583s0.75,6.083,0.75,8.834s-5.479,2.917-5.833,2.917c-0.5,0-0.5,1.166-0.5,1.166v1.271h15.75v-1.271C23.875,18.322,23.875,17.156,23.375,17.156zM16,8.031c-0.621,0-1.125-2.191-1.125-2.812S15.379,4.094,16,4.094s1.125,0.504,1.125,1.125S16.621,8.031,16,8.031z\",\r\n\t\tbucket: \"M21.589,6.787c-0.25-0.152-0.504-0.301-0.76-0.445c-3.832-2.154-8.234-3.309-9.469-1.319c-1.225,2.103,2.314,5.798,6.293,8.222c0.082,0.051,0.167,0.098,0.25,0.146c5.463-0.402,9.887,0.204,9.989,1.402c0.009,0.105-0.026,0.211-0.083,0.318c0.018-0.025,0.041-0.045,0.057-0.07C29.146,12.943,25.585,9.222,21.589,6.787zM10.337,7.166l-0.722,1.52c-4.339,2.747-6.542,6.193-5.484,8.625c0.19,0.438,0.482,0.812,0.846,1.137l0.456-0.959c-0.156-0.178-0.292-0.365-0.384-0.577c-0.732-1.682,0.766-4.188,3.707-6.417l-3.323,6.994c1.492,1.689,5.748,1.748,10.276,0.154c-0.037-0.354,0.032-0.722,0.232-1.049c0.485-0.796,1.523-1.048,2.319-0.563c0.795,0.486,1.048,1.522,0.562,2.319c-0.484,0.795-1.523,1.047-2.319,0.562c-0.154-0.094-0.281-0.213-0.394-0.344c-4.354,1.559-8.372,1.643-10.553,0.314c-0.214-0.131-0.403-0.279-0.58-0.436l-0.124,0.26c-1.088,1.785,1.883,4.916,5.23,6.957c3.347,2.039,7.493,3.246,8.552,1.502l7.77-10.204c-2.48,0.384-6.154-0.963-9.272-2.864C14.014,12.197,11.131,9.546,10.337,7.166z\",\r\n\t\tterminal: \"M3.25,6.469v19.062h25.5V6.469H3.25zM10.345,11.513l-4.331,1.926V12.44l3.124-1.288v-0.018L6.014,9.848v-1l4.331,1.927V11.513zM16.041,14.601h-5.05v-0.882h5.05V14.601z\",\r\n\t\tedit: \"M27.87,7.863L23.024,4.82l-7.889,12.566l4.842,3.04L27.87,7.863zM14.395,21.25l-0.107,2.855l2.527-1.337l2.349-1.24l-4.672-2.936L14.395,21.25zM29.163,3.239l-2.532-1.591c-0.638-0.401-1.479-0.208-1.882,0.43l-0.998,1.588l4.842,3.042l0.999-1.586C29.992,4.481,29.802,3.639,29.163,3.239zM25.198,27.062c0,0.275-0.225,0.5-0.5,0.5h-19c-0.276,0-0.5-0.225-0.5-0.5v-19c0-0.276,0.224-0.5,0.5-0.5h13.244l1.884-3H5.698c-1.93,0-3.5,1.57-3.5,3.5v19c0,1.93,1.57,3.5,3.5,3.5h19c1.93,0,3.5-1.57,3.5-3.5V11.097l-3,4.776V27.062z\",\r\n\t\tpaint: \"M25.541,5.772V2.208H3.292v8.083h22.249v-3.52c1.211,0.113,2.167,1.174,2.167,2.478v1.375c0,1.398-1.164,2.784-2.541,3.025l-7.882,1.381c-1.857,0.326-3.369,2.125-3.369,4.011v0.385c-0.742,0.366-1.292,1.507-1.292,2.865v4.5c0,1.65,0.807,3,1.792,3s1.792-1.35,1.792-3v-4.5c0-1.358-0.55-2.499-1.292-2.865v-0.385c0-1.398,1.164-2.784,2.541-3.025l7.882-1.381c1.857-0.326,3.369-2.125,3.369-4.01V9.25C28.708,7.394,27.304,5.886,25.541,5.772z\",\r\n\t\tcar: \"M28.59,10.781h-2.242c-0.129,0-0.244,0.053-0.333,0.133c-0.716-1.143-1.457-2.058-2.032-2.633c-2-2-14-2-16,0C7.41,8.854,6.674,9.763,5.961,10.898c-0.086-0.069-0.19-0.117-0.309-0.117H3.41c-0.275,0-0.5,0.225-0.5,0.5v1.008c0,0.275,0.221,0.542,0.491,0.594l1.359,0.259c-1.174,2.619-1.866,5.877-0.778,9.14v1.938c0,0.553,0.14,1,0.313,1h2.562c0.173,0,0.313-0.447,0.313-1v-1.584c2.298,0.219,5.551,0.459,8.812,0.459c3.232,0,6.521-0.235,8.814-0.453v1.578c0,0.553,0.141,1,0.312,1h2.562c0.172,0,0.312-0.447,0.312-1l-0.002-1.938c1.087-3.261,0.397-6.516-0.775-9.134l1.392-0.265c0.271-0.052,0.491-0.318,0.491-0.594v-1.008C29.09,11.006,28.865,10.781,28.59,10.781zM7.107,18.906c-1.001,0-1.812-0.812-1.812-1.812s0.812-1.812,1.812-1.812s1.812,0.812,1.812,1.812S8.108,18.906,7.107,18.906zM5.583,13.716c0.96-2.197,2.296-3.917,3.106-4.728c0.585-0.585,3.34-1.207,7.293-1.207c3.953,0,6.708,0.622,7.293,1.207c0.811,0.811,2.146,2.53,3.106,4.728c-2.133,0.236-6.286-0.31-10.399-0.31S7.716,13.952,5.583,13.716zM24.857,18.906c-1.001,0-1.812-0.812-1.812-1.812s0.812-1.812,1.812-1.812s1.812,0.812,1.812,1.812S25.858,18.906,24.857,18.906z\",\r\n\t\ttaxi: \"M28.59,10.781h-2.242c-0.129,0-0.244,0.053-0.333,0.133c-0.716-1.143-1.457-2.058-2.032-2.633c-0.575-0.575-1.979-0.984-3.732-1.229V5.03c-1.541-0.198-3.099-0.249-4.268-0.249c-1.16,0-2.703,0.05-4.233,0.245v2.022C9.98,7.292,8.562,7.702,7.982,8.281C7.41,8.854,6.674,9.763,5.961,10.898c-0.086-0.069-0.19-0.117-0.309-0.117H3.41c-0.275,0-0.5,0.225-0.5,0.5v1.008c0,0.275,0.221,0.542,0.491,0.594l1.359,0.259c-1.174,2.619-1.866,5.877-0.778,9.14v1.938c0,0.553,0.14,1,0.313,1h2.562c0.173,0,0.313-0.447,0.313-1v-1.584c2.298,0.219,5.551,0.459,8.812,0.459c3.232,0,6.521-0.235,8.814-0.453v1.578c0,0.553,0.141,1,0.312,1h2.562c0.172,0,0.312-0.447,0.312-1l-0.002-1.938c1.087-3.261,0.397-6.516-0.775-9.134l1.392-0.265c0.271-0.052,0.491-0.318,0.491-0.594v-1.008C29.09,11.006,28.865,10.781,28.59,10.781zM7.107,18.906c-1.001,0-1.812-0.812-1.812-1.812s0.812-1.812,1.812-1.812s1.812,0.812,1.812,1.812S8.108,18.906,7.107,18.906zM5.583,13.716c0.96-2.197,2.296-3.917,3.106-4.728c0.585-0.585,3.34-1.207,7.293-1.207c3.953,0,6.708,0.622,7.293,1.207c0.811,0.811,2.146,2.53,3.106,4.728c-2.133,0.236-6.286-0.31-10.399-0.31S7.716,13.952,5.583,13.716zM24.857,18.906c-1.001,0-1.812-0.812-1.812-1.812s0.812-1.812,1.812-1.812s1.812,0.812,1.812,1.812S25.858,18.906,24.857,18.906z\",\r\n\t\tbus: \"M30.171,7.314c-0.025-0.274-0.215-0.498-0.421-0.498s-0.375-0.169-0.375-0.375s-0.222-0.337-0.493-0.292L27.41,6.399C27.114,4.607,26.67,3.486,26,2.816c-2-2-18-2-20,0C5.331,3.486,4.886,4.607,4.589,6.399L3.118,6.15C2.847,6.104,2.625,6.235,2.625,6.441S2.456,6.816,2.25,6.816S1.854,7.041,1.829,7.314l-0.47,5.066c-0.025,0.274,0.179,0.498,0.454,0.498h1.062c0.275,0,0.521-0.224,0.546-0.498l0.393-4.232c0.025-0.274,0.268-0.46,0.54-0.415l0.054,0.009C4.007,11.396,4,29.684,4,29.684c0,0.553,0.14,1,0.313,1h2.562c0.173,0,0.313-0.447,0.313-1v-1.893c4.643,0.698,12.982,0.698,17.625,0v1.889c0,0.553,0.141,1,0.312,1h2.562c0.172,0,0.312-0.447,0.312-1c0,0-0.007-18.283-0.407-21.937l0.054-0.009c0.271-0.046,0.514,0.141,0.539,0.415l0.394,4.232c0.025,0.274,0.271,0.498,0.546,0.498h1.062c0.275,0,0.479-0.224,0.454-0.498L30.171,7.314zM7.125,23.371c-1.001,0-1.812-0.812-1.812-1.812s0.812-1.812,1.812-1.812s1.812,0.812,1.812,1.812S8.126,23.371,7.125,23.371zM5.042,15.977C5.143,8.542,5.491,4.739,6.707,3.523C7.194,3.037,10.484,2.316,16,2.316c5.516,0,8.806,0.72,9.293,1.207c1.217,1.216,1.564,5.02,1.665,12.455c-1.175,0.473-4.904,1.025-10.958,1.025C9.951,17.004,6.222,16.452,5.042,15.977zM23.062,21.559c0-1.001,0.812-1.812,1.812-1.812s1.812,0.812,1.812,1.812s-0.812,1.812-1.812,1.812S23.062,22.56,23.062,21.559z\",\r\n\t\ttrain: \"M25.781,21.382c0.69-0.691,0.607-4.311,0.607-4.311c0-2.21-0.663-10.334-1.602-12.103c-0.94-1.768-6.19-3.26-8.787-3.26s-7.847,1.492-8.786,3.26c-0.939,1.769-1.603,9.893-1.603,12.103c0,0-0.083,3.619,0.607,4.311c0.455,0.455,2.205,1.581,3.663,2.423l-3.744,6.486h2.31l0.673-1.166h13.759l0.673,1.166h2.311l-3.744-6.486C23.576,22.963,25.326,21.837,25.781,21.382zM23.819,16.795c-0.473,0-0.856-0.384-0.856-0.856s0.384-0.856,0.856-0.856c0.474,0,0.856,0.384,0.856,0.856S24.293,16.795,23.819,16.795zM20.421,6.959h3.768c0.326,1.565,0.616,3.98,0.807,6.134h-4.574V6.959zM14.417,3.125h3.166v1.333h-3.166V3.125zM7.812,6.959h3.768v6.134H7.005C7.195,10.939,7.485,8.524,7.812,6.959zM8.181,16.795c-0.474,0-0.856-0.384-0.856-0.856s0.383-0.856,0.856-0.856c0.473,0,0.856,0.384,0.856,0.856S8.653,16.795,8.181,16.795zM9.341,15.938c0-0.473,0.384-0.856,0.856-0.856c0.474,0,0.856,0.384,0.856,0.856s-0.383,0.856-0.856,0.856C9.725,16.795,9.341,16.411,9.341,15.938zM10.275,27.125l0.99-1.715h9.469l0.99,1.715H10.275zM20.946,15.938c0-0.473,0.383-0.856,0.856-0.856c0.473,0,0.856,0.384,0.856,0.856s-0.384,0.856-0.856,0.856C21.329,16.795,20.946,16.411,20.946,15.938z\",\r\n\t\tscissors: \"M11.108,10.271c1.083-1.876,0.159-4.443-2.059-5.725C8.231,4.074,7.326,3.825,6.433,3.825c-1.461,0-2.721,0.673-3.373,1.801C2.515,6.57,2.452,7.703,2.884,8.814C3.287,9.85,4.081,10.751,5.12,11.35c0.817,0.473,1.722,0.723,2.616,0.723c0.673,0,1.301-0.149,1.849-0.414c0.669,0.387,1.566,0.904,2.4,1.386c1.583,0.914,0.561,3.861,5.919,6.955c5.357,3.094,11.496,1.535,11.496,1.535L10.75,10.767C10.882,10.611,11.005,10.449,11.108,10.271zM9.375,9.271c-0.506,0.878-2.033,1.055-3.255,0.347C5.474,9.245,4.986,8.702,4.749,8.09C4.541,7.555,4.556,7.035,4.792,6.626c0.293-0.509,0.892-0.801,1.64-0.801c0.543,0,1.102,0.157,1.616,0.454C9.291,6.996,9.898,8.366,9.375,9.271zM17.246,15.792c0,0.483-0.392,0.875-0.875,0.875c-0.037,0-0.068-0.017-0.104-0.021l0.667-1.511C17.121,15.296,17.246,15.526,17.246,15.792zM16.371,14.917c0.037,0,0.068,0.017,0.104,0.021l-0.666,1.51c-0.188-0.16-0.312-0.39-0.312-0.656C15.496,15.309,15.887,14.917,16.371,14.917zM29.4,10.467c0,0-6.139-1.559-11.496,1.535c-0.537,0.311-0.995,0.618-1.415,0.924l4.326,2.497L29.4,10.467zM13.171,17.097c-0.352,0.851-0.575,1.508-1.187,1.859c-0.833,0.481-1.73,0.999-2.399,1.386c-0.549-0.265-1.176-0.414-1.85-0.414c-0.894,0-1.798,0.249-2.616,0.721c-2.218,1.282-3.143,3.851-2.06,5.726c0.651,1.127,1.912,1.801,3.373,1.801c0.894,0,1.799-0.25,2.616-0.722c1.04-0.601,1.833-1.501,2.236-2.536c0.432-1.112,0.368-2.245-0.178-3.189c-0.103-0.178-0.226-0.34-0.356-0.494l3.982-2.3C14.044,18.295,13.546,17.676,13.171,17.097zM9.42,24.192c-0.238,0.612-0.725,1.155-1.371,1.528c-1.221,0.706-2.75,0.532-3.257-0.347C4.27,24.47,4.878,23.099,6.12,22.381c0.514-0.297,1.072-0.453,1.615-0.453c0.749,0,1.346,0.291,1.64,0.8C9.612,23.138,9.628,23.657,9.42,24.192z\",\r\n\t\tcoffee: \"M7.845,9.983l2.034,17.353c0,0.977,2.741,1.769,6.121,1.769c3.381,0,6.121-0.792,6.121-1.769l2.377-17.485c-2.455,1.023-6.812,1.133-8.498,1.133C14.39,10.984,10.345,10.883,7.845,9.983zM24.13,5.752l-0.376-1.678c0-0.651-3.472-1.179-7.754-1.179S8.246,3.424,8.246,4.075L7.871,5.752C7.156,6.036,6.75,6.36,6.75,6.705v1.284c0,1.102,4.142,1.995,9.25,1.995s9.25-0.894,9.25-1.995V6.705C25.25,6.36,24.844,6.036,24.13,5.752z\",\r\n\t\tfilter: \"M26.834,6.958c0-2.094-4.852-3.791-10.834-3.791c-5.983,0-10.833,1.697-10.833,3.791c0,0.429,0.213,0.84,0.588,1.224l8.662,15.002v4.899c0,0.414,0.709,0.75,1.583,0.75c0.875,0,1.584-0.336,1.584-0.75v-4.816l8.715-15.093h-0.045C26.625,7.792,26.834,7.384,26.834,6.958zM16,9.75c-6.363,0-9.833-1.845-9.833-2.792S9.637,4.167,16,4.167c6.363,0,9.834,1.844,9.834,2.791S22.363,9.75,16,9.75z\",\r\n\t\t\"low-battery\": \"M27.271,13.501h-1.104v-1.417c0-0.553-0.447-1-1-1H5.25c-0.552,0-1,0.447-1,1v7.832c0,0.553,0.448,1,1,1h19.917c0.553,0,1-0.447,1-1v-1.417h1.104c0.265,0,0.479-0.447,0.479-1v-2.998C27.75,13.948,27.536,13.501,27.271,13.501zM24.167,18.916H6.25v-5.832h17.917V18.916zM9.167,14.084H7.25v3.832h1.917V14.084z\",\r\n\t\t\"full-battery\": \"M27.271,13.501h-1.104v-1.417c0-0.553-0.447-1-1-1H5.25c-0.552,0-1,0.447-1,1v7.832c0,0.553,0.448,1,1,1h19.917c0.553,0,1-0.447,1-1v-1.417h1.104c0.265,0,0.479-0.447,0.479-1v-2.998C27.75,13.948,27.536,13.501,27.271,13.501zM24.167,18.916H6.25v-5.832h17.917V18.916zM23.167,14.084H7.25v3.832h15.917V14.084z\",\r\n\t\tcharging: \"M27.271,13.501h-1.104v-1.417c0-0.553-0.447-1-1-1H5.25c-0.552,0-1,0.447-1,1v7.832c0,0.553,0.448,1,1,1h19.917c0.553,0,1-0.447,1-1v-1.417h1.104c0.265,0,0.479-0.447,0.479-1v-2.998C27.75,13.948,27.536,13.501,27.271,13.501zM18.525,16.842l-6.733,3.366l3.366-3.366l-1.683-1.684l6.733-3.366l-3.366,3.366L18.525,16.842z\",\r\n\t\tticket: \"M20.338,6.713c-1.002-0.468-1.434-1.658-0.967-2.658L16.578,2.75L6.21,24.948l2.793,1.305c0.468-1.001,1.658-1.434,2.659-0.966s1.434,1.657,0.966,2.658l2.793,1.305L25.789,7.052l-2.793-1.305C22.529,6.748,21.338,7.181,20.338,6.713z\",\r\n\t\tcheckbox: \"M26,27.5H6c-0.829,0-1.5-0.672-1.5-1.5V6c0-0.829,0.671-1.5,1.5-1.5h20c0.828,0,1.5,0.671,1.5,1.5v20C27.5,26.828,26.828,27.5,26,27.5zM7.5,24.5h17v-17h-17V24.5z\",\r\n\t\tchecked: \"M29.548,3.043c-1.081-0.859-2.651-0.679-3.513,0.401L16,16.066l-3.508-4.414c-0.859-1.081-2.431-1.26-3.513-0.401c-1.081,0.859-1.261,2.432-0.401,3.513l5.465,6.875c0.474,0.598,1.195,0.944,1.957,0.944c0.762,0,1.482-0.349,1.957-0.944L29.949,6.556C30.809,5.475,30.629,3.902,29.548,3.043zM24.5,24.5h-17v-17h12.756l2.385-3H6C5.171,4.5,4.5,5.171,4.5,6v20c0,0.828,0.671,1.5,1.5,1.5h20c0.828,0,1.5-0.672,1.5-1.5V12.851l-3,3.773V24.5z\",\r\n\t\tinbox: \"M24,5H8L4,19v8h24v-8L24,5zM27,26H5v-7h8.75c0,1.242,1.007,2.25,2.25,2.25c1.242,0,2.25-1.008,2.25-2.25H27V26z\",\r\n\t\tcrown: \"M16,8.087c1.007,0,1.826-0.819,1.826-1.826c0-1.007-0.819-1.826-1.826-1.826s-1.826,0.819-1.826,1.826C14.174,7.268,14.993,8.087,16,8.087zM16,5.043c0.673,0,1.218,0.545,1.218,1.217S16.673,7.479,16,7.479s-1.217-0.545-1.217-1.218S15.327,5.043,16,5.043zM4.923,13.292c0.812,2.612,1.132,6.646,1.257,9.412c0.027-0.001,0.053-0.009,0.081-0.009h19.479c0.027,0,0.054,0.008,0.081,0.009c0.124-2.766,0.444-6.8,1.256-9.412c-0.449-0.229-0.813-0.591-1.05-1.038c-2.401,2.048-5.157,6.18-5.157,6.18s-3.026-6.058-4.305-9.812C16.383,8.667,16.196,8.696,16,8.696s-0.383-0.029-0.565-0.073c-1.278,3.754-4.305,9.812-4.305,9.812s-2.756-4.132-5.157-6.18C5.738,12.701,5.373,13.063,4.923,13.292zM5.652,11.13c0-1.007-0.819-1.826-1.826-1.826S2,10.124,2,11.13s0.819,1.826,1.826,1.826S5.652,12.137,5.652,11.13zM3.826,12.348c-0.673,0-1.217-0.545-1.217-1.217s0.544-1.217,1.217-1.217s1.217,0.545,1.217,1.217S4.499,12.348,3.826,12.348zM25.739,23.913H6.261c-1.009,0-1.826,0.818-1.826,1.826s0.817,1.826,1.826,1.826h19.479c1.008,0,1.826-0.818,1.826-1.826S26.747,23.913,25.739,23.913zM28.174,9.304c-1.007,0-1.826,0.819-1.826,1.826s0.819,1.826,1.826,1.826S30,12.137,30,11.13S29.181,9.304,28.174,9.304zM28.174,12.348c-0.673,0-1.218-0.545-1.218-1.217s0.545-1.217,1.218-1.217s1.218,0.545,1.218,1.217S28.847,12.348,28.174,12.348z\",\r\n\t\tgreen: \"M24.485,2c0,8-18,4-18,20c0,6,2,8,2,8h2c0,0-3-2-3-8c0-4,9-8,9-8s-7.981,4.328-7.981,8.436C21.239,24.431,28.288,9.606,24.485,2z\",\r\n\t\tbolt: \"M22.727,18.242L4.792,27.208l8.966-8.966l-4.483-4.484l17.933-8.966l-8.966,8.966L22.727,18.242z\",\r\n        // logos\r\n        slideshare: \"M28.952,12.795c-0.956,1.062-5.073,2.409-5.604,2.409h-4.513c-0.749,0-1.877,0.147-2.408,0.484c0.061,0.054,0.122,0.108,0.181,0.163c0.408,0.379,1.362,0.913,2.206,0.913c0.397,0,0.723-0.115,1-0.354c1.178-1.007,1.79-1.125,2.145-1.125c0.421,0,0.783,0.193,0.996,0.531c0.4,0.626,0.106,1.445-0.194,2.087c-0.718,1.524-3.058,3.171-5.595,3.171c-0.002,0-0.002,0-0.004,0c-0.354,0-0.701-0.033-1.033-0.099v3.251c0,0.742,1.033,2.533,4.167,2.533s3.955-3.701,3.955-4.338v-4.512c2.23-1.169,4.512-1.805,5.604-3.895C30.882,12.05,29.907,11.733,28.952,12.795zM21.942,17.521c0.796-1.699-0.053-1.699-1.54-0.425s-3.665,0.105-4.408-0.585c-0.743-0.689-1.486-1.22-2.814-1.167c-1.328,0.053-4.46-0.161-6.267-0.585c-1.805-0.425-4.895-3-5.15-2.335c-0.266,0.69,0.211,1.168,1.168,2.335c0.955,1.169,5.075,2.778,5.075,2.778s0,3.453,0,4.886c0,1.435,2.973,3.61,4.512,3.61s2.708-1.062,2.708-1.806v-4.512C17.775,21.045,21.146,19.221,21.942,17.521zM20.342,13.73c1.744,0,3.159-1.414,3.159-3.158c0-1.745-1.415-3.159-3.159-3.159s-3.158,1.414-3.158,3.159C17.184,12.316,18.598,13.73,20.342,13.73zM12.019,13.73c1.744,0,3.158-1.414,3.158-3.158c0-1.745-1.414-3.159-3.158-3.159c-1.745,0-3.159,1.414-3.159,3.159C8.86,12.316,10.273,13.73,12.019,13.73z\",\r\n        twitter: \"M23.295,22.567h-7.213c-2.125,0-4.103-2.215-4.103-4.736v-1.829h11.232c1.817,0,3.291-1.469,3.291-3.281c0-1.813-1.474-3.282-3.291-3.282H11.979V6.198c0-1.835-1.375-3.323-3.192-3.323c-1.816,0-3.29,1.488-3.29,3.323v11.633c0,6.23,4.685,11.274,10.476,11.274h7.211c1.818,0,3.318-1.463,3.318-3.298S25.112,22.567,23.295,22.567z\",\r\n        twitterbird: \"M26.492,9.493c-0.771,0.343-1.602,0.574-2.473,0.678c0.89-0.533,1.562-1.376,1.893-2.382c-0.832,0.493-1.753,0.852-2.734,1.044c-0.785-0.837-1.902-1.359-3.142-1.359c-2.377,0-4.306,1.928-4.306,4.306c0,0.337,0.039,0.666,0.112,0.979c-3.578-0.18-6.75-1.894-8.874-4.499c-0.371,0.636-0.583,1.375-0.583,2.165c0,1.494,0.76,2.812,1.915,3.583c-0.706-0.022-1.37-0.216-1.95-0.538c0,0.018,0,0.036,0,0.053c0,2.086,1.484,3.829,3.454,4.222c-0.361,0.099-0.741,0.147-1.134,0.147c-0.278,0-0.547-0.023-0.81-0.076c0.548,1.711,2.138,2.955,4.022,2.99c-1.474,1.146-3.33,1.842-5.347,1.842c-0.348,0-0.69-0.021-1.027-0.062c1.905,1.225,4.168,1.938,6.6,1.938c7.919,0,12.248-6.562,12.248-12.25c0-0.187-0.002-0.372-0.01-0.557C25.186,11.115,25.915,10.356,26.492,9.493z\",\r\n        skype: \"M28.777,18.438c0.209-0.948,0.318-1.934,0.318-2.944c0-7.578-6.144-13.722-13.724-13.722c-0.799,0-1.584,0.069-2.346,0.2C11.801,1.199,10.35,0.75,8.793,0.75c-4.395,0-7.958,3.562-7.958,7.958c0,1.47,0.399,2.845,1.094,4.024c-0.183,0.893-0.277,1.814-0.277,2.76c0,7.58,6.144,13.723,13.722,13.723c0.859,0,1.699-0.078,2.515-0.23c1.119,0.604,2.399,0.945,3.762,0.945c4.395,0,7.957-3.562,7.957-7.959C29.605,20.701,29.309,19.502,28.777,18.438zM22.412,22.051c-0.635,0.898-1.573,1.609-2.789,2.115c-1.203,0.5-2.646,0.754-4.287,0.754c-1.971,0-3.624-0.346-4.914-1.031C9.5,23.391,8.74,22.717,8.163,21.885c-0.583-0.842-0.879-1.676-0.879-2.479c0-0.503,0.192-0.939,0.573-1.296c0.375-0.354,0.857-0.532,1.432-0.532c0.471,0,0.878,0.141,1.209,0.422c0.315,0.269,0.586,0.662,0.805,1.174c0.242,0.558,0.508,1.027,0.788,1.397c0.269,0.355,0.656,0.656,1.151,0.89c0.497,0.235,1.168,0.354,1.992,0.354c1.135,0,2.064-0.241,2.764-0.721c0.684-0.465,1.016-1.025,1.016-1.711c0-0.543-0.173-0.969-0.529-1.303c-0.373-0.348-0.865-0.621-1.465-0.807c-0.623-0.195-1.47-0.404-2.518-0.623c-1.424-0.306-2.634-0.668-3.596-1.076c-0.984-0.419-1.777-1-2.357-1.727c-0.59-0.736-0.889-1.662-0.889-2.75c0-1.036,0.314-1.971,0.933-2.776c0.613-0.8,1.51-1.423,2.663-1.849c1.139-0.422,2.494-0.635,4.027-0.635c1.225,0,2.303,0.141,3.201,0.421c0.904,0.282,1.668,0.662,2.267,1.13c0.604,0.472,1.054,0.977,1.335,1.5c0.284,0.529,0.43,1.057,0.43,1.565c0,0.49-0.189,0.937-0.563,1.324c-0.375,0.391-0.851,0.589-1.408,0.589c-0.509,0-0.905-0.124-1.183-0.369c-0.258-0.227-0.523-0.58-0.819-1.09c-0.342-0.65-0.756-1.162-1.229-1.523c-0.463-0.351-1.232-0.529-2.292-0.529c-0.984,0-1.784,0.197-2.379,0.588c-0.572,0.375-0.85,0.805-0.85,1.314c0,0.312,0.09,0.574,0.273,0.799c0.195,0.238,0.471,0.447,0.818,0.621c0.36,0.182,0.732,0.326,1.104,0.429c0.382,0.106,1.021,0.263,1.899,0.466c1.11,0.238,2.131,0.506,3.034,0.793c0.913,0.293,1.703,0.654,2.348,1.072c0.656,0.429,1.178,0.979,1.547,1.635c0.369,0.658,0.558,1.471,0.558,2.416C23.371,20.119,23.049,21.148,22.412,22.051z\",\r\n        windows: \"M20.023,17.484c-1.732-0.205-3.022-0.908-4.212-1.701l0,0l-0.559,0.279l-2.578,8.924l0,0c1.217,0.805,2.905,1.707,4.682,1.914c2.686,0.312,5.56-0.744,6.391-1.195l2.617-9.061l-0.559-0.279C25.805,16.365,23.193,17.857,20.023,17.484zM14.424,14.825c-1.267-0.87-2.578-1.652-4.375-1.816c-0.318-0.029-0.627-0.042-0.925-0.042c-3.011,0-4.948,1.347-4.948,1.347l-2.565,8.877l0,0l0.526,0.281c0.981-0.476,2.78-1.145,5.09-0.984c1.665,0.113,2.92,0.781,4.117,1.531l0.507-0.26l0,0L14.424,14.825zM10.201,12.094c1.664,0.114,2.921,0.78,4.117,1.533l0.509-0.26l0,0L17.4,4.431c-1.27-0.87-2.579-1.653-4.377-1.816c-0.318-0.029-0.626-0.042-0.924-0.042C9.088,2.573,7.15,3.92,7.15,3.92l-2.566,8.878L5.11,13.08C6.092,12.604,7.891,11.936,10.201,12.094zM28.779,5.971L28.779,5.971c0,0.001-2.609,1.492-5.779,1.119c-1.734-0.204-3.023-0.907-4.213-1.701L18.227,5.67l-2.576,8.923l0,0c1.215,0.803,2.906,1.709,4.68,1.915c2.687,0.312,5.558-0.745,6.392-1.197l2.615-9.059L28.779,5.971z\",\r\n        apple: \"M24.32,10.85c-1.743,1.233-2.615,2.719-2.615,4.455c0,2.079,1.078,3.673,3.232,4.786c-0.578,1.677-1.416,3.134-2.514,4.375c-1.097,1.241-2.098,1.862-3.004,1.862c-0.427,0-1.009-0.143-1.748-0.423l-0.354-0.138c-0.725-0.281-1.363-0.423-1.92-0.423c-0.525,0-1.1,0.11-1.725,0.331l-0.445,0.16l-0.56,0.229c-0.441,0.176-0.888,0.264-1.337,0.264c-1.059,0-2.228-0.872-3.507-2.616c-1.843-2.498-2.764-5.221-2.764-8.167c0-2.095,0.574-3.781,1.725-5.061c1.149-1.279,2.673-1.92,4.568-1.92c0.709,0,1.371,0.13,1.988,0.389l0.423,0.172l0.445,0.183c0.396,0.167,0.716,0.251,0.959,0.251c0.312,0,0.659-0.072,1.04-0.217l0.582-0.229l0.435-0.16c0.693-0.251,1.459-0.377,2.297-0.377C21.512,8.576,23.109,9.334,24.32,10.85zM19.615,3.287c0.021,0.267,0.033,0.473,0.033,0.617c0,1.317-0.479,2.473-1.438,3.467s-2.075,1.49-3.347,1.49c-0.038-0.297-0.058-0.51-0.058-0.639c0-1.12,0.445-2.171,1.337-3.153c0.891-0.982,1.922-1.558,3.096-1.725C19.32,3.329,19.447,3.311,19.615,3.287z\",\r\n        linux: \"M11.791,25.229c1.027-0.104,1.162-1.191,0.68-1.666c-0.398-0.392-2.598-2.022-3.171-2.664C9.033,20.6,8.673,20.454,8.52,20.12c-0.352-0.771-0.598-1.869-0.151-2.658c0.081-0.144,0.133-0.078,0.071,0.22c-0.351,1.684,0.746,3.059,0.986,2.354c0.167-0.487,0.013-1.358,0.102-2.051c0.158-1.226,1.273-3.577,1.763-3.712c-0.755-1.398,0.886-2.494,0.866-3.723c-0.014-0.798,0.701,0.982,1.419,1.359c0.802,0.422,1.684-0.794,2.936-1.41c0.354-0.176,0.809-0.376,0.776-0.524c-0.146-0.718-1.644,0.886-2.979,0.939c-0.61,0.024-0.837-0.12-1.072-0.347c-0.712-0.689,0.073-0.115,1.132-0.307c0.471-0.085,0.629-0.163,1.128-0.365c0.5-0.201,1.069-0.5,1.636-0.654c0.395-0.106,0.361-0.402,0.208-0.491c-0.088-0.051-0.219-0.046-0.321,0.133c-0.244,0.419-1.383,0.661-1.74,0.771c-0.457,0.14-0.962,0.271-1.634,0.243c-1.021-0.042-0.782-0.509-1.513-0.928c-0.213-0.122-0.156-0.444,0.129-0.729c0.148-0.148,0.557-0.232,0.76-0.572c0.028-0.047,0.289-0.32,0.494-0.461c0.07-0.049,0.076-1.295-0.562-1.32c-0.543-0.021-0.697,0.398-0.675,0.818c0.022,0.419,0.245,0.765,0.393,0.764c0.285-0.004,0.019,0.311-0.138,0.361c-0.237,0.078-0.562-0.934-0.525-1.418c0.039-0.506,0.303-1.4,0.942-1.383c0.576,0.016,0.993,0.737,0.973,1.983c-0.003,0.211,0.935-0.101,1.247,0.229c0.224,0.236-0.767-2.207,1.438-2.375c0.582,0.111,1.14,0.305,1.371,1.641c-0.086,0.139,0.146,1.07-0.215,1.182c-0.438,0.135-0.707-0.02-0.453-0.438c0.172-0.418,0.004-1.483-0.882-1.42c-0.887,0.064-0.769,1.637-0.526,1.668c0.243,0.031,0.854,0.465,1.282,0.549c1.401,0.271,0.371,1.075,0.555,2.048c0.205,1.099,0.929,0.809,1.578,3.717c0.137,0.177,0.676,0.345,1.199,2.579c0.473,2.011-0.195,3.473,0.938,3.353c0.256-0.026,0.629-0.1,0.792-0.668c0.425-1.489-0.213-3.263-0.855-4.46c-0.375-0.698-0.729-1.174-0.916-1.337c0.738,0.436,1.683,1.829,1.898,2.862c0.286,1.358,0.49,1.934,0.059,3.37c0.25,0.125,0.871,0.39,0.871,0.685c-0.647-0.53-2.629-0.625-2.68,0.646c-0.338,0.008-0.594,0.034-0.811,0.293c-0.797,0.944-0.059,2.842-0.139,3.859c-0.07,0.896-0.318,1.783-0.46,2.683c-0.474-0.019-0.428-0.364-0.274-0.852c0.135-0.431,0.351-0.968,0.365-1.484c0.012-0.467-0.039-0.759-0.156-0.831c-0.118-0.072-0.303,0.074-0.559,0.485c-0.543,0.875-1.722,1.261-2.821,1.397c-1.099,0.138-2.123,0.028-2.664-0.578c-0.186-0.207-0.492,0.058-0.529,0.111c-0.049,0.074,0.18,0.219,0.352,0.533c0.251,0.461,0.49,1.159-0.105,1.479C12.83,26.314,12.316,26.221,11.791,25.229L11.791,25.229zM11.398,25.188c0.395,0.621,1.783,3.232-0.652,3.571c-0.814,0.114-2.125-0.474-3.396-0.784c-1.142-0.279-2.301-0.444-2.949-0.627c-0.391-0.108-0.554-0.25-0.588-0.414c-0.091-0.434,0.474-1.041,0.503-1.555c0.028-0.514-0.188-0.779-0.364-1.199c-0.177-0.42-0.224-0.734-0.081-0.914c0.109-0.141,0.334-0.199,0.698-0.164c0.462,0.047,1.02-0.049,1.319-0.23c0.505-0.309,0.742-0.939,0.516-1.699c0,0.744-0.244,1.025-0.855,1.366c-0.577,0.319-1.467,0.062-1.875,0.416c-0.492,0.427,0.175,1.528,0.12,2.338c-0.042,0.622-0.69,1.322-0.401,1.946c0.291,0.627,1.648,0.695,3.064,0.99c2.012,0.422,3.184,1.153,4.113,1.188c1.356,0.05,1.564-1.342,3.693-1.36c0.621-0.033,1.229-0.052,1.835-0.06c0.688-0.009,1.375-0.003,2.079,0.014c1.417,0.034,0.931,0.773,1.851,1.246c0.774,0.397,2.17,0.241,2.504-0.077c0.451-0.431,1.662-1.467,2.592-1.935c1.156-0.583,3.876-1.588,1.902-2.812c-0.461-0.285-1.547-0.588-1.639-2.676c-0.412,0.366-0.365,2.312,0.784,2.697c1.283,0.431,2.085,1.152-0.301,1.969c-1.58,0.54-1.849,0.706-3.099,1.747c-1.267,1.054-3.145,0.636-2.815-1.582c0.171-1.155,0.269-2.11-0.019-3.114c-0.142-0.49-0.211-1.119-0.114-1.562c0.187-0.858,0.651-1.117,1.106-0.293c0.285,0.519,0.385,1.122,1.408,1.171c1.607,0.077,1.926-1.553,2.439-1.627c0.343-0.05,0.686-1.02,0.425-2.589c-0.28-1.681-1.269-4.332-2.536-5.677c-1.053-1.118-1.717-2.098-2.135-3.497c-0.352-1.175-0.547-2.318-0.475-3.412c0.094-1.417-0.691-3.389-1.943-4.316c-0.782-0.581-2.011-0.893-3.122-0.88c-0.623,0.007-1.21,0.099-1.661,0.343c-1.855,1.008-2.113,2.445-2.086,4.088c0.025,1.543,0.078,3.303,0.254,4.977c-0.208,0.77-1.288,2.227-1.979,3.114C8.59,14.233,8.121,16.01,7.52,17.561c-0.321,0.828-0.862,1.2-0.908,2.265C6.6,20.122,6.61,20.891,6.894,20.672C7.98,19.829,9.343,21.95,11.398,25.188L11.398,25.188zM17.044,2.953c-0.06,0.176-0.3,0.321-0.146,0.443c0.152,0.123,0.24-0.171,0.549-0.281c0.08-0.028,0.449,0.012,0.519-0.164c0.03-0.077-0.19-0.164-0.321-0.291c-0.133-0.125-0.262-0.236-0.386-0.229C16.938,2.451,17.096,2.798,17.044,2.953L17.044,2.953zM18.934,9.35c0.115-0.121,0.174,0.207,0.483,0.402c0.244,0.154,0.481,0.04,0.545,0.354c0.044,0.225-0.097,0.467-0.284,0.436C19.35,10.486,18.596,9.705,18.934,9.35L18.934,9.35zM13.832,7.375c-0.508-0.037-0.543,0.33-0.375,0.324C13.629,7.693,13.523,7.408,13.832,7.375L13.832,7.375zM12.96,6.436c0.06-0.013,0.146,0.09,0.119,0.233c-0.037,0.199-0.021,0.324,0.117,0.325c0.022,0,0.048-0.005,0.056-0.057c0.066-0.396-0.14-0.688-0.225-0.711C12.834,6.178,12.857,6.458,12.96,6.436L12.96,6.436zM16.663,6.268c0.129,0.039,0.253,0.262,0.28,0.504c0.002,0.021,0.168-0.035,0.17-0.088c0.011-0.389-0.321-0.571-0.408-0.562C16.506,6.139,16.562,6.238,16.663,6.268L16.663,6.268zM14.765,7.423c0.463-0.214,0.625,0.118,0.465,0.171C15.066,7.648,15.065,7.345,14.765,7.423L14.765,7.423zM9.178,15.304c-0.219-0.026,0.063-0.19,0.184-0.397c0.131-0.227,0.105-0.511,0.244-0.469s0.061,0.2-0.033,0.461C9.491,15.121,9.258,15.313,9.178,15.304L9.178,15.304z\",\r\n        nodejs: \"M4.783,4.458L2.59,3.196C2.553,3.174,2.511,3.163,2.469,3.161H2.447C2.405,3.163,2.363,3.174,2.326,3.196L0.133,4.458C0.051,4.505,0,4.593,0,4.688l0.005,3.398c0,0.047,0.024,0.092,0.066,0.114c0.041,0.024,0.091,0.024,0.132,0l1.303-0.746c0.083-0.049,0.132-0.136,0.132-0.229V5.637c0-0.095,0.05-0.183,0.132-0.229l0.555-0.32c0.041-0.023,0.086-0.035,0.132-0.035c0.045,0,0.092,0.012,0.132,0.035l0.555,0.32c0.082,0.047,0.133,0.135,0.133,0.229v1.588c0,0.094,0.051,0.182,0.132,0.229l1.303,0.746c0.041,0.024,0.092,0.024,0.132,0c0.041-0.022,0.066-0.067,0.066-0.114l0.004-3.398C4.915,4.593,4.865,4.505,4.783,4.458zM17.93,0.745l-1.305-0.729c-0.042-0.023-0.091-0.022-0.132,0.001c-0.041,0.024-0.065,0.067-0.065,0.114v3.365c0,0.033-0.018,0.064-0.046,0.081s-0.064,0.017-0.093,0l-0.549-0.316c-0.082-0.047-0.183-0.047-0.265,0l-2.193,1.266c-0.082,0.047-0.133,0.135-0.133,0.229V7.29c0,0.095,0.051,0.182,0.132,0.229l2.194,1.267c0.082,0.048,0.183,0.048,0.265,0l2.194-1.267c0.082-0.048,0.133-0.135,0.133-0.229V0.977C18.066,0.88,18.014,0.792,17.93,0.745zM16.421,6.458c0,0.023-0.013,0.045-0.033,0.057l-0.753,0.435c-0.021,0.012-0.045,0.012-0.066,0l-0.753-0.435c-0.021-0.012-0.033-0.034-0.033-0.057v-0.87c0-0.023,0.013-0.045,0.033-0.058l0.753-0.435c0.021-0.012,0.045-0.012,0.066,0l0.753,0.435c0.021,0.012,0.033,0.034,0.033,0.058V6.458zM24.473,4.493l-2.18-1.266c-0.082-0.047-0.183-0.048-0.265,0l-2.193,1.266c-0.082,0.047-0.132,0.135-0.132,0.229v2.532c0,0.096,0.051,0.184,0.133,0.23l2.18,1.242c0.08,0.045,0.179,0.046,0.26,0.001l1.318-0.732c0.042-0.023,0.067-0.067,0.068-0.115c0-0.048-0.025-0.092-0.066-0.116l-2.207-1.266c-0.041-0.023-0.066-0.067-0.066-0.115V5.59c0-0.047,0.025-0.091,0.065-0.115l0.688-0.396c0.041-0.024,0.091-0.024,0.132,0l0.688,0.396c0.041,0.023,0.066,0.067,0.066,0.115v0.625c0,0.047,0.025,0.091,0.066,0.114c0.041,0.024,0.092,0.024,0.132,0l1.314-0.764c0.081-0.047,0.132-0.135,0.132-0.229V4.722C24.605,4.628,24.555,4.541,24.473,4.493zM11.363,4.48L9.169,3.214c-0.082-0.047-0.183-0.047-0.265,0L6.711,4.48C6.629,4.527,6.579,4.615,6.579,4.709v2.534c0,0.095,0.051,0.182,0.133,0.229l2.193,1.267c0.082,0.048,0.183,0.048,0.265,0l2.193-1.267c0.082-0.048,0.132-0.135,0.132-0.229V4.709C11.495,4.615,11.445,4.527,11.363,4.48zM31.019,4.382L28.95,3.187c-0.13-0.074-0.304-0.074-0.435,0l-2.068,1.195c-0.135,0.077-0.218,0.222-0.218,0.377v2.386c0,0.156,0.083,0.301,0.218,0.378l0.542,0.312c0.263,0.13,0.356,0.13,0.477,0.13c0.389,0,0.612-0.236,0.612-0.646V4.962c0-0.033-0.027-0.06-0.06-0.06h-0.263c-0.033,0-0.061,0.026-0.061,0.06v2.356c0,0.182-0.188,0.363-0.495,0.209l-0.566-0.326c-0.021-0.012-0.033-0.033-0.033-0.057V4.759c0-0.023,0.013-0.045,0.033-0.057l2.067-1.193c0.019-0.011,0.044-0.011,0.063,0l2.067,1.193c0.02,0.012,0.032,0.034,0.032,0.057v2.386c0,0.023-0.013,0.046-0.032,0.057l-2.068,1.193c-0.018,0.012-0.045,0.012-0.063,0l-0.53-0.314c-0.017-0.01-0.036-0.013-0.052-0.004c-0.146,0.083-0.175,0.094-0.312,0.143c-0.034,0.012-0.084,0.031,0.019,0.09l0.691,0.408c0.065,0.038,0.141,0.059,0.217,0.059s0.151-0.021,0.218-0.059l2.068-1.194c0.134-0.078,0.217-0.222,0.217-0.378V4.759C31.235,4.604,31.152,4.459,31.019,4.382zM29.371,6.768c-0.548,0-0.668-0.138-0.708-0.41c-0.005-0.029-0.029-0.051-0.06-0.051h-0.268c-0.033,0-0.06,0.026-0.06,0.06c0,0.349,0.189,0.765,1.095,0.765c0.655,0,1.031-0.259,1.031-0.709c0-0.447-0.302-0.566-0.938-0.65c-0.643-0.085-0.708-0.128-0.708-0.279c0-0.125,0.056-0.29,0.531-0.29c0.425,0,0.581,0.091,0.646,0.378c0.006,0.027,0.03,0.047,0.059,0.047h0.269c0.017,0,0.032-0.007,0.044-0.019c0.011-0.013,0.017-0.029,0.016-0.046c-0.042-0.493-0.37-0.723-1.032-0.723c-0.59,0-0.941,0.249-0.941,0.666c0,0.453,0.35,0.578,0.916,0.634c0.677,0.066,0.729,0.166,0.729,0.298C29.992,6.669,29.807,6.768,29.371,6.768zM22.128,5.446l-0.42,0.243c-0.016,0.009-0.025,0.026-0.025,0.044v0.486c0,0.019,0.01,0.035,0.025,0.044l0.42,0.243c0.016,0.009,0.035,0.009,0.052,0l0.421-0.243c0.016-0.009,0.025-0.025,0.025-0.044V5.733c0-0.018-0.01-0.035-0.025-0.044L22.18,5.446C22.163,5.438,22.144,5.438,22.128,5.446z\",\r\n        jquery: \"M10.322,23.041C4.579,18.723,2.777,11.07,5.494,4.583c-0.254,0.291-0.502,0.59-0.739,0.904c-5.177,6.887-4.008,16.505,2.613,21.482c6.62,4.979,16.184,3.432,21.362-3.455c0.237-0.314,0.454-0.635,0.663-0.959C23.915,26.963,16.064,27.357,10.322,23.041zM13.662,18.598c4.765,3.582,11.604,2.564,15.567-2.198c-3.609,2.641-9.09,2.475-13.361-0.736S9.916,7.231,11.451,3.03C7.976,8.161,8.897,15.015,13.662,18.598zM18.642,11.976c3.254,2.447,8.146,1.438,10.967-2.242c-2.604,1.921-6.341,1.955-9.157-0.164c-2.819-2.118-3.826-5.718-2.701-8.754C14.998,4.549,15.387,9.528,18.642,11.976z\",\r\n        sencha: \"M18.265,22.734c1.365,0.662,2.309,2.062,2.309,3.682c0,1.566-0.881,2.928-2.176,3.615l1.922-0.98c3.16-1.58,5.332-4.846,5.332-8.617c0-3.719-2.109-6.945-5.195-8.547l-6.272-3.144c-1.366-0.662-2.308-2.062-2.308-3.682c0-1.567,0.881-2.928,2.175-3.614L12.13,2.428c-3.161,1.578-5.332,4.843-5.332,8.616c0,3.718,2.108,6.944,5.195,8.546L18.265,22.734z\",\r\n        vim: \"M25.012,10.44l4.571-4.645c0.11-0.113,0.173-0.264,0.173-0.423V3.134c0-0.159-0.064-0.314-0.177-0.427l-0.604-0.602c-0.111-0.112-0.261-0.176-0.42-0.177l-9.646-0.086C18.71,1.84,18.523,1.935,18.41,2.099L17.807,2.96c-0.033,0.047-0.059,0.099-0.076,0.154l-2.144-2.156l0,0l-1.646,1.666l-0.447-0.497c-0.112-0.125-0.27-0.197-0.438-0.199L3.324,1.756c-0.163-0.003-0.322,0.06-0.437,0.176L2.284,2.535C2.171,2.647,2.107,2.803,2.107,2.962v2.325c0,0.164,0.066,0.32,0.183,0.434l0.657,0.635C3.056,6.461,3.2,6.521,3.352,6.525l0.285,0.007l0.007,6.512l-2.527,2.557l2.533,2.533l0.008,8.084c0,0.159,0.065,0.314,0.177,0.427l0.861,0.861c0.112,0.111,0.268,0.176,0.427,0.176h2.67c0.161,0,0.317-0.064,0.43-0.181l2.378-2.417l4.9,4.9l14.47-14.558L25.012,10.44zM9.747,24.232l-2.208,2.242H5.372l-0.509-0.509L4.856,19.34l-0.008-7.515L4.842,5.943c0-0.328-0.261-0.594-0.588-0.603L3.617,5.326L3.313,5.031v-1.82l0.245-0.245l9.215,0.163l0.319,0.354l0.126,0.141v1.419l-0.352,0.362H12.26c-0.331,0-0.6,0.266-0.603,0.597l-0.076,7.203c-0.002,0.244,0.141,0.463,0.365,0.56c0.224,0.096,0.482,0.049,0.657-0.12l7.495-7.235c0.174-0.171,0.23-0.432,0.139-0.66c-0.09-0.228-0.312-0.377-0.56-0.377h-0.479l-0.296-0.379V3.496l0.312-0.445l9.083,0.081l0.252,0.252v1.743l-4.388,4.458L9.747,24.232z\",\r\n        inkscape: \"M20.402,17.626c0.84-0.772,2.468-0.381,5.979-1.853c1.716-0.72,1.572-1.265,1.566-1.928c-0.001-0.014,0-0.027,0-0.041h-0.005c-0.012-0.667-0.291-1.332-0.846-1.845L17.049,2.684c-0.566-0.522-1.304-0.782-2.042-0.782V1.898c-0.738,0-1.475,0.261-2.04,0.783l-10.05,9.276c-0.554,0.512-0.832,1.176-0.843,1.844H2.07c0,0,0.003,0.011,0.004,0.011c0,0.012-0.004,0.024-0.004,0.034h0.017c0.193,0.676,5.164,1.536,5.718,2.049c0.838,0.774-3.211,1.339-2.374,2.114c0.838,0.773,5.062,1.496,5.898,2.271c0.838,0.771-1.711,1.596-0.874,2.366c0.837,0.773,3.651-0.191,3.142,1.822c1.13,1.045,3.49,0.547,5.071-0.498c0.837-0.771-1.607-0.703-0.77-1.477c0.836-0.774,2.949-0.777,4.73-2.627C21.913,18.838,19.566,18.398,20.402,17.626zM10.973,16.868l-0.42-0.504c1.497,0.358,3.162,0.827,4.498,0.837l0.058,0.554C13.964,17.646,11.544,17.137,10.973,16.868zM18.161,8.58l-1.396-0.74L14.53,9.594l-1.067-3.192l-1.177,2.545L8.998,9.25l0.036-1.352c0-0.324,1.895-2.596,3.05-3.136l2.112-1.401c0.312-0.186,0.53-0.261,0.727-0.257c0.327,0.011,0.593,0.239,1.112,0.55l4.748,3.25c0.357,0.215,0.619,0.522,0.626,0.898l-2.813-1.254L18.161,8.58zM26.434,19.594c-0.313-0.07-1.688-0.691-2.035,0.165c0.968,0.981,2.645,2.181,3.316,1.482C28.391,20.543,27.102,19.745,26.434,19.594zM4.663,21.566c-0.315,0.074-1.842,0.115-1.719,1.021c1.351,0.451,3.438,0.792,3.684-0.113C6.873,21.566,5.33,21.414,4.663,21.566zM17.877,26.396c-0.232,0.209-1.53,0.953-0.929,1.681c1.413-0.236,3.403-0.914,3.12-1.812C19.786,25.369,18.37,25.953,17.877,26.396z\",\r\n        aumade: \"M14.513,24.52c-0.131-0.217-0.14-0.481-0.022-0.711l1.987-3.844l0,0c0.186-0.357,0.625-0.497,0.981-0.312c0.357,0.188,0.498,0.625,0.312,0.982l-1.801,3.48l2.228,3.699h12.269l-14.8-25.631L6.433,18.178c0.434,0.242,0.909,0.479,1.391,0.654c0.571,0.211,1.148,0.342,1.658,0.342c0.276,0,0.579-0.078,0.916-0.238c0.337-0.158,0.7-0.396,1.073-0.688c0.749-0.582,1.527-1.354,2.334-2.021c0.539-0.442,1.091-0.844,1.706-1.099c0.352-0.145,0.729-0.239,1.128-0.239c0.622,0,1.174,0.214,1.622,0.5c0.449,0.287,0.813,0.646,1.11,0.995c0.59,0.697,0.902,1.359,0.924,1.394l0,0c0.18,0.361,0.021,0.801-0.341,0.977c-0.356,0.176-0.798,0.021-0.978-0.34c0-0.002-0.002-0.004-0.004-0.007c-0.002-0.011-0.008-0.021-0.018-0.034c-0.018-0.033-0.043-0.082-0.078-0.146c-0.07-0.125-0.179-0.305-0.312-0.496c-0.271-0.391-0.668-0.845-1.092-1.104c-0.281-0.178-0.561-0.272-0.844-0.272c-0.216,0-0.479,0.069-0.788,0.229c-0.309,0.153-0.653,0.396-1.016,0.688c-0.727,0.584-1.511,1.362-2.351,2.033c-0.562,0.445-1.15,0.853-1.809,1.103c-0.375,0.143-0.776,0.229-1.195,0.229c-0.749,0-1.48-0.181-2.164-0.433c-0.58-0.219-1.125-0.482-1.613-0.764L0.86,27.816h15.63L14.513,24.52zM18.214,22.242c0.222-0.557,0.537-1.217,0.963-1.848c0.427-0.627,0.957-1.232,1.646-1.646c0.379-0.229,0.812-0.391,1.282-0.438l-0.604-0.934l0,0c-0.22-0.339-0.123-0.789,0.215-1.009c0.341-0.219,0.789-0.123,1.013,0.216l1.545,2.391c0.184,0.274,0.147,0.646-0.075,0.893c-0.228,0.247-0.591,0.305-0.886,0.145c-0.354-0.191-0.646-0.258-0.901-0.258c-0.291,0-0.562,0.084-0.845,0.25c-0.277,0.164-0.562,0.414-0.813,0.719c-0.519,0.607-0.937,1.422-1.185,2.055c-0.111,0.285-0.387,0.466-0.678,0.466c-0.092,0-0.183-0.021-0.271-0.056C18.249,23.039,18.064,22.615,18.214,22.242z\",\r\n        firefox: \"M28.4,22.469c0.479-0.964,0.851-1.991,1.095-3.066c0.953-3.661,0.666-6.854,0.666-6.854l-0.327,2.104c0,0-0.469-3.896-1.044-5.353c-0.881-2.231-1.273-2.214-1.274-2.21c0.542,1.379,0.494,2.169,0.483,2.288c-0.01-0.016-0.019-0.032-0.027-0.047c-0.131-0.324-0.797-1.819-2.225-2.878c-2.502-2.481-5.943-4.014-9.745-4.015c-4.056,0-7.705,1.745-10.238,4.525C5.444,6.5,5.183,5.938,5.159,5.317c0,0-0.002,0.002-0.006,0.005c0-0.011-0.003-0.021-0.003-0.031c0,0-1.61,1.247-1.436,4.612c-0.299,0.574-0.56,1.172-0.777,1.791c-0.375,0.817-0.75,2.004-1.059,3.746c0,0,0.133-0.422,0.399-0.988c-0.064,0.482-0.103,0.971-0.116,1.467c-0.09,0.845-0.118,1.865-0.039,3.088c0,0,0.032-0.406,0.136-1.021c0.834,6.854,6.667,12.165,13.743,12.165l0,0c1.86,0,3.636-0.37,5.256-1.036C24.938,27.771,27.116,25.196,28.4,22.469zM16.002,3.356c2.446,0,4.73,0.68,6.68,1.86c-2.274-0.528-3.433-0.261-3.423-0.248c0.013,0.015,3.384,0.589,3.981,1.411c0,0-1.431,0-2.856,0.41c-0.065,0.019,5.242,0.663,6.327,5.966c0,0-0.582-1.213-1.301-1.42c0.473,1.439,0.351,4.17-0.1,5.528c-0.058,0.174-0.118-0.755-1.004-1.155c0.284,2.037-0.018,5.268-1.432,6.158c-0.109,0.07,0.887-3.189,0.201-1.93c-4.093,6.276-8.959,2.539-10.934,1.208c1.585,0.388,3.267,0.108,4.242-0.559c0.982-0.672,1.564-1.162,2.087-1.047c0.522,0.117,0.87-0.407,0.464-0.872c-0.405-0.466-1.392-1.105-2.725-0.757c-0.94,0.247-2.107,1.287-3.886,0.233c-1.518-0.899-1.507-1.63-1.507-2.095c0-0.366,0.257-0.88,0.734-1.028c0.58,0.062,1.044,0.214,1.537,0.466c0.005-0.135,0.006-0.315-0.001-0.519c0.039-0.077,0.015-0.311-0.047-0.596c-0.036-0.287-0.097-0.582-0.19-0.851c0.01-0.002,0.017-0.007,0.021-0.021c0.076-0.344,2.147-1.544,2.299-1.659c0.153-0.114,0.55-0.378,0.506-1.183c-0.015-0.265-0.058-0.294-2.232-0.286c-0.917,0.003-1.425-0.894-1.589-1.245c0.222-1.231,0.863-2.11,1.919-2.704c0.02-0.011,0.015-0.021-0.008-0.027c0.219-0.127-2.524-0.006-3.76,1.604C9.674,8.045,9.219,7.95,8.71,7.95c-0.638,0-1.139,0.07-1.603,0.187c-0.05,0.013-0.122,0.011-0.208-0.001C6.769,8.04,6.575,7.88,6.365,7.672c0.161-0.18,0.324-0.356,0.495-0.526C9.201,4.804,12.43,3.357,16.002,3.356z\",\r\n        ie: \"M27.998,2.266c-2.12-1.91-6.925,0.382-9.575,1.93c-0.76-0.12-1.557-0.185-2.388-0.185c-3.349,0-6.052,0.985-8.106,2.843c-2.336,2.139-3.631,4.94-3.631,8.177c0,0.028,0.001,0.056,0.001,0.084c3.287-5.15,8.342-7.79,9.682-8.487c0.212-0.099,0.338,0.155,0.141,0.253c-0.015,0.042-0.015,0,0,0c-2.254,1.35-6.434,5.259-9.146,10.886l-0.003-0.007c-1.717,3.547-3.167,8.529-0.267,10.358c2.197,1.382,6.13-0.248,9.295-2.318c0.764,0.108,1.567,0.165,2.415,0.165c5.84,0,9.937-3.223,11.399-7.924l-8.022-0.014c-0.337,1.661-1.464,2.548-3.223,2.548c-2.21,0-3.729-1.211-3.828-4.012l15.228-0.014c0.028-0.578-0.042-0.985-0.042-1.436c0-5.251-3.143-9.355-8.255-10.663c2.081-1.294,5.974-3.209,7.848-1.681c1.407,1.14,0.633,3.533,0.295,4.518c-0.056,0.254,0.24,0.296,0.296,0.057C28.814,5.573,29.026,3.194,27.998,2.266zM13.272,25.676c-2.469,1.475-5.873,2.539-7.539,1.289c-1.243-0.935-0.696-3.468,0.398-5.938c0.664,0.992,1.495,1.886,2.473,2.63C9.926,24.651,11.479,25.324,13.272,25.676zM12.714,13.046c0.042-2.435,1.787-3.49,3.617-3.49c1.928,0,3.49,1.112,3.49,3.49H12.714z\",\r\n        ie9: \"M27.751,17.887c0.054-0.434,0.081-0.876,0.081-1.324c0-1.744-0.413-3.393-1.146-4.854c1.133-2.885,1.155-5.369-0.201-6.777c-1.756-1.822-5.391-1.406-9.433,0.721c-0.069-0.001-0.138-0.003-0.206-0.003c-6.069,0-10.988,4.888-10.988,10.917c0,0.183,0.005,0.354,0.014,0.529c-2.688,4.071-3.491,7.967-1.688,9.838c1.557,1.613,4.691,1.344,8.2-0.392c1.363,0.604,2.873,0.938,4.462,0.938c4.793,0,8.867-3.049,10.369-7.299H21.26c-0.814,1.483-2.438,2.504-4.307,2.504c-2.688,0-4.867-2.104-4.867-4.688c0-0.036,0.002-0.071,0.003-0.106h15.662V17.887zM26.337,6.099c0.903,0.937,0.806,2.684-0.087,4.818c-1.27-2.083-3.221-3.71-5.546-4.576C23.244,5.217,25.324,5.047,26.337,6.099zM16.917,10.372c2.522,0,4.585,1.991,4.748,4.509h-9.496C12.333,12.363,14.396,10.372,16.917,10.372zM5.687,26.501c-1.103-1.146-0.712-3.502,0.799-6.298c0.907,2.546,2.736,4.658,5.09,5.938C8.92,27.368,6.733,27.587,5.687,26.501z\",\r\n        opera: \"M15.954,2.046c-7.489,0-12.872,5.432-12.872,13.581c0,7.25,5.234,13.835,12.873,13.835c7.712,0,12.974-6.583,12.974-13.835C28.929,7.413,23.375,2.046,15.954,2.046zM15.952,26.548L15.952,26.548c-2.289,0-3.49-1.611-4.121-3.796c-0.284-1.037-0.458-2.185-0.563-3.341c-0.114-1.374-0.129-2.773-0.129-4.028c0-0.993,0.018-1.979,0.074-2.926c0.124-1.728,0.386-3.431,0.89-4.833c0.694-1.718,1.871-2.822,3.849-2.822c2.5,0,3.763,1.782,4.385,4.322c0.429,1.894,0.56,4.124,0.56,6.274c0,2.299-0.103,5.153-0.763,7.442C19.473,24.979,18.242,26.548,15.952,26.548z\",\r\n        chrome: \"M15.318,7.677c0.071-0.029,0.148-0.046,0.229-0.046h11.949c-2.533-3.915-6.938-6.506-11.949-6.506c-5.017,0-9.428,2.598-11.959,6.522l4.291,7.431C8.018,11.041,11.274,7.796,15.318,7.677zM28.196,8.84h-8.579c2.165,1.357,3.605,3.763,3.605,6.506c0,1.321-0.334,2.564-0.921,3.649c-0.012,0.071-0.035,0.142-0.073,0.209l-5.973,10.347c7.526-0.368,13.514-6.587,13.514-14.205C29.77,13.002,29.201,10.791,28.196,8.84zM15.547,23.022c-2.761,0-5.181-1.458-6.533-3.646c-0.058-0.046-0.109-0.103-0.149-0.171L2.89,8.855c-1,1.946-1.565,4.153-1.565,6.492c0,7.624,5.999,13.846,13.534,14.205l4.287-7.425C18.073,22.698,16.848,23.022,15.547,23.022zM9.08,15.347c0,1.788,0.723,3.401,1.894,4.573c1.172,1.172,2.785,1.895,4.573,1.895c1.788,0,3.401-0.723,4.573-1.895s1.895-2.785,1.895-4.573c0-1.788-0.723-3.4-1.895-4.573c-1.172-1.171-2.785-1.894-4.573-1.894c-1.788,0-3.401,0.723-4.573,1.894C9.803,11.946,9.081,13.559,9.08,15.347z\",\r\n        safari: \"M16.154,5.135c-0.504,0-1,0.031-1.488,0.089l-0.036-0.18c-0.021-0.104-0.06-0.198-0.112-0.283c0.381-0.308,0.625-0.778,0.625-1.306c0-0.927-0.751-1.678-1.678-1.678s-1.678,0.751-1.678,1.678c0,0.745,0.485,1.376,1.157,1.595c-0.021,0.105-0.021,0.216,0,0.328l0.033,0.167C7.645,6.95,3.712,11.804,3.712,17.578c0,6.871,5.571,12.441,12.442,12.441c6.871,0,12.441-5.57,12.441-12.441C28.596,10.706,23.025,5.135,16.154,5.135zM16.369,8.1c4.455,0,8.183,3.116,9.123,7.287l-0.576,0.234c-0.148-0.681-0.755-1.191-1.48-1.191c-0.837,0-1.516,0.679-1.516,1.516c0,0.075,0.008,0.148,0.018,0.221l-2.771-0.028c-0.054-0.115-0.114-0.226-0.182-0.333l3.399-5.11l0.055-0.083l-4.766,4.059c-0.352-0.157-0.74-0.248-1.148-0.256l0.086-0.018l-1.177-2.585c0.64-0.177,1.111-0.763,1.111-1.459c0-0.837-0.678-1.515-1.516-1.515c-0.075,0-0.147,0.007-0.219,0.018l0.058-0.634C15.357,8.141,15.858,8.1,16.369,8.1zM12.146,3.455c0-0.727,0.591-1.318,1.318-1.318c0.727,0,1.318,0.591,1.318,1.318c0,0.425-0.203,0.802-0.516,1.043c-0.183-0.123-0.413-0.176-0.647-0.13c-0.226,0.045-0.413,0.174-0.535,0.349C12.542,4.553,12.146,4.049,12.146,3.455zM7.017,17.452c0-4.443,3.098-8.163,7.252-9.116l0.297,0.573c-0.61,0.196-1.051,0.768-1.051,1.442c0,0.837,0.678,1.516,1.515,1.516c0.068,0,0.135-0.006,0.2-0.015l-0.058,2.845l0.052-0.011c-0.442,0.204-0.824,0.513-1.116,0.895l0.093-0.147l-1.574-0.603l1.172,1.239l0.026-0.042c-0.19,0.371-0.306,0.788-0.324,1.229l-0.003-0.016l-2.623,1.209c-0.199-0.604-0.767-1.041-1.438-1.041c-0.837,0-1.516,0.678-1.516,1.516c0,0.064,0.005,0.128,0.013,0.191l-0.783-0.076C7.063,18.524,7.017,17.994,7.017,17.452zM16.369,26.805c-4.429,0-8.138-3.078-9.106-7.211l0.691-0.353c0.146,0.686,0.753,1.2,1.482,1.2c0.837,0,1.515-0.679,1.515-1.516c0-0.105-0.011-0.207-0.031-0.307l2.858,0.03c0.045,0.095,0.096,0.187,0.15,0.276l-3.45,5.277l0.227-0.195l4.529-3.92c0.336,0.153,0.705,0.248,1.094,0.266l-0.019,0.004l1.226,2.627c-0.655,0.166-1.142,0.76-1.142,1.468c0,0.837,0.678,1.515,1.516,1.515c0.076,0,0.151-0.007,0.225-0.018l0.004,0.688C17.566,26.746,16.975,26.805,16.369,26.805zM18.662,26.521l-0.389-0.6c0.661-0.164,1.152-0.759,1.152-1.47c0-0.837-0.68-1.516-1.516-1.516c-0.066,0-0.13,0.005-0.193,0.014v-2.86l-0.025,0.004c0.409-0.185,0.77-0.459,1.055-0.798l1.516,0.659l-1.104-1.304c0.158-0.335,0.256-0.704,0.278-1.095l2.552-1.164c0.19,0.618,0.766,1.068,1.447,1.068c0.838,0,1.516-0.679,1.516-1.516c0-0.069-0.006-0.137-0.016-0.204l0.65,0.12c0.089,0.517,0.136,1.049,0.136,1.591C25.722,21.826,22.719,25.499,18.662,26.521z\",\r\n        linkedin: \"M27.25,3.125h-22c-1.104,0-2,0.896-2,2v22c0,1.104,0.896,2,2,2h22c1.104,0,2-0.896,2-2v-22C29.25,4.021,28.354,3.125,27.25,3.125zM11.219,26.781h-4v-14h4V26.781zM9.219,11.281c-1.383,0-2.5-1.119-2.5-2.5s1.117-2.5,2.5-2.5s2.5,1.119,2.5,2.5S10.602,11.281,9.219,11.281zM25.219,26.781h-4v-8.5c0-0.4-0.403-1.055-0.687-1.213c-0.375-0.211-1.261-0.229-1.665-0.034l-1.648,0.793v8.954h-4v-14h4v0.614c1.583-0.723,3.78-0.652,5.27,0.184c1.582,0.886,2.73,2.864,2.73,4.702V26.781z\",\r\n        flickr: \"M21.77,8.895c-2.379,0-4.479,1.174-5.77,2.969c-1.289-1.795-3.39-2.969-5.77-2.969c-3.924,0-7.105,3.181-7.105,7.105c0,3.924,3.181,7.105,7.105,7.105c2.379,0,4.48-1.175,5.77-2.97c1.29,1.795,3.391,2.97,5.77,2.97c3.925,0,7.105-3.182,7.105-7.105C28.875,12.075,25.694,8.895,21.77,8.895zM21.769,21.822c-3.211,0-5.821-2.61-5.821-5.821c0-3.213,2.61-5.824,5.821-5.824c3.213,0,5.824,2.611,5.824,5.824C27.593,19.212,24.981,21.822,21.769,21.822z\",\r\n        github: \"M28.436,15.099c-1.201-0.202-2.451-0.335-3.466-0.371l-0.179-0.006c0.041-0.09,0.072-0.151,0.082-0.16c0.022-0.018,0.04-0.094,0.042-0.168c0-0.041,0.018-0.174,0.046-0.35c0.275,0.01,0.64,0.018,1.038,0.021c1.537,0.012,3.145,0.136,4.248,0.331c0.657,0.116,0.874,0.112,0.389-0.006c-0.491-0.119-1.947-0.294-3.107-0.37c-0.779-0.053-1.896-0.073-2.554-0.062c0.019-0.114,0.041-0.241,0.064-0.371c0.093-0.503,0.124-1.009,0.126-2.016c0.002-1.562-0.082-1.992-0.591-3.025c-0.207-0.422-0.441-0.78-0.724-1.104c0.247-0.729,0.241-1.858-0.015-2.848c-0.211-0.812-0.285-0.864-1.021-0.708C22.19,4.019,21.69,4.2,21.049,4.523c-0.303,0.153-0.721,0.391-1.024,0.578c-0.79-0.278-1.607-0.462-2.479-0.561c-0.884-0.1-3.051-0.044-3.82,0.098c-0.752,0.139-1.429,0.309-2.042,0.511c-0.306-0.189-0.75-0.444-1.067-0.604C9.973,4.221,9.473,4.041,8.847,3.908c-0.734-0.157-0.81-0.104-1.02,0.708c-0.26,1.003-0.262,2.151-0.005,2.878C7.852,7.577,7.87,7.636,7.877,7.682c-1.042,1.312-1.382,2.78-1.156,4.829c0.059,0.534,0.15,1.024,0.277,1.473c-0.665-0.004-1.611,0.02-2.294,0.064c-1.162,0.077-2.618,0.25-3.109,0.369c-0.484,0.118-0.269,0.122,0.389,0.007c1.103-0.194,2.712-0.32,4.248-0.331c0.29-0.001,0.561-0.007,0.794-0.013c0.07,0.237,0.15,0.463,0.241,0.678L7.26,14.759c-1.015,0.035-2.264,0.168-3.465,0.37c-0.901,0.151-2.231,0.453-2.386,0.54c-0.163,0.091-0.03,0.071,0.668-0.106c1.273-0.322,2.928-0.569,4.978-0.741l0.229-0.02c0.44,1.022,1.118,1.802,2.076,2.41c0.586,0.373,1.525,0.756,1.998,0.816c0.13,0.016,0.508,0.094,0.84,0.172c0.333,0.078,0.984,0.195,1.446,0.262h0.011c-0.009,0.006-0.017,0.01-0.025,0.016c-0.56,0.291-0.924,0.744-1.169,1.457c-0.11,0.033-0.247,0.078-0.395,0.129c-0.529,0.18-0.735,0.217-1.271,0.221c-0.556,0.004-0.688-0.02-1.02-0.176c-0.483-0.225-0.933-0.639-1.233-1.133c-0.501-0.826-1.367-1.41-2.089-1.41c-0.617,0-0.734,0.25-0.288,0.615c0.672,0.549,1.174,1.109,1.38,1.537c0.116,0.24,0.294,0.611,0.397,0.824c0.109,0.227,0.342,0.535,0.564,0.748c0.522,0.498,1.026,0.736,1.778,0.848c0.504,0.074,0.628,0.074,1.223-0.002c0.287-0.035,0.529-0.076,0.746-0.127c0,0.244,0,0.525,0,0.855c0,1.766-0.021,2.334-0.091,2.5c-0.132,0.316-0.428,0.641-0.716,0.787c-0.287,0.146-0.376,0.307-0.255,0.455c0.067,0.08,0.196,0.094,0.629,0.066c0.822-0.051,1.403-0.355,1.699-0.891c0.095-0.172,0.117-0.518,0.147-2.318c0.032-1.953,0.046-2.141,0.173-2.42c0.077-0.166,0.188-0.346,0.25-0.395c0.104-0.086,0.111,0.084,0.111,2.42c-0.001,2.578-0.027,2.889-0.285,3.385c-0.058,0.113-0.168,0.26-0.245,0.33c-0.135,0.123-0.192,0.438-0.098,0.533c0.155,0.154,0.932-0.088,1.356-0.422c0.722-0.572,0.808-1.045,0.814-4.461l0.003-2.004l0.219,0.021l0.219,0.02l0.036,2.621c0.041,2.951,0.047,2.994,0.549,3.564c0.285,0.322,0.572,0.5,1.039,0.639c0.625,0.188,0.813-0.102,0.393-0.605c-0.457-0.547-0.479-0.756-0.454-3.994c0.017-2.076,0.017-2.076,0.151-1.955c0.282,0.256,0.336,0.676,0.336,2.623c0,2.418,0.069,2.648,0.923,3.07c0.399,0.195,0.511,0.219,1.022,0.221c0.544,0.002,0.577-0.006,0.597-0.148c0.017-0.115-0.05-0.193-0.304-0.348c-0.333-0.205-0.564-0.467-0.709-0.797c-0.055-0.127-0.092-0.959-0.117-2.672c-0.036-2.393-0.044-2.502-0.193-2.877c-0.201-0.504-0.508-0.902-0.897-1.166c-0.101-0.066-0.202-0.121-0.333-0.162c0.161-0.016,0.317-0.033,0.468-0.055c1.572-0.209,2.403-0.383,3.07-0.641c1.411-0.543,2.365-1.445,2.882-2.724c0.046-0.114,0.092-0.222,0.131-0.309l0.398,0.033c2.051,0.173,3.706,0.42,4.979,0.743c0.698,0.177,0.831,0.198,0.668,0.105C30.666,15.551,29.336,15.25,28.436,15.099zM22.422,15.068c-0.233,0.512-0.883,1.17-1.408,1.428c-0.518,0.256-1.33,0.451-2.25,0.544c-0.629,0.064-4.137,0.083-4.716,0.026c-1.917-0.188-2.991-0.557-3.783-1.296c-0.75-0.702-1.1-1.655-1.039-2.828c0.039-0.734,0.216-1.195,0.679-1.755c0.421-0.51,0.864-0.825,1.386-0.985c0.437-0.134,1.778-0.146,3.581-0.03c0.797,0.051,1.456,0.051,2.252,0c1.886-0.119,3.145-0.106,3.61,0.038c0.731,0.226,1.397,0.834,1.797,1.644c0.18,0.362,0.215,0.516,0.241,1.075C22.808,13.699,22.675,14.517,22.422,15.068zM12.912,11.762c-1.073-0.188-1.686,1.649-0.863,2.587c0.391,0.445,0.738,0.518,1.172,0.248c0.402-0.251,0.62-0.72,0.62-1.328C13.841,12.458,13.472,11.862,12.912,11.762zM19.425,11.872c-1.073-0.188-1.687,1.647-0.864,2.586c0.392,0.445,0.738,0.519,1.173,0.247c0.401-0.25,0.62-0.72,0.62-1.328C20.354,12.569,19.985,11.971,19.425,11.872zM16.539,15.484c-0.023,0.074-0.135,0.184-0.248,0.243c-0.286,0.147-0.492,0.096-0.794-0.179c-0.187-0.169-0.272-0.258-0.329-0.081c-0.053,0.164,0.28,0.493,0.537,0.594c0.236,0.094,0.405,0.097,0.661-0.01c0.254-0.106,0.476-0.391,0.476-0.576C16.842,15.303,16.595,15.311,16.539,15.484zM16.222,14.909c0.163-0.144,0.2-0.44,0.044-0.597s-0.473-0.133-0.597,0.043c-0.144,0.206-0.067,0.363,0.036,0.53C15.865,15.009,16.08,15.034,16.222,14.909z\",\r\n        githubalt: \"M23.356,17.485c-0.004,0.007-0.007,0.013-0.01,0.021l0.162,0.005c0.107,0.004,0.218,0.01,0.33,0.016c-0.046-0.004-0.09-0.009-0.136-0.013L23.356,17.485zM15.5,1.249C7.629,1.25,1.25,7.629,1.249,15.5C1.25,23.371,7.629,29.75,15.5,29.751c7.871-0.001,14.25-6.38,14.251-14.251C29.75,7.629,23.371,1.25,15.5,1.249zM3.771,17.093c0.849-0.092,1.833-0.148,2.791-0.156c0.262,0,0.507-0.006,0.717-0.012c0.063,0.213,0.136,0.419,0.219,0.613H7.492c-0.918,0.031-2.047,0.152-3.134,0.335c-0.138,0.023-0.288,0.051-0.441,0.08C3.857,17.67,3.81,17.383,3.771,17.093zM12.196,22.224c-0.1,0.028-0.224,0.07-0.357,0.117c-0.479,0.169-0.665,0.206-1.15,0.206c-0.502,0.015-0.621-0.019-0.921-0.17C9.33,22.171,8.923,21.8,8.651,21.353c-0.453-0.746-1.236-1.275-1.889-1.275c-0.559,0-0.664,0.227-0.261,0.557c0.608,0.496,1.062,0.998,1.248,1.385c0.105,0.215,0.266,0.546,0.358,0.744c0.099,0.206,0.311,0.474,0.511,0.676c0.472,0.441,0.928,0.659,1.608,0.772c0.455,0.06,0.567,0.06,1.105-0.004c0.26-0.03,0.479-0.067,0.675-0.118v0.771c0,1.049-0.008,1.628-0.031,1.945c-1.852-0.576-3.507-1.595-4.848-2.934c-1.576-1.578-2.706-3.592-3.195-5.848c0.952-0.176,2.073-0.32,3.373-0.43l0.208-0.018c0.398,0.925,1.011,1.631,1.876,2.179c0.53,0.337,1.38,0.685,1.808,0.733c0.118,0.02,0.46,0.09,0.76,0.16c0.302,0.066,0.89,0.172,1.309,0.236h0.009c-0.007,0.018-0.014,0.02-0.022,0.02C12.747,21.169,12.418,21.579,12.196,22.224zM13.732,27.207c-0.168-0.025-0.335-0.056-0.5-0.087c0.024-0.286,0.038-0.785,0.054-1.723c0.028-1.767,0.041-1.94,0.156-2.189c0.069-0.15,0.17-0.32,0.226-0.357c0.095-0.078,0.101,0.076,0.101,2.188C13.769,26.143,13.763,26.786,13.732,27.207zM15.5,27.339c-0.148,0-0.296-0.006-0.443-0.012c0.086-0.562,0.104-1.428,0.106-2.871l0.003-1.82l0.197,0.019l0.199,0.02l0.032,2.365c0.017,1.21,0.027,1.878,0.075,2.296C15.613,27.335,15.558,27.339,15.5,27.339zM17.006,27.24c-0.039-0.485-0.037-1.243-0.027-2.553c0.019-1.866,0.019-1.866,0.131-1.769c0.246,0.246,0.305,0.623,0.305,2.373c0,0.928,0.011,1.497,0.082,1.876C17.334,27.196,17.17,27.22,17.006,27.24zM27.089,17.927c-0.155-0.029-0.307-0.057-0.446-0.08c-0.96-0.162-1.953-0.275-2.804-0.32c1.25,0.108,2.327,0.248,3.246,0.418c-0.479,2.289-1.618,4.33-3.214,5.928c-1.402,1.4-3.15,2.448-5.106,3.008c-0.034-0.335-0.058-1.048-0.066-2.212c-0.03-2.167-0.039-2.263-0.17-2.602c-0.181-0.458-0.47-0.811-0.811-1.055c-0.094-0.057-0.181-0.103-0.301-0.14c0.145-0.02,0.282-0.021,0.427-0.057c1.418-0.188,2.168-0.357,2.772-0.584c1.263-0.492,2.129-1.301,2.606-2.468c0.044-0.103,0.088-0.2,0.123-0.279l0.011,0.001c0.032-0.07,0.057-0.118,0.064-0.125c0.02-0.017,0.036-0.085,0.038-0.151c0-0.037,0.017-0.157,0.041-0.317c0.249,0.01,0.58,0.018,0.938,0.02c0.959,0.008,1.945,0.064,2.794,0.156C27.194,17.356,27.148,17.644,27.089,17.927zM25.823,16.87c-0.697-0.049-1.715-0.064-2.311-0.057c0.02-0.103,0.037-0.218,0.059-0.336c0.083-0.454,0.111-0.912,0.113-1.823c0.002-1.413-0.074-1.801-0.534-2.735c-0.188-0.381-0.399-0.705-0.655-0.998c0.225-0.659,0.207-1.68-0.02-2.575c-0.19-0.734-0.258-0.781-0.924-0.64c-0.563,0.12-1.016,0.283-1.598,0.576c-0.274,0.138-0.652,0.354-0.923,0.522c-0.715-0.251-1.451-0.419-2.242-0.508c-0.799-0.092-2.759-0.04-3.454,0.089c-0.681,0.126-1.293,0.28-1.848,0.462c-0.276-0.171-0.678-0.4-0.964-0.547C9.944,8.008,9.491,7.846,8.925,7.727c-0.664-0.144-0.732-0.095-0.922,0.64c-0.235,0.907-0.237,1.945-0.004,2.603c0.026,0.075,0.043,0.129,0.05,0.17c-0.942,1.187-1.25,2.515-1.046,4.367c0.053,0.482,0.136,0.926,0.251,1.333c-0.602-0.004-1.457,0.018-2.074,0.057c-0.454,0.031-0.957,0.076-1.418,0.129c-0.063-0.5-0.101-1.008-0.101-1.524c0-3.273,1.323-6.225,3.468-8.372c2.146-2.144,5.099-3.467,8.371-3.467c3.273,0,6.226,1.323,8.371,3.467c2.145,2.147,3.468,5.099,3.468,8.372c0,0.508-0.036,1.008-0.098,1.499C26.78,16.946,26.276,16.899,25.823,16.87z\",\r\n        raphael: \"M27.777,18.941c0.584-0.881,0.896-1.914,0.896-2.998c0-1.457-0.567-2.826-1.598-3.854l-6.91-6.911l-0.003,0.002c-0.985-0.988-2.35-1.6-3.851-1.6c-1.502,0-2.864,0.612-3.85,1.6H12.46l-6.911,6.911c-1.031,1.029-1.598,2.398-1.598,3.854c0,1.457,0.567,2.826,1.598,3.854l6.231,6.229c0.25,0.281,0.512,0.544,0.789,0.785c1.016,0.961,2.338,1.49,3.743,1.49c1.456,0,2.825-0.565,3.854-1.598l6.723-6.725c0.021-0.019,0.034-0.032,0.051-0.051l0.14-0.138c0.26-0.26,0.487-0.54,0.688-0.838c0.004-0.008,0.01-0.015,0.014-0.021L27.777,18.941zM26.658,15.946c0,0.678-0.197,1.326-0.561,1.879c-0.222,0.298-0.447,0.559-0.684,0.784L25.4,18.625c-1.105,1.052-2.354,1.35-3.414,1.35c-0.584,0-1.109-0.09-1.523-0.195c-2.422-0.608-5.056-2.692-6.261-5.732c0.649,0.274,1.362,0.426,2.11,0.426c2.811,0,5.129-2.141,5.415-4.877l3.924,3.925C26.301,14.167,26.658,15.029,26.658,15.946zM16.312,5.6c1.89,0,3.426,1.538,3.426,3.427c0,1.89-1.536,3.427-3.426,3.427c-1.889,0-3.426-1.537-3.426-3.427C12.886,7.138,14.423,5.6,16.312,5.6zM6.974,18.375c-0.649-0.648-1.007-1.512-1.007-2.429c0-0.917,0.357-1.78,1.007-2.428l2.655-2.656c-0.693,2.359-0.991,4.842-0.831,7.221c0.057,0.854,0.175,1.677,0.345,2.46L6.974,18.375zM11.514,11.592c0.583,4.562,4.195,9.066,8.455,10.143c0.693,0.179,1.375,0.265,2.033,0.265c0.01,0,0.02,0,0.027,0l-3.289,3.289c-0.648,0.646-1.512,1.006-2.428,1.006c-0.638,0-1.248-0.177-1.779-0.5l0.001-0.002c-0.209-0.142-0.408-0.295-0.603-0.461c-0.015-0.019-0.031-0.026-0.046-0.043l-0.665-0.664c-1.367-1.567-2.227-3.903-2.412-6.671C10.669,15.856,10.921,13.673,11.514,11.592z\",\r\n        graphael: \"M28.833,15.709c0-1.477-0.574-2.862-1.617-3.904l-7.002-7.001l-0.003,0.002c-1.027-1.03-2.445-1.62-3.9-1.62c-1.455,0-2.871,0.59-3.9,1.621l-0.002-0.002l-7,7C4.376,12.836,3.79,14.25,3.79,15.709s0.586,2.873,1.619,3.902l6.312,6.312c0.253,0.285,0.519,0.556,0.8,0.8c1.049,0.989,2.463,1.534,3.908,1.51c1.417-0.021,2.783-0.604,3.785-1.604l6.812-6.812c0.021-0.021,0.035-0.029,0.062-0.062l0.143-0.146c0.271-0.271,0.484-0.562,0.725-0.86l-0.012-0.002C28.516,17.85,28.833,16.805,28.833,15.709zM18.77,25.17c-1.121,1.119-2.917,1.336-4.271,0.514l0.002-0.002c-0.213-0.145-0.414-0.303-0.61-0.471c-0.016-0.016-7.04-7.041-7.04-7.041c-1.34-1.34-1.342-3.584,0-4.92l7-6.998c1.121-1.121,2.908-1.338,4.259-0.512v0.002c0.213,0.141,0.414,0.299,0.604,0.467c0.021,0.016,7.053,7.043,7.053,7.043c0.396,0.388,0.655,0.852,0.818,1.348l-2.607,0.006c-0.537-3.754-3.769-6.641-7.667-6.641c-4.277,0-7.744,3.468-7.745,7.746c0.001,4.277,3.468,7.744,7.745,7.744c3.917,0,7.156-2.91,7.668-6.688l2.638-0.021c-0.16,0.521-0.441,1.02-0.849,1.412L18.77,25.17zM16.312,16.789c0.002,0,0.002,0,0.004,0l5.476-0.02c-0.5,2.562-2.76,4.518-5.48,4.521c-3.084-0.004-5.578-2.5-5.584-5.582c0.006-3.084,2.5-5.58,5.584-5.584c2.708,0.004,4.959,1.929,5.472,4.484l-5.476,0.018c-0.596,0.002-1.078,0.488-1.076,1.084C15.233,16.308,15.715,16.789,16.312,16.789z\",\r\n        svg: \"M31.274,15.989c0-2.473-2.005-4.478-4.478-4.478l0,0c0.81-0.811,1.312-1.93,1.312-3.167c0-2.474-2.005-4.479-4.479-4.479c-1.236,0-2.356,0.501-3.167,1.312c0-2.473-2.005-4.478-4.478-4.478c-2.474,0-4.479,2.005-4.479,4.478c-0.811-0.81-1.93-1.312-3.167-1.312c-2.474,0-4.479,2.005-4.479,4.479c0,1.236,0.501,2.356,1.312,3.166c-2.474,0-4.479,2.005-4.479,4.479c0,2.474,2.005,4.479,4.479,4.479c-0.811,0.81-1.312,1.93-1.312,3.167c0,2.473,2.005,4.478,4.479,4.478c1.236,0,2.356-0.501,3.167-1.312c0,2.473,2.005,4.479,4.479,4.479c2.473,0,4.478-2.006,4.478-4.479l0,0c0.811,0.811,1.931,1.312,3.167,1.312c2.474,0,4.478-2.005,4.478-4.478c0-1.237-0.501-2.357-1.312-3.168c0.001,0,0.001,0,0.001,0C29.27,20.467,31.274,18.463,31.274,15.989zM23.583,21.211c0.016,0,0.031-0.001,0.047-0.001c1.339,0,2.424,1.085,2.424,2.425c0,1.338-1.085,2.424-2.424,2.424s-2.424-1.086-2.424-2.424c0-0.017,0.001-0.031,0.001-0.047l-3.541-3.542v5.009c0.457,0.44,0.743,1.06,0.743,1.746c0,1.339-1.086,2.424-2.424,2.424c-1.339,0-2.425-1.085-2.425-2.424c0-0.687,0.286-1.306,0.743-1.746v-5.009l-3.541,3.542c0,0.016,0.001,0.031,0.001,0.047c0,1.338-1.085,2.424-2.424,2.424s-2.424-1.086-2.424-2.424c0-1.34,1.085-2.425,2.424-2.425c0.015,0,0.031,0.001,0.046,0.001l3.542-3.541H6.919c-0.44,0.458-1.06,0.743-1.746,0.743c-1.339,0-2.424-1.085-2.424-2.424s1.085-2.424,2.424-2.424c0.686,0,1.305,0.285,1.746,0.744h5.008l-3.542-3.542c-0.015,0-0.031,0.001-0.046,0.001c-1.339,0-2.424-1.085-2.424-2.424S7.001,5.92,8.34,5.92s2.424,1.085,2.424,2.424c0,0.015-0.001,0.031-0.001,0.046l3.541,3.542V6.924c-0.457-0.441-0.743-1.06-0.743-1.746c0-1.339,1.086-2.425,2.425-2.425c1.338,0,2.424,1.085,2.424,2.425c0,0.686-0.286,1.305-0.743,1.746v5.008l3.541-3.542c0-0.015-0.001-0.031-0.001-0.046c0-1.339,1.085-2.424,2.424-2.424s2.424,1.085,2.424,2.424c0,1.339-1.085,2.424-2.424,2.424c-0.016,0-0.031-0.001-0.047-0.001l-3.541,3.542h5.008c0.441-0.458,1.061-0.744,1.747-0.744c1.338,0,2.423,1.085,2.423,2.424s-1.085,2.424-2.423,2.424c-0.687,0-1.306-0.285-1.747-0.743h-5.008L23.583,21.211z\",\r\n        usb: \"M15.5,1.667L13.745,4.74h1.252v15.709L11.8,17.391c-0.205-0.26-0.351-0.601-0.358-0.952c0-1.417-0.001-2.258-0.001-2.568c0.592-0.21,1.02-0.774,1.02-1.444c0-0.849-0.682-1.538-1.521-1.538c-0.84,0-1.521,0.689-1.521,1.538c0,0.67,0.427,1.234,1.019,1.444l-0.001,2.539c0,0.688,0.373,1.409,0.812,1.868c-0.013-0.013-0.027-0.025,0,0c0.011,0.01,3.392,3.245,3.392,3.245c0.205,0.26,0.35,0.6,0.357,0.951v1.776c-1.161,0.236-2.036,1.272-2.036,2.517c0,1.418,1.137,2.566,2.539,2.566c1.403,0,2.54-1.148,2.54-2.566c0-1.244-0.875-2.28-2.038-2.517v-1.746c0-0.005,0-0.009,0-0.014v-3.861c0.008-0.35,0.152-0.689,0.358-0.949c0,0,3.38-3.234,3.392-3.245c0.027-0.026,0.012-0.013,0,0c0.438-0.459,0.811-1.181,0.811-1.869V10.12h1.02V7.046h-3.041v3.075h1.018c0,0-0.002,0.644-0.002,2.476c-0.008,0.351-0.152,0.692-0.357,0.952l-3.198,3.06V4.74h1.254L15.5,1.667z\",\r\n        ethernet: \"M22.5,8.5v3.168l3.832,3.832L22.5,19.332V22.5l7-7L22.5,8.5zM8.5,22.5v-3.168L4.667,15.5L8.5,11.668V8.5l-7,7L8.5,22.5zM15.5,14.101c-0.928,0-1.68,0.751-1.68,1.68c0,0.927,0.752,1.681,1.68,1.681c0.927,0,1.68-0.754,1.68-1.681C17.18,14.852,16.427,14.101,15.5,14.101zM10.46,14.101c-0.928,0-1.68,0.751-1.68,1.68c0,0.927,0.752,1.681,1.68,1.681s1.68-0.754,1.68-1.681C12.14,14.852,11.388,14.101,10.46,14.101zM20.541,14.101c-0.928,0-1.682,0.751-1.682,1.68c0,0.927,0.754,1.681,1.682,1.681s1.68-0.754,1.68-1.681C22.221,14.852,21.469,14.101,20.541,14.101z\",\r\n\t\tjs: \"M1,1v30h30V1H1zM17.326,24.398c0,2.92-1.712,4.248-4.209,4.248c-2.255,0-3.564-1.168-4.229-2.576l0,0l0,0l0,0l2.296-1.391c0.443,0.777,0.846,1.442,1.812,1.442c0.926,0,1.511-0.354,1.511-1.771V14.77h2.819V24.398zM23.992,28.646c-2.618,0-4.311-1.248-5.135-2.879l2.295-1.328c0.604,0.979,1.39,1.711,2.779,1.711c1.168,0,1.904-0.584,1.904-1.396c0-0.966-0.766-1.311-2.054-1.865L23.08,22.58c-2.034-0.865-3.383-1.953-3.383-4.249c0-2.114,1.604-3.726,4.128-3.726c1.792,0,3.081,0.625,4.008,2.254l-2.19,1.406c-0.479-0.861-1.006-1.209-1.812-1.209c-0.825,0-1.353,0.521-1.353,1.209c0,0.852,0.521,1.188,1.729,1.711l0.704,0.309c2.396,1.021,3.746,2.07,3.746,4.43C28.664,27.259,26.671,28.646,23.992,28.646z\",\r\n\t\tdribbble: \"M16,1.667C8.084,1.667,1.667,8.084,1.667,16S8.084,30.333,16,30.333S30.333,23.916,30.333,16S23.916,1.667,16,1.667zM25.534,8.232c1.7,2.084,2.731,4.732,2.767,7.618c-3.232-0.656-6.14-0.783-8.777-0.38c-0.362-0.825-0.738-1.631-1.125-2.412C22.43,11.542,24.497,9.781,25.534,8.232zM23.955,6.624c-0.877,1.658-3.191,3.232-6.564,4.476c-1.533-2.86-3.115-5.299-4.388-7.033c0.96-0.241,1.964-0.37,2.997-0.37C19.031,3.696,21.809,4.8,23.955,6.624zM10.846,4.831c1.09,1.441,2.751,3.91,4.415,6.967c-3.687,1.073-8.032,1.677-11.282,1.585C4.806,9.581,7.395,6.431,10.846,4.831zM3.696,16c0-0.147,0.006-0.293,0.011-0.439c0.312,0.013,0.632,0.019,0.96,0.019c3.464,0,7.754-0.646,11.484-1.765c0.048-0.015,0.093-0.029,0.14-0.044c0.354,0.704,0.697,1.431,1.033,2.175c-0.516,0.146-1.022,0.314-1.518,0.507c-3.547,1.375-6.512,3.895-9.031,7.678C4.861,21.96,3.696,19.114,3.696,16zM8.388,25.656c2.31-3.574,5.002-5.924,8.209-7.167c0.516-0.2,1.049-0.369,1.594-0.513c1.205,2.996,2.166,6.205,2.559,9.373c-1.462,0.613-3.066,0.953-4.749,0.953C13.128,28.305,10.484,27.312,8.388,25.656zM22.802,26.246c-0.446-2.939-1.321-5.895-2.413-8.686c2.316-0.279,4.881-0.117,7.742,0.485C27.557,21.46,25.574,24.398,22.802,26.246z\",\r\n\t\t\"500px\": \"M24.902,13.033c-2.57,0-4.65,2.998-4.65,2.998s-2.141-2.998-4.772-2.998c-2.63,0-3.793,2.691-3.793,2.691s-1.04-2.141-3.365-2.141c-2.095,0-2.351,0.842-2.381,1.009l0.424-2.783h5.077v-2.08H4.529l-1.392,6.865l2.432,0.049c0,0,0.917-1.346,1.896-1.346s1.958,0.917,1.958,2.264c0,1.348-1.04,2.555-2.019,2.555s-1.958-1.023-1.958-1.76H3v0.308c0,2.08,1.835,3.608,4.344,3.608c2.508,0,4.343-1.896,4.343-2.691c0,0,0.795,2.691,3.916,2.691c3.122,0,4.588-2.691,4.588-2.691s2.142,2.691,4.711,2.691c2.568,0,4.099-2.143,4.099-4.771C29,14.868,27.104,13.033,24.902,13.033zM15.511,19.578c-1.285,0-1.958-1.284-1.958-1.957s0.428-1.958,1.896-1.958c1.469,0,2.998,1.958,2.998,1.958S16.795,19.578,15.511,19.578zM24.779,19.578c-1.285,0-2.938-1.957-2.938-1.957s1.531-1.958,2.998-1.958c1.47,0,1.896,1.285,1.896,1.958S26.064,19.578,24.779,19.578z\",\r\n\t\tinstagram: \"M16,9.904c-3.366,0-6.096,2.729-6.096,6.096c0,3.366,2.729,6.096,6.096,6.096s6.096-2.729,6.096-6.096S19.366,9.904,16,9.904zM16,20.48c-2.475,0-4.48-2.006-4.48-4.48c0-2.474,2.006-4.48,4.48-4.48c2.475,0,4.48,2.006,4.48,4.48C20.48,18.475,18.475,20.48,16,20.48zM24.576,2.321H7.423c-2.848,0-5.156,2.309-5.156,5.157v17.043c0,2.849,2.309,5.155,5.156,5.155h17.153c2.849,0,5.156-2.309,5.156-5.155V7.479C29.732,4.63,27.425,2.321,24.576,2.321zM22.236,5.394c0-0.605,0.49-1.097,1.097-1.097h3.219c0.605,0,1.097,0.491,1.097,1.097v3.219c0,0.605-0.489,1.097-1.097,1.097h-3.219c-0.604,0-1.097-0.491-1.097-1.097V5.394zM28.637,24.521c0,2.237-1.82,4.06-4.061,4.06H7.423c-2.238,0-4.06-1.82-4.06-4.06V10.879H4.19c0.102-0.5,0.544-0.877,1.075-0.877h3.438c0.53,0,0.974,0.377,1.074,0.877h1.498c1.242-1.146,2.9-1.847,4.724-1.847s3.481,0.701,4.724,1.847h7.912v13.643H28.637L28.637,24.521z\",\r\n\t\tandroid: \"M6.13,11.126c-0.894,0-1.624,0.731-1.624,1.624v6.496c0,0.895,0.73,1.624,1.624,1.624c0.893,0,1.624-0.729,1.624-1.624V12.75C7.754,11.856,7.023,11.126,6.13,11.126zM19.516,4.96l1.32-2.035c0.074-0.113,0.042-0.264-0.07-0.338c-0.113-0.074-0.266-0.041-0.34,0.072l-1.367,2.106c-0.93-0.36-1.966-0.561-3.059-0.561c-1.094,0-2.13,0.201-3.058,0.561l-1.368-2.106c-0.073-0.113-0.225-0.145-0.338-0.072c-0.113,0.074-0.145,0.225-0.072,0.338l1.321,2.035c-2.186,1.009-3.674,2.928-3.717,5.138h14.464C23.189,7.888,21.702,5.969,19.516,4.96zM12.898,8.062c-0.459,0-0.832-0.373-0.832-0.832s0.373-0.832,0.832-0.832c0.46,0,0.832,0.373,0.832,0.832S13.358,8.062,12.898,8.062zM19.102,8.062c-0.459,0-0.832-0.373-0.832-0.832s0.373-0.832,0.832-0.832s0.832,0.373,0.832,0.832S19.561,8.062,19.102,8.062zM25.87,11.126c-0.894,0-1.624,0.731-1.624,1.624v6.496c0,0.895,0.73,1.624,1.624,1.624s1.624-0.729,1.624-1.624V12.75C27.494,11.856,26.764,11.126,25.87,11.126zM8.756,22.904c0,0.723,0.591,1.312,1.314,1.312h1.363v3.61c0,0.896,0.731,1.624,1.625,1.624c0.893,0,1.624-0.729,1.624-1.624v-3.611h2.636v3.61c0,0.896,0.729,1.624,1.625,1.624c0.894,0,1.623-0.729,1.623-1.624v-3.61h1.363c0.723,0,1.312-0.591,1.312-1.312V11.07H8.756V22.904z\",\r\n\t\tiOS: \"M4.065,21.797h2.236v-8.784H4.065V21.797zM5.184,9.352c-0.739,0-1.245,0.523-1.245,1.208c0,0.667,0.487,1.19,1.227,1.19c0.775,0,1.263-0.523,1.263-1.19C6.41,9.875,5.941,9.352,5.184,9.352zM13.915,9.442c-3.427,0-5.771,2.633-5.771,6.367c0,3.571,2.164,6.186,5.591,6.186c3.355,0,5.826-2.326,5.826-6.402C19.561,12.13,17.468,9.442,13.915,9.442zM13.86,20.21c-2.128,0-3.373-1.966-3.373-4.437c0-2.507,1.172-4.545,3.373-4.545c2.218,0,3.354,2.164,3.354,4.455C17.215,18.227,16.007,20.21,13.86,20.21zM25.695,14.727c-1.622-0.631-2.326-1.064-2.326-2.002c0-0.703,0.613-1.461,2.021-1.461c1.137,0,1.979,0.343,2.416,0.577l0.541-1.785c-0.643-0.325-1.604-0.613-2.933-0.613c-2.633,0-4.293,1.515-4.293,3.499c0,1.75,1.278,2.813,3.282,3.535c1.552,0.559,2.162,1.1,2.162,2.02c0,0.992-0.797,1.659-2.227,1.659c-1.137,0-2.219-0.36-2.938-0.775l-0.484,1.84c0.668,0.396,2.002,0.758,3.28,0.758c3.14,0,4.616-1.688,4.616-3.644C28.835,16.585,27.807,15.521,25.695,14.727z\",\r\n\t\thp: \"M29.936,14.968c-0.178-2.385-0.967-4.726-2.301-6.714c-1.307-1.954-3.107-3.585-5.203-4.657c-1.617-0.853-3.414-1.353-5.229-1.514c-0.412-0.087-0.824,0.006-1.238,0.009c-0.981,2.81-2,5.606-2.989,8.413c0.72,0.013,1.439-0.011,2.158,0.011c0.525,0.021,1.076,0.241,1.366,0.701c0.333,0.519,0.312,1.185,0.104,1.748c-0.978,2.751-1.958,5.5-2.938,8.253c-0.863,0.013-1.727-0.001-2.59,0.007c-0.121-0.002-0.245,0.012-0.36-0.033c1.096-3.021,2.167-6.06,3.249-9.083c-0.516-0.008-1.031,0.003-1.546-0.006c-0.08,0.165-0.136,0.339-0.195,0.513C11.23,15.41,10.227,18.204,9.237,21c-0.047,0.066-0.035,0.229-0.147,0.229c-0.822,0.004-1.645-0.004-2.467,0.002c-0.148-0.002-0.299,0.021-0.443-0.021c2.255-6.256,4.46-12.532,6.716-18.789c-4.407,0.943-8.2,4.242-9.838,8.431c-0.672,1.659-0.965,3.45-1.002,5.233c0.046,0.854,0.106,1.715,0.273,2.562c0.53,2.812,1.964,5.438,4.028,7.408c1.713,1.655,3.863,2.854,6.17,3.452c2.247-6.276,4.479-12.562,6.717-18.851c0.021-0.045,0.064-0.137,0.09-0.183c1.381,0.014,2.766,0.002,4.146,0.006c0.453,0.008,0.918-0.042,1.354,0.095c0.506,0.137,0.979,0.502,1.141,1.018c0.109,0.407,0.029,0.841-0.105,1.229c-0.887,2.574-1.812,5.125-2.729,7.695c-0.229,0.67-0.904,1.09-1.599,1.107c-1.076,0.021-2.147-0.012-3.229,0.014c-0.983,2.762-1.962,5.521-2.945,8.272c0.256,0.104,0.528,0.021,0.794,0.036c0.399,0.027,0.802-0.043,1.198-0.065c2.625-0.239,5.173-1.26,7.242-2.885c1.664-1.304,3.024-2.979,3.953-4.875c0.812-1.64,1.269-3.438,1.396-5.244C29.889,16.234,29.906,15.599,29.936,14.968zM20.422,20.031c0.916-2.659,1.889-5.297,2.818-7.951c-0.398-0.008-0.799,0.002-1.197-0.005c-0.115,0.017-0.268-0.042-0.354,0.055c-0.943,2.636-1.879,5.276-2.822,7.912C19.385,20.045,19.906,20.066,20.422,20.031z\",\r\n\t\tgplus: \"M9.208,22.73c-0.292-0.396-0.552-0.795-0.779-1.23c-0.267-0.423-0.399-0.934-0.399-1.527c0-0.354,0.05-0.654,0.152-0.893c0.089-0.251,0.171-0.482,0.248-0.693c-0.459,0.053-0.893,0.078-1.3,0.078c-1.927-0.023-3.444-0.568-4.55-1.636v7.21c0.989-0.453,2.013-0.771,3.073-0.955C7.078,22.874,8.264,22.756,9.208,22.73zM10.311,23.872c-0.257-0.026-0.56-0.039-0.908-0.039c-0.207-0.026-0.734,0-1.584,0.079c-0.837,0.117-1.693,0.309-2.568,0.57c-0.206,0.08-0.496,0.197-0.869,0.354c-0.374,0.171-0.753,0.414-1.139,0.729c-0.247,0.229-0.468,0.479-0.664,0.771v1.104c0,1.026,0.838,1.865,1.869,1.865h10.188c0-0.021,0.002-0.051,0.002-0.068c0-1.021-0.335-1.922-1.004-2.688C12.924,25.812,11.817,24.925,10.311,23.872zM6.751,16.594c0.656,0.514,1.404,0.771,2.247,0.771c1.065-0.039,1.952-0.422,2.662-1.146c0.342-0.514,0.562-1.041,0.66-1.581c0.059-0.54,0.088-0.995,0.088-1.364c0-1.594-0.408-3.202-1.224-4.822c-0.382-0.777-0.886-1.41-1.51-1.897C9.037,6.094,8.304,5.85,7.476,5.824C6.38,5.848,5.468,6.289,4.742,7.146C4.129,8.042,3.837,9.043,3.863,10.15c0,1.463,0.428,2.985,1.284,4.566C5.562,15.453,6.097,16.079,6.751,16.594zM27.553,2.707H4.447c-1.031,0-1.869,0.838-1.869,1.869v2.507c0.118-0.125,0.24-0.25,0.367-0.372c1.15-0.947,2.345-1.565,3.584-1.855c1.227-0.25,2.376-0.375,3.45-0.375h8.087l-2.5,1.458h-2.494c0.254,0.158,0.54,0.388,0.857,0.69c0.304,0.315,0.603,0.703,0.895,1.164c0.279,0.434,0.527,0.946,0.743,1.538c0.177,0.592,0.267,1.282,0.267,2.071c-0.024,1.447-0.343,2.604-0.958,3.472c-0.302,0.421-0.621,0.809-0.958,1.164c-0.374,0.354-0.771,0.718-1.193,1.085c-0.241,0.25-0.464,0.533-0.669,0.848c-0.241,0.329-0.361,0.711-0.361,1.146c0,0.421,0.124,0.769,0.371,1.046c0.21,0.264,0.414,0.493,0.612,0.688l1.372,1.125c0.853,0.688,1.6,1.467,2.243,2.31c0.604,0.854,0.921,1.972,0.943,3.354c0,0.562-0.071,1.106-0.223,1.646H27.54c1.03,0,1.869-0.838,1.869-1.87V4.576C29.422,3.545,28.584,2.707,27.553,2.707zM29.023,10.953h-4.244v4.244h-2.057v-4.244H18.48V8.897h4.242V4.654h2.057v4.243h4.244V10.953z\",\r\n\t\tfacebook: \"M25.566,2.433H6.433c-2.2,0-4,1.8-4,4v19.135c0,2.199,1.8,4,4,4h19.135c2.199,0,4-1.801,4-4V6.433C29.566,4.232,27.768,2.433,25.566,2.433zM25.309,16.916h-3.218v11.65h-4.819v-11.65h-2.409V12.9h2.409v-2.411c0-3.275,1.359-5.224,5.229-5.224h3.218v4.016h-2.011c-1.504,0-1.604,0.562-1.604,1.608L22.091,12.9h3.644L25.309,16.916z\",\r\n\t\tfitocracy: \"M16,10.001c1.93,0,3.5-1.57,3.5-3.5C19.5,4.57,17.93,3,16,3c-1.93,0-3.5,1.57-3.5,3.501C12.5,8.431,14.07,10.001,16,10.001zM23.884,7.772c0,0-2.067-1.923-2.521-0.05c-0.59,2.442-2.745,4.279-5.363,4.279s-4.774-1.837-5.364-4.279c-0.452-1.873-2.52,0.05-2.52,0.05c-2.569,2.213-4.199,5.486-4.199,9.145C3.917,23.59,9.326,29,16,29s12.083-5.41,12.083-12.083C28.083,13.259,26.453,9.986,23.884,7.772zM14.96,16.274l0.807-1.635l0.807,1.635l1.805,0.263l-1.306,1.271l0.309,1.797l-1.614-0.854l-1.614,0.854l0.309-1.797l-1.306-1.271L14.96,16.274zM7.838,21.912c-0.896-1.457-1.421-3.164-1.421-4.995c0-1.832,0.525-3.538,1.42-4.995c1.909,0.862,3.247,2.765,3.247,4.995C11.084,19.146,9.746,21.05,7.838,21.912zM16,26.5c-1.832,0-3.538-0.525-4.995-1.421c0.862-1.908,2.765-3.246,4.995-3.246c2.23,0,4.133,1.338,4.995,3.246C19.538,25.975,17.832,26.5,16,26.5zM24.162,21.912c-1.908-0.862-3.246-2.766-3.246-4.995c0-2.23,1.338-4.133,3.247-4.995c0.896,1.457,1.42,3.164,1.42,4.995S25.059,20.455,24.162,21.912z\",\r\n\t\topensource: \"M15.5,1.125c-8.222,0-14.911,6.689-14.911,14.911c0,6.262,3.88,11.634,9.362,13.839l3.639-9.076c-1.888-0.758-3.222-2.604-3.222-4.763c0-2.834,2.297-5.132,5.131-5.132s5.131,2.298,5.131,5.132c0,2.157-1.334,4.005-3.222,4.763l3.64,9.076c5.479-2.206,9.361-7.578,9.361-13.839C30.41,7.814,23.721,1.125,15.5,1.125z\"\r\n    };","// ┌────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Raphaël 2.1.2 - JavaScript Vector Library                          │ \\\\\r\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright © 2008-2012 Dmitry Baranovskiy (http://raphaeljs.com)    │ \\\\\r\n// │ Copyright © 2008-2012 Sencha Labs (http://sencha.com)              │ \\\\\r\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license.│ \\\\\r\n// └────────────────────────────────────────────────────────────────────┘ \\\\\r\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\r\n// \r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n// \r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n// \r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// ┌────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Eve 0.4.2 - JavaScript Events Library                      │ \\\\\r\n// ├────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\r\n// └────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function (glob) {\r\n    var version = \"0.4.2\",\r\n        has = \"hasOwnProperty\",\r\n        separator = /[\\.\\/]/,\r\n        wildcard = \"*\",\r\n        fun = function () {},\r\n        numsort = function (a, b) {\r\n            return a - b;\r\n        },\r\n        current_event,\r\n        stop,\r\n        events = {n: {}},\r\n    /*\\\r\n     * eve\r\n     [ method ]\r\n\r\n     * Fires event with given `name`, given scope and other parameters.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\r\n     - scope (object) context for the event handlers\r\n     - varargs (...) the rest of arguments will be sent to event handlers\r\n\r\n     = (object) array of returned values from the listeners\r\n    \\*/\r\n        eve = function (name, scope) {\r\n\t\t\tname = String(name);\r\n            var e = events,\r\n                oldstop = stop,\r\n                args = Array.prototype.slice.call(arguments, 2),\r\n                listeners = eve.listeners(name),\r\n                z = 0,\r\n                f = false,\r\n                l,\r\n                indexed = [],\r\n                queue = {},\r\n                out = [],\r\n                ce = current_event,\r\n                errors = [];\r\n            current_event = name;\r\n            stop = 0;\r\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\r\n                indexed.push(listeners[i].zIndex);\r\n                if (listeners[i].zIndex < 0) {\r\n                    queue[listeners[i].zIndex] = listeners[i];\r\n                }\r\n            }\r\n            indexed.sort(numsort);\r\n            while (indexed[z] < 0) {\r\n                l = queue[indexed[z++]];\r\n                out.push(l.apply(scope, args));\r\n                if (stop) {\r\n                    stop = oldstop;\r\n                    return out;\r\n                }\r\n            }\r\n            for (i = 0; i < ii; i++) {\r\n                l = listeners[i];\r\n                if (\"zIndex\" in l) {\r\n                    if (l.zIndex == indexed[z]) {\r\n                        out.push(l.apply(scope, args));\r\n                        if (stop) {\r\n                            break;\r\n                        }\r\n                        do {\r\n                            z++;\r\n                            l = queue[indexed[z]];\r\n                            l && out.push(l.apply(scope, args));\r\n                            if (stop) {\r\n                                break;\r\n                            }\r\n                        } while (l)\r\n                    } else {\r\n                        queue[l.zIndex] = l;\r\n                    }\r\n                } else {\r\n                    out.push(l.apply(scope, args));\r\n                    if (stop) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            stop = oldstop;\r\n            current_event = ce;\r\n            return out.length ? out : null;\r\n        };\r\n\t\t// Undocumented. Debug only.\r\n\t\teve._events = events;\r\n    /*\\\r\n     * eve.listeners\r\n     [ method ]\r\n\r\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\r\n\r\n     > Arguments\r\n\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\r\n\r\n     = (array) array of event handlers\r\n    \\*/\r\n    eve.listeners = function (name) {\r\n        var names = name.split(separator),\r\n            e = events,\r\n            item,\r\n            items,\r\n            k,\r\n            i,\r\n            ii,\r\n            j,\r\n            jj,\r\n            nes,\r\n            es = [e],\r\n            out = [];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            nes = [];\r\n            for (j = 0, jj = es.length; j < jj; j++) {\r\n                e = es[j].n;\r\n                items = [e[names[i]], e[wildcard]];\r\n                k = 2;\r\n                while (k--) {\r\n                    item = items[k];\r\n                    if (item) {\r\n                        nes.push(item);\r\n                        out = out.concat(item.f || []);\r\n                    }\r\n                }\r\n            }\r\n            es = nes;\r\n        }\r\n        return out;\r\n    };\r\n    \r\n    /*\\\r\n     * eve.on\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\r\n     | eve.on(\"*.under.*\", f);\r\n     | eve(\"mouse.under.floor\"); // triggers f\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \r\n     > Example:\r\n     | eve.on(\"mouse\", eatIt)(2);\r\n     | eve.on(\"mouse\", scream);\r\n     | eve.on(\"mouse\", catchIt)(1);\r\n     * This will ensure that `catchIt()` function will be called before `eatIt()`.\r\n\t *\r\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\r\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\r\n    \\*/\r\n    eve.on = function (name, f) {\r\n\t\tname = String(name);\r\n\t\tif (typeof f != \"function\") {\r\n\t\t\treturn function () {};\r\n\t\t}\r\n        var names = name.split(separator),\r\n            e = events;\r\n        for (var i = 0, ii = names.length; i < ii; i++) {\r\n            e = e.n;\r\n            e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\r\n        }\r\n        e.f = e.f || [];\r\n        for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\r\n            return fun;\r\n        }\r\n        e.f.push(f);\r\n        return function (zIndex) {\r\n            if (+zIndex == +zIndex) {\r\n                f.zIndex = +zIndex;\r\n            }\r\n        };\r\n    };\r\n    /*\\\r\n     * eve.f\r\n     [ method ]\r\n     **\r\n     * Returns function that will fire given event with optional arguments.\r\n\t * Arguments that will be passed to the result function will be also\r\n\t * concated to the list of final arguments.\r\n \t | el.onclick = eve.f(\"click\", 1, 2);\r\n \t | eve.on(\"click\", function (a, b, c) {\r\n \t |     console.log(a, b, c); // 1, 2, [event object]\r\n \t | });\r\n     > Arguments\r\n\t - event (string) event name\r\n\t - varargs (…) and any other arguments\r\n\t = (function) possible event handler function\r\n    \\*/\r\n\teve.f = function (event) {\r\n\t\tvar attrs = [].slice.call(arguments, 1);\r\n\t\treturn function () {\r\n\t\t\teve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\r\n\t\t};\r\n\t};\r\n    /*\\\r\n     * eve.stop\r\n     [ method ]\r\n     **\r\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\r\n    \\*/\r\n    eve.stop = function () {\r\n        stop = 1;\r\n    };\r\n    /*\\\r\n     * eve.nt\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     > Arguments\r\n     **\r\n     - subname (string) #optional subname of the event\r\n     **\r\n     = (string) name of the event, if `subname` is not specified\r\n     * or\r\n     = (boolean) `true`, if current event’s name contains `subname`\r\n    \\*/\r\n    eve.nt = function (subname) {\r\n        if (subname) {\r\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(current_event);\r\n        }\r\n        return current_event;\r\n    };\r\n    /*\\\r\n     * eve.nts\r\n     [ method ]\r\n     **\r\n     * Could be used inside event handler to figure out actual name of the event.\r\n     **\r\n     **\r\n     = (array) names of the event\r\n    \\*/\r\n    eve.nts = function () {\r\n        return current_event.split(separator);\r\n    };\r\n    /*\\\r\n     * eve.off\r\n     [ method ]\r\n     **\r\n     * Removes given function from the list of event listeners assigned to given name.\r\n\t * If no arguments specified all the events will be cleared.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n    \\*/\r\n    /*\\\r\n     * eve.unbind\r\n     [ method ]\r\n     **\r\n     * See @eve.off\r\n    \\*/\r\n    eve.off = eve.unbind = function (name, f) {\r\n\t\tif (!name) {\r\n\t\t    eve._events = events = {n: {}};\r\n\t\t\treturn;\r\n\t\t}\r\n        var names = name.split(separator),\r\n            e,\r\n            key,\r\n            splice,\r\n            i, ii, j, jj,\r\n            cur = [events];\r\n        for (i = 0, ii = names.length; i < ii; i++) {\r\n            for (j = 0; j < cur.length; j += splice.length - 2) {\r\n                splice = [j, 1];\r\n                e = cur[j].n;\r\n                if (names[i] != wildcard) {\r\n                    if (e[names[i]]) {\r\n                        splice.push(e[names[i]]);\r\n                    }\r\n                } else {\r\n                    for (key in e) if (e[has](key)) {\r\n                        splice.push(e[key]);\r\n                    }\r\n                }\r\n                cur.splice.apply(cur, splice);\r\n            }\r\n        }\r\n        for (i = 0, ii = cur.length; i < ii; i++) {\r\n            e = cur[i];\r\n            while (e.n) {\r\n                if (f) {\r\n                    if (e.f) {\r\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\r\n                            e.f.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !e.f.length && delete e.f;\r\n                    }\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        var funcs = e.n[key].f;\r\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\r\n                            funcs.splice(j, 1);\r\n                            break;\r\n                        }\r\n                        !funcs.length && delete e.n[key].f;\r\n                    }\r\n                } else {\r\n                    delete e.f;\r\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\r\n                        delete e.n[key].f;\r\n                    }\r\n                }\r\n                e = e.n;\r\n            }\r\n        }\r\n    };\r\n    /*\\\r\n     * eve.once\r\n     [ method ]\r\n     **\r\n     * Binds given event handler with a given name to only run once then unbind itself.\r\n     | eve.once(\"login\", f);\r\n     | eve(\"login\"); // triggers f\r\n     | eve(\"login\"); // no listeners\r\n     * Use @eve to trigger the listener.\r\n     **\r\n     > Arguments\r\n     **\r\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\r\n     - f (function) event handler function\r\n     **\r\n     = (function) same return function as @eve.on\r\n    \\*/\r\n    eve.once = function (name, f) {\r\n        var f2 = function () {\r\n            eve.unbind(name, f2);\r\n            return f.apply(this, arguments);\r\n        };\r\n        return eve.on(name, f2);\r\n    };\r\n    /*\\\r\n     * eve.version\r\n     [ property (string) ]\r\n     **\r\n     * Current version of the library.\r\n    \\*/\r\n    eve.version = version;\r\n    eve.toString = function () {\r\n        return \"You are running Eve \" + version;\r\n    };\r\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define != \"undefined\" ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\r\n})(window || this);\r\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ \"Raphaël 2.1.2\" - JavaScript Vector Library                         │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\r\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\r\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function (glob, factory) {\r\n    // AMD support\r\n    if (typeof define === \"function\" && define.amd) {\r\n        // Define as an anonymous module\r\n        define([\"eve\"], function( eve ) {\r\n            return factory(glob, eve);\r\n        });\r\n    } else {\r\n        // Browser globals (glob is window)\r\n        // Raphael adds itself to window\r\n        factory(glob, glob.eve);\r\n    }\r\n}(this, function (window, eve) {\r\n    /*\\\r\n     * Raphael\r\n     [ method ]\r\n     **\r\n     * Creates a canvas object on which to draw.\r\n     * You must do this first, as all future calls to drawing methods\r\n     * from this instance will be bound to this canvas.\r\n     > Parameters\r\n     **\r\n     - container (HTMLElement|string) DOM element or its ID which is going to be a parent for drawing surface\r\n     - width (number)\r\n     - height (number)\r\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\r\n     * or\r\n     - x (number)\r\n     - y (number)\r\n     - width (number)\r\n     - height (number)\r\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\r\n     * or\r\n     - all (array) (first 3 or 4 elements in the array are equal to [containerID, width, height] or [x, y, width, height]. The rest are element descriptions in format {type: type, <attributes>}). See @Paper.add.\r\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\r\n     * or\r\n     - onReadyCallback (function) function that is going to be called on DOM ready event. You can also subscribe to this event via Eve’s “DOMLoad” event. In this case method returns `undefined`.\r\n     = (object) @Paper\r\n     > Usage\r\n     | // Each of the following examples create a canvas\r\n     | // that is 320px wide by 200px high.\r\n     | // Canvas is created at the viewport’s 10,50 coordinate.\r\n     | var paper = Raphael(10, 50, 320, 200);\r\n     | // Canvas is created at the top left corner of the #notepad element\r\n     | // (or its top right corner in dir=\"rtl\" elements)\r\n     | var paper = Raphael(document.getElementById(\"notepad\"), 320, 200);\r\n     | // Same as above\r\n     | var paper = Raphael(\"notepad\", 320, 200);\r\n     | // Image dump\r\n     | var set = Raphael([\"notepad\", 320, 200, {\r\n     |     type: \"rect\",\r\n     |     x: 10,\r\n     |     y: 10,\r\n     |     width: 25,\r\n     |     height: 25,\r\n     |     stroke: \"#f00\"\r\n     | }, {\r\n     |     type: \"text\",\r\n     |     x: 30,\r\n     |     y: 40,\r\n     |     text: \"Dump\"\r\n     | }]);\r\n    \\*/\r\n    function R(first) {\r\n        if (R.is(first, \"function\")) {\r\n            return loaded ? first() : eve.on(\"raphael.DOMload\", first);\r\n        } else if (R.is(first, array)) {\r\n            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);\r\n        } else {\r\n            var args = Array.prototype.slice.call(arguments, 0);\r\n            if (R.is(args[args.length - 1], \"function\")) {\r\n                var f = args.pop();\r\n                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on(\"raphael.DOMload\", function () {\r\n                    f.call(R._engine.create[apply](R, args));\r\n                });\r\n            } else {\r\n                return R._engine.create[apply](R, arguments);\r\n            }\r\n        }\r\n    }\r\n    R.version = \"2.1.2\";\r\n    R.eve = eve;\r\n    var loaded,\r\n        separator = /[, ]+/,\r\n        elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},\r\n        formatrg = /\\{(\\d+)\\}/g,\r\n        proto = \"prototype\",\r\n        has = \"hasOwnProperty\",\r\n        g = {\r\n            doc: document,\r\n            win: window\r\n        },\r\n        oldRaphael = {\r\n            was: Object.prototype[has].call(g.win, \"Raphael\"),\r\n            is: g.win.Raphael\r\n        },\r\n        Paper = function () {\r\n            /*\\\r\n             * Paper.ca\r\n             [ property (object) ]\r\n             **\r\n             * Shortcut for @Paper.customAttributes\r\n            \\*/\r\n            /*\\\r\n             * Paper.customAttributes\r\n             [ property (object) ]\r\n             **\r\n             * If you have a set of attributes that you would like to represent\r\n             * as a function of some number you can do it easily with custom attributes:\r\n             > Usage\r\n             | paper.customAttributes.hue = function (num) {\r\n             |     num = num % 1;\r\n             |     return {fill: \"hsb(\" + num + \", 0.75, 1)\"};\r\n             | };\r\n             | // Custom attribute “hue” will change fill\r\n             | // to be given hue with fixed saturation and brightness.\r\n             | // Now you can use it like this:\r\n             | var c = paper.circle(10, 10, 10).attr({hue: .45});\r\n             | // or even like this:\r\n             | c.animate({hue: 1}, 1e3);\r\n             | \r\n             | // You could also create custom attribute\r\n             | // with multiple parameters:\r\n             | paper.customAttributes.hsb = function (h, s, b) {\r\n             |     return {fill: \"hsb(\" + [h, s, b].join(\",\") + \")\"};\r\n             | };\r\n             | c.attr({hsb: \"0.5 .8 1\"});\r\n             | c.animate({hsb: [1, 0, 0.5]}, 1e3);\r\n            \\*/\r\n            this.ca = this.customAttributes = {};\r\n        },\r\n        paperproto,\r\n        appendChild = \"appendChild\",\r\n        apply = \"apply\",\r\n        concat = \"concat\",\r\n        supportsTouch = ('ontouchstart' in g.win) || g.win.DocumentTouch && g.doc instanceof DocumentTouch, //taken from Modernizr touch test\r\n        E = \"\",\r\n        S = \" \",\r\n        Str = String,\r\n        split = \"split\",\r\n        events = \"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[split](S),\r\n        touchMap = {\r\n            mousedown: \"touchstart\",\r\n            mousemove: \"touchmove\",\r\n            mouseup: \"touchend\"\r\n        },\r\n        lowerCase = Str.prototype.toLowerCase,\r\n        math = Math,\r\n        mmax = math.max,\r\n        mmin = math.min,\r\n        abs = math.abs,\r\n        pow = math.pow,\r\n        PI = math.PI,\r\n        nu = \"number\",\r\n        string = \"string\",\r\n        array = \"array\",\r\n        toString = \"toString\",\r\n        fillString = \"fill\",\r\n        objectToString = Object.prototype.toString,\r\n        paper = {},\r\n        push = \"push\",\r\n        ISURL = R._ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\r\n        colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i,\r\n        isnan = {\"NaN\": 1, \"Infinity\": 1, \"-Infinity\": 1},\r\n        bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\r\n        round = math.round,\r\n        setAttribute = \"setAttribute\",\r\n        toFloat = parseFloat,\r\n        toInt = parseInt,\r\n        upperCase = Str.prototype.toUpperCase,\r\n        availableAttrs = R._availableAttrs = {\r\n            \"class\": \"\",\r\n            \"arrow-end\": \"none\",\r\n            \"arrow-start\": \"none\",\r\n            blur: 0,\r\n            \"clip-rect\": \"0 0 1e9 1e9\",\r\n            cursor: \"default\",\r\n            cx: 0,\r\n            cy: 0,\r\n            fill: \"#fff\",\r\n            \"fill-opacity\": 1,\r\n            font: '10px \"Arial\"',\r\n            \"font-family\": '\"Arial\"',\r\n            \"font-size\": \"10\",\r\n            \"font-style\": \"normal\",\r\n            \"font-weight\": 400,\r\n            gradient: 0,\r\n            height: 0,\r\n            href: \"http://raphaeljs.com/\",\r\n            \"letter-spacing\": 0,\r\n            opacity: 1,\r\n            path: \"M0,0\",\r\n            r: 0,\r\n            rx: 0,\r\n            ry: 0,\r\n            src: \"\",\r\n            stroke: \"#000\",\r\n            \"stroke-dasharray\": \"\",\r\n            \"stroke-linecap\": \"butt\",\r\n            \"stroke-linejoin\": \"butt\",\r\n            \"stroke-miterlimit\": 0,\r\n            \"stroke-opacity\": 1,\r\n            \"stroke-width\": 1,\r\n            target: \"_blank\",\r\n            \"text-anchor\": \"middle\",\r\n            title: \"Raphael\",\r\n            transform: \"\",\r\n            width: 0,\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        availableAnimAttrs = R._availableAnimAttrs = {\r\n            blur: nu,\r\n            \"clip-rect\": \"csv\",\r\n            cx: nu,\r\n            cy: nu,\r\n            fill: \"colour\",\r\n            \"fill-opacity\": nu,\r\n            \"font-size\": nu,\r\n            height: nu,\r\n            opacity: nu,\r\n            path: \"path\",\r\n            r: nu,\r\n            rx: nu,\r\n            ry: nu,\r\n            stroke: \"colour\",\r\n            \"stroke-opacity\": nu,\r\n            \"stroke-width\": nu,\r\n            transform: \"transform\",\r\n            width: nu,\r\n            x: nu,\r\n            y: nu\r\n        },\r\n        whitespace = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]/g,\r\n        commaSpaces = /[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,\r\n        hsrg = {hs: 1, rg: 1},\r\n        p2s = /,?([achlmqrstvxz]),?/gi,\r\n        pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\r\n        tCommand = /([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig,\r\n        pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig,\r\n        radial_gradient = R._radial_gradient = /^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,\r\n        eldata = {},\r\n        sortByKey = function (a, b) {\r\n            return a.key - b.key;\r\n        },\r\n        sortByNumber = function (a, b) {\r\n            return toFloat(a) - toFloat(b);\r\n        },\r\n        fun = function () {},\r\n        pipe = function (x) {\r\n            return x;\r\n        },\r\n        rectPath = R._rectPath = function (x, y, w, h, r) {\r\n            if (r) {\r\n                return [[\"M\", x + r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\r\n            }\r\n            return [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\r\n        },\r\n        ellipsePath = function (x, y, rx, ry) {\r\n            if (ry == null) {\r\n                ry = rx;\r\n            }\r\n            return [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\r\n        },\r\n        getPath = R._getPath = {\r\n            path: function (el) {\r\n                return el.attr(\"path\");\r\n            },\r\n            circle: function (el) {\r\n                var a = el.attrs;\r\n                return ellipsePath(a.cx, a.cy, a.r);\r\n            },\r\n            ellipse: function (el) {\r\n                var a = el.attrs;\r\n                return ellipsePath(a.cx, a.cy, a.rx, a.ry);\r\n            },\r\n            rect: function (el) {\r\n                var a = el.attrs;\r\n                return rectPath(a.x, a.y, a.width, a.height, a.r);\r\n            },\r\n            image: function (el) {\r\n                var a = el.attrs;\r\n                return rectPath(a.x, a.y, a.width, a.height);\r\n            },\r\n            text: function (el) {\r\n                var bbox = el._getBBox();\r\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\r\n            },\r\n            set : function(el) {\r\n                var bbox = el._getBBox();\r\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\r\n            }\r\n        },\r\n        /*\\\r\n         * Raphael.mapPath\r\n         [ method ]\r\n         **\r\n         * Transform the path string with given matrix.\r\n         > Parameters\r\n         - path (string) path string\r\n         - matrix (object) see @Matrix\r\n         = (string) transformed path string\r\n        \\*/\r\n        mapPath = R.mapPath = function (path, matrix) {\r\n            if (!matrix) {\r\n                return path;\r\n            }\r\n            var x, y, i, j, ii, jj, pathi;\r\n            path = path2curve(path);\r\n            for (i = 0, ii = path.length; i < ii; i++) {\r\n                pathi = path[i];\r\n                for (j = 1, jj = pathi.length; j < jj; j += 2) {\r\n                    x = matrix.x(pathi[j], pathi[j + 1]);\r\n                    y = matrix.y(pathi[j], pathi[j + 1]);\r\n                    pathi[j] = x;\r\n                    pathi[j + 1] = y;\r\n                }\r\n            }\r\n            return path;\r\n        };\r\n\r\n    R._g = g;\r\n    /*\\\r\n     * Raphael.type\r\n     [ property (string) ]\r\n     **\r\n     * Can be “SVG”, “VML” or empty, depending on browser support.\r\n    \\*/\r\n    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\") ? \"SVG\" : \"VML\");\r\n    if (R.type == \"VML\") {\r\n        var d = g.doc.createElement(\"div\"),\r\n            b;\r\n        d.innerHTML = '<v:shape adj=\"1\"/>';\r\n        b = d.firstChild;\r\n        b.style.behavior = \"url(#default#VML)\";\r\n        if (!(b && typeof b.adj == \"object\")) {\r\n            return (R.type = E);\r\n        }\r\n        d = null;\r\n    }\r\n    /*\\\r\n     * Raphael.svg\r\n     [ property (boolean) ]\r\n     **\r\n     * `true` if browser supports SVG.\r\n    \\*/\r\n    /*\\\r\n     * Raphael.vml\r\n     [ property (boolean) ]\r\n     **\r\n     * `true` if browser supports VML.\r\n    \\*/\r\n    R.svg = !(R.vml = R.type == \"VML\");\r\n    R._Paper = Paper;\r\n    /*\\\r\n     * Raphael.fn\r\n     [ property (object) ]\r\n     **\r\n     * You can add your own method to the canvas. For example if you want to draw a pie chart,\r\n     * you can create your own pie chart function and ship it as a Raphaël plugin. To do this\r\n     * you need to extend the `Raphael.fn` object. You should modify the `fn` object before a\r\n     * Raphaël instance is created, otherwise it will take no effect. Please note that the\r\n     * ability for namespaced plugins was removed in Raphael 2.0. It is up to the plugin to\r\n     * ensure any namespacing ensures proper context.\r\n     > Usage\r\n     | Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\r\n     |     return this.path( ... );\r\n     | };\r\n     | // or create namespace\r\n     | Raphael.fn.mystuff = {\r\n     |     arrow: function () {…},\r\n     |     star: function () {…},\r\n     |     // etc…\r\n     | };\r\n     | var paper = Raphael(10, 10, 630, 480);\r\n     | // then use it\r\n     | paper.arrow(10, 10, 30, 30, 5).attr({fill: \"#f00\"});\r\n     | paper.mystuff.arrow();\r\n     | paper.mystuff.star();\r\n    \\*/\r\n    R.fn = paperproto = Paper.prototype = R.prototype;\r\n    R._id = 0;\r\n    R._oid = 0;\r\n    /*\\\r\n     * Raphael.is\r\n     [ method ]\r\n     **\r\n     * Handfull replacement for `typeof` operator.\r\n     > Parameters\r\n     - o (…) any object or primitive\r\n     - type (string) name of the type, i.e. “string”, “function”, “number”, etc.\r\n     = (boolean) is given value is of given type\r\n    \\*/\r\n    R.is = function (o, type) {\r\n        type = lowerCase.call(type);\r\n        if (type == \"finite\") {\r\n            return !isnan[has](+o);\r\n        }\r\n        if (type == \"array\") {\r\n            return o instanceof Array;\r\n        }\r\n        return  (type == \"null\" && o === null) ||\r\n                (type == typeof o && o !== null) ||\r\n                (type == \"object\" && o === Object(o)) ||\r\n                (type == \"array\" && Array.isArray && Array.isArray(o)) ||\r\n                objectToString.call(o).slice(8, -1).toLowerCase() == type;\r\n    };\r\n\r\n    function clone(obj) {\r\n        if (typeof obj == \"function\" || Object(obj) !== obj) {\r\n            return obj;\r\n        }\r\n        var res = new obj.constructor;\r\n        for (var key in obj) if (obj[has](key)) {\r\n            res[key] = clone(obj[key]);\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /*\\\r\n     * Raphael.angle\r\n     [ method ]\r\n     **\r\n     * Returns angle between two or three points\r\n     > Parameters\r\n     - x1 (number) x coord of first point\r\n     - y1 (number) y coord of first point\r\n     - x2 (number) x coord of second point\r\n     - y2 (number) y coord of second point\r\n     - x3 (number) #optional x coord of third point\r\n     - y3 (number) #optional y coord of third point\r\n     = (number) angle in degrees.\r\n    \\*/\r\n    R.angle = function (x1, y1, x2, y2, x3, y3) {\r\n        if (x3 == null) {\r\n            var x = x1 - x2,\r\n                y = y1 - y2;\r\n            if (!x && !y) {\r\n                return 0;\r\n            }\r\n            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\r\n        } else {\r\n            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);\r\n        }\r\n    };\r\n    /*\\\r\n     * Raphael.rad\r\n     [ method ]\r\n     **\r\n     * Transform angle to radians\r\n     > Parameters\r\n     - deg (number) angle in degrees\r\n     = (number) angle in radians.\r\n    \\*/\r\n    R.rad = function (deg) {\r\n        return deg % 360 * PI / 180;\r\n    };\r\n    /*\\\r\n     * Raphael.deg\r\n     [ method ]\r\n     **\r\n     * Transform angle to degrees\r\n     > Parameters\r\n     - deg (number) angle in radians\r\n     = (number) angle in degrees.\r\n    \\*/\r\n    R.deg = function (rad) {\r\n        return rad * 180 / PI % 360;\r\n    };\r\n    /*\\\r\n     * Raphael.snapTo\r\n     [ method ]\r\n     **\r\n     * Snaps given value to given grid.\r\n     > Parameters\r\n     - values (array|number) given array of values or step of the grid\r\n     - value (number) value to adjust\r\n     - tolerance (number) #optional tolerance for snapping. Default is `10`.\r\n     = (number) adjusted value.\r\n    \\*/\r\n    R.snapTo = function (values, value, tolerance) {\r\n        tolerance = R.is(tolerance, \"finite\") ? tolerance : 10;\r\n        if (R.is(values, array)) {\r\n            var i = values.length;\r\n            while (i--) if (abs(values[i] - value) <= tolerance) {\r\n                return values[i];\r\n            }\r\n        } else {\r\n            values = +values;\r\n            var rem = value % values;\r\n            if (rem < tolerance) {\r\n                return value - rem;\r\n            }\r\n            if (rem > values - tolerance) {\r\n                return value - rem + values;\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.createUUID\r\n     [ method ]\r\n     **\r\n     * Returns RFC4122, version 4 ID\r\n    \\*/\r\n    var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {\r\n        return function () {\r\n            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(uuidRegEx, uuidReplacer).toUpperCase();\r\n        };\r\n    })(/[xy]/g, function (c) {\r\n        var r = math.random() * 16 | 0,\r\n            v = c == \"x\" ? r : (r & 3 | 8);\r\n        return v.toString(16);\r\n    });\r\n\r\n    /*\\\r\n     * Raphael.setWindow\r\n     [ method ]\r\n     **\r\n     * Used when you need to draw in `&lt;iframe>`. Switched window to the iframe one.\r\n     > Parameters\r\n     - newwin (window) new window object\r\n    \\*/\r\n    R.setWindow = function (newwin) {\r\n        eve(\"raphael.setWindow\", R, g.win, newwin);\r\n        g.win = newwin;\r\n        g.doc = g.win.document;\r\n        if (R._engine.initWin) {\r\n            R._engine.initWin(g.win);\r\n        }\r\n    };\r\n    var toHex = function (color) {\r\n        if (R.vml) {\r\n            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/\r\n            var trim = /^\\s+|\\s+$/g;\r\n            var bod;\r\n            try {\r\n                var docum = new ActiveXObject(\"htmlfile\");\r\n                docum.write(\"<body>\");\r\n                docum.close();\r\n                bod = docum.body;\r\n            } catch(e) {\r\n                bod = createPopup().document.body;\r\n            }\r\n            var range = bod.createTextRange();\r\n            toHex = cacher(function (color) {\r\n                try {\r\n                    bod.style.color = Str(color).replace(trim, E);\r\n                    var value = range.queryCommandValue(\"ForeColor\");\r\n                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);\r\n                    return \"#\" + (\"000000\" + value.toString(16)).slice(-6);\r\n                } catch(e) {\r\n                    return \"none\";\r\n                }\r\n            });\r\n        } else {\r\n            var i = g.doc.createElement(\"i\");\r\n            i.title = \"Rapha\\xebl Colour Picker\";\r\n            i.style.display = \"none\";\r\n            g.doc.body.appendChild(i);\r\n            toHex = cacher(function (color) {\r\n                i.style.color = color;\r\n                return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\r\n            });\r\n        }\r\n        return toHex(color);\r\n    },\r\n    hsbtoString = function () {\r\n        return \"hsb(\" + [this.h, this.s, this.b] + \")\";\r\n    },\r\n    hsltoString = function () {\r\n        return \"hsl(\" + [this.h, this.s, this.l] + \")\";\r\n    },\r\n    rgbtoString = function () {\r\n        return this.hex;\r\n    },\r\n    prepareRGB = function (r, g, b) {\r\n        if (g == null && R.is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\r\n            b = r.b;\r\n            g = r.g;\r\n            r = r.r;\r\n        }\r\n        if (g == null && R.is(r, string)) {\r\n            var clr = R.getRGB(r);\r\n            r = clr.r;\r\n            g = clr.g;\r\n            b = clr.b;\r\n        }\r\n        if (r > 1 || g > 1 || b > 1) {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n        }\r\n\r\n        return [r, g, b];\r\n    },\r\n    packageRGB = function (r, g, b, o) {\r\n        r *= 255;\r\n        g *= 255;\r\n        b *= 255;\r\n        var rgb = {\r\n            r: r,\r\n            g: g,\r\n            b: b,\r\n            hex: R.rgb(r, g, b),\r\n            toString: rgbtoString\r\n        };\r\n        R.is(o, \"finite\") && (rgb.opacity = o);\r\n        return rgb;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.color\r\n     [ method ]\r\n     **\r\n     * Parses the color string and returns object with all values for the given color.\r\n     > Parameters\r\n     - clr (string) color string in one of the supported formats (see @Raphael.getRGB)\r\n     = (object) Combined RGB & HSB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue,\r\n     o     hex (string) color in HTML/CSS format: #••••••,\r\n     o     error (boolean) `true` if string can’t be parsed,\r\n     o     h (number) hue,\r\n     o     s (number) saturation,\r\n     o     v (number) value (brightness),\r\n     o     l (number) lightness\r\n     o }\r\n    \\*/\r\n    R.color = function (clr) {\r\n        var rgb;\r\n        if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\r\n            rgb = R.hsb2rgb(clr);\r\n            clr.r = rgb.r;\r\n            clr.g = rgb.g;\r\n            clr.b = rgb.b;\r\n            clr.hex = rgb.hex;\r\n        } else if (R.is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\r\n            rgb = R.hsl2rgb(clr);\r\n            clr.r = rgb.r;\r\n            clr.g = rgb.g;\r\n            clr.b = rgb.b;\r\n            clr.hex = rgb.hex;\r\n        } else {\r\n            if (R.is(clr, \"string\")) {\r\n                clr = R.getRGB(clr);\r\n            }\r\n            if (R.is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr) {\r\n                rgb = R.rgb2hsl(clr);\r\n                clr.h = rgb.h;\r\n                clr.s = rgb.s;\r\n                clr.l = rgb.l;\r\n                rgb = R.rgb2hsb(clr);\r\n                clr.v = rgb.b;\r\n            } else {\r\n                clr = {hex: \"none\"};\r\n                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\r\n            }\r\n        }\r\n        clr.toString = rgbtoString;\r\n        return clr;\r\n    };\r\n    /*\\\r\n     * Raphael.hsb2rgb\r\n     [ method ]\r\n     **\r\n     * Converts HSB values to RGB object.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - v (number) value or brightness\r\n     = (object) RGB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue,\r\n     o     hex (string) color in HTML/CSS format: #••••••\r\n     o }\r\n    \\*/\r\n    R.hsb2rgb = function (h, s, v, o) {\r\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\r\n            v = h.b;\r\n            s = h.s;\r\n            h = h.h;\r\n            o = h.o;\r\n        }\r\n        h *= 360;\r\n        var R, G, B, X, C;\r\n        h = (h % 360) / 60;\r\n        C = v * s;\r\n        X = C * (1 - abs(h % 2 - 1));\r\n        R = G = B = v - C;\r\n\r\n        h = ~~h;\r\n        R += [C, X, 0, 0, X, C][h];\r\n        G += [X, C, C, X, 0, 0][h];\r\n        B += [0, 0, X, C, C, X][h];\r\n        return packageRGB(R, G, B, o);\r\n    };\r\n    /*\\\r\n     * Raphael.hsl2rgb\r\n     [ method ]\r\n     **\r\n     * Converts HSL values to RGB object.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - l (number) luminosity\r\n     = (object) RGB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue,\r\n     o     hex (string) color in HTML/CSS format: #••••••\r\n     o }\r\n    \\*/\r\n    R.hsl2rgb = function (h, s, l, o) {\r\n        if (this.is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\r\n            l = h.l;\r\n            s = h.s;\r\n            h = h.h;\r\n        }\r\n        if (h > 1 || s > 1 || l > 1) {\r\n            h /= 360;\r\n            s /= 100;\r\n            l /= 100;\r\n        }\r\n        h *= 360;\r\n        var R, G, B, X, C;\r\n        h = (h % 360) / 60;\r\n        C = 2 * s * (l < .5 ? l : 1 - l);\r\n        X = C * (1 - abs(h % 2 - 1));\r\n        R = G = B = l - C / 2;\r\n\r\n        h = ~~h;\r\n        R += [C, X, 0, 0, X, C][h];\r\n        G += [X, C, C, X, 0, 0][h];\r\n        B += [0, 0, X, C, C, X][h];\r\n        return packageRGB(R, G, B, o);\r\n    };\r\n    /*\\\r\n     * Raphael.rgb2hsb\r\n     [ method ]\r\n     **\r\n     * Converts RGB values to HSB object.\r\n     > Parameters\r\n     - r (number) red\r\n     - g (number) green\r\n     - b (number) blue\r\n     = (object) HSB object in format:\r\n     o {\r\n     o     h (number) hue\r\n     o     s (number) saturation\r\n     o     b (number) brightness\r\n     o }\r\n    \\*/\r\n    R.rgb2hsb = function (r, g, b) {\r\n        b = prepareRGB(r, g, b);\r\n        r = b[0];\r\n        g = b[1];\r\n        b = b[2];\r\n\r\n        var H, S, V, C;\r\n        V = mmax(r, g, b);\r\n        C = V - mmin(r, g, b);\r\n        H = (C == 0 ? null :\r\n             V == r ? (g - b) / C :\r\n             V == g ? (b - r) / C + 2 :\r\n                      (r - g) / C + 4\r\n            );\r\n        H = ((H + 360) % 6) * 60 / 360;\r\n        S = C == 0 ? 0 : C / V;\r\n        return {h: H, s: S, b: V, toString: hsbtoString};\r\n    };\r\n    /*\\\r\n     * Raphael.rgb2hsl\r\n     [ method ]\r\n     **\r\n     * Converts RGB values to HSL object.\r\n     > Parameters\r\n     - r (number) red\r\n     - g (number) green\r\n     - b (number) blue\r\n     = (object) HSL object in format:\r\n     o {\r\n     o     h (number) hue\r\n     o     s (number) saturation\r\n     o     l (number) luminosity\r\n     o }\r\n    \\*/\r\n    R.rgb2hsl = function (r, g, b) {\r\n        b = prepareRGB(r, g, b);\r\n        r = b[0];\r\n        g = b[1];\r\n        b = b[2];\r\n\r\n        var H, S, L, M, m, C;\r\n        M = mmax(r, g, b);\r\n        m = mmin(r, g, b);\r\n        C = M - m;\r\n        H = (C == 0 ? null :\r\n             M == r ? (g - b) / C :\r\n             M == g ? (b - r) / C + 2 :\r\n                      (r - g) / C + 4);\r\n        H = ((H + 360) % 6) * 60 / 360;\r\n        L = (M + m) / 2;\r\n        S = (C == 0 ? 0 :\r\n             L < .5 ? C / (2 * L) :\r\n                      C / (2 - 2 * L));\r\n        return {h: H, s: S, l: L, toString: hsltoString};\r\n    };\r\n    R._path2string = function () {\r\n        return this.join(\",\").replace(p2s, \"$1\");\r\n    };\r\n    function repush(array, item) {\r\n        for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\r\n            return array.push(array.splice(i, 1)[0]);\r\n        }\r\n    }\r\n    function cacher(f, scope, postprocessor) {\r\n        function newf() {\r\n            var arg = Array.prototype.slice.call(arguments, 0),\r\n                args = arg.join(\"\\u2400\"),\r\n                cache = newf.cache = newf.cache || {},\r\n                count = newf.count = newf.count || [];\r\n            if (cache[has](args)) {\r\n                repush(count, args);\r\n                return postprocessor ? postprocessor(cache[args]) : cache[args];\r\n            }\r\n            count.length >= 1e3 && delete cache[count.shift()];\r\n            count.push(args);\r\n            cache[args] = f[apply](scope, arg);\r\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\r\n        }\r\n        return newf;\r\n    }\r\n\r\n    var preload = R._preload = function (src, f) {\r\n        var img = g.doc.createElement(\"img\");\r\n        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\r\n        img.onload = function () {\r\n            f.call(this);\r\n            this.onload = null;\r\n            g.doc.body.removeChild(this);\r\n        };\r\n        img.onerror = function () {\r\n            g.doc.body.removeChild(this);\r\n        };\r\n        g.doc.body.appendChild(img);\r\n        img.src = src;\r\n    };\r\n\r\n    function clrToString() {\r\n        return this.hex;\r\n    }\r\n\r\n    /*\\\r\n     * Raphael.getRGB\r\n     [ method ]\r\n     **\r\n     * Parses colour string as RGB object\r\n     > Parameters\r\n     - colour (string) colour string in one of formats:\r\n     # <ul>\r\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\r\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\r\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\r\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\r\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\r\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\r\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\r\n     #     <li>hsl(•••, •••, •••) — same as hsb</li>\r\n     #     <li>hsl(•••%, •••%, •••%) — same as hsb</li>\r\n     # </ul>\r\n     = (object) RGB object in format:\r\n     o {\r\n     o     r (number) red,\r\n     o     g (number) green,\r\n     o     b (number) blue\r\n     o     hex (string) color in HTML/CSS format: #••••••,\r\n     o     error (boolean) true if string can’t be parsed\r\n     o }\r\n    \\*/\r\n    R.getRGB = cacher(function (colour) {\r\n        if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\r\n            return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\r\n        }\r\n        if (colour == \"none\") {\r\n            return {r: -1, g: -1, b: -1, hex: \"none\", toString: clrToString};\r\n        }\r\n        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\r\n        var res,\r\n            red,\r\n            green,\r\n            blue,\r\n            opacity,\r\n            t,\r\n            values,\r\n            rgb = colour.match(colourRegExp);\r\n        if (rgb) {\r\n            if (rgb[2]) {\r\n                blue = toInt(rgb[2].substring(5), 16);\r\n                green = toInt(rgb[2].substring(3, 5), 16);\r\n                red = toInt(rgb[2].substring(1, 3), 16);\r\n            }\r\n            if (rgb[3]) {\r\n                blue = toInt((t = rgb[3].charAt(3)) + t, 16);\r\n                green = toInt((t = rgb[3].charAt(2)) + t, 16);\r\n                red = toInt((t = rgb[3].charAt(1)) + t, 16);\r\n            }\r\n            if (rgb[4]) {\r\n                values = rgb[4][split](commaSpaces);\r\n                red = toFloat(values[0]);\r\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\r\n                green = toFloat(values[1]);\r\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\r\n                blue = toFloat(values[2]);\r\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\r\n                rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\r\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\r\n            }\r\n            if (rgb[5]) {\r\n                values = rgb[5][split](commaSpaces);\r\n                red = toFloat(values[0]);\r\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\r\n                green = toFloat(values[1]);\r\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\r\n                blue = toFloat(values[2]);\r\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\r\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\r\n                rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\r\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\r\n                return R.hsb2rgb(red, green, blue, opacity);\r\n            }\r\n            if (rgb[6]) {\r\n                values = rgb[6][split](commaSpaces);\r\n                red = toFloat(values[0]);\r\n                values[0].slice(-1) == \"%\" && (red *= 2.55);\r\n                green = toFloat(values[1]);\r\n                values[1].slice(-1) == \"%\" && (green *= 2.55);\r\n                blue = toFloat(values[2]);\r\n                values[2].slice(-1) == \"%\" && (blue *= 2.55);\r\n                (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\r\n                rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\r\n                values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\r\n                return R.hsl2rgb(red, green, blue, opacity);\r\n            }\r\n            rgb = {r: red, g: green, b: blue, toString: clrToString};\r\n            rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\r\n            R.is(opacity, \"finite\") && (rgb.opacity = opacity);\r\n            return rgb;\r\n        }\r\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: clrToString};\r\n    }, R);\r\n    /*\\\r\n     * Raphael.hsb\r\n     [ method ]\r\n     **\r\n     * Converts HSB values to hex representation of the colour.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - b (number) value or brightness\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.hsb = cacher(function (h, s, b) {\r\n        return R.hsb2rgb(h, s, b).hex;\r\n    });\r\n    /*\\\r\n     * Raphael.hsl\r\n     [ method ]\r\n     **\r\n     * Converts HSL values to hex representation of the colour.\r\n     > Parameters\r\n     - h (number) hue\r\n     - s (number) saturation\r\n     - l (number) luminosity\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.hsl = cacher(function (h, s, l) {\r\n        return R.hsl2rgb(h, s, l).hex;\r\n    });\r\n    /*\\\r\n     * Raphael.rgb\r\n     [ method ]\r\n     **\r\n     * Converts RGB values to hex representation of the colour.\r\n     > Parameters\r\n     - r (number) red\r\n     - g (number) green\r\n     - b (number) blue\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.rgb = cacher(function (r, g, b) {\r\n        return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\r\n    });\r\n    /*\\\r\n     * Raphael.getColor\r\n     [ method ]\r\n     **\r\n     * On each call returns next colour in the spectrum. To reset it back to red call @Raphael.getColor.reset\r\n     > Parameters\r\n     - value (number) #optional brightness, default is `0.75`\r\n     = (string) hex representation of the colour.\r\n    \\*/\r\n    R.getColor = function (value) {\r\n        var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},\r\n            rgb = this.hsb2rgb(start.h, start.s, start.b);\r\n        start.h += .075;\r\n        if (start.h > 1) {\r\n            start.h = 0;\r\n            start.s -= .2;\r\n            start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});\r\n        }\r\n        return rgb.hex;\r\n    };\r\n    /*\\\r\n     * Raphael.getColor.reset\r\n     [ method ]\r\n     **\r\n     * Resets spectrum position for @Raphael.getColor back to red.\r\n    \\*/\r\n    R.getColor.reset = function () {\r\n        delete this.start;\r\n    };\r\n\r\n    // http://schepers.cc/getting-to-the-point\r\n    function catmullRom2bezier(crp, z) {\r\n        var d = [];\r\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\r\n            var p = [\r\n                        {x: +crp[i - 2], y: +crp[i - 1]},\r\n                        {x: +crp[i],     y: +crp[i + 1]},\r\n                        {x: +crp[i + 2], y: +crp[i + 3]},\r\n                        {x: +crp[i + 4], y: +crp[i + 5]}\r\n                    ];\r\n            if (z) {\r\n                if (!i) {\r\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\r\n                } else if (iLen - 4 == i) {\r\n                    p[3] = {x: +crp[0], y: +crp[1]};\r\n                } else if (iLen - 2 == i) {\r\n                    p[2] = {x: +crp[0], y: +crp[1]};\r\n                    p[3] = {x: +crp[2], y: +crp[3]};\r\n                }\r\n            } else {\r\n                if (iLen - 4 == i) {\r\n                    p[3] = p[2];\r\n                } else if (!i) {\r\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\r\n                }\r\n            }\r\n            d.push([\"C\",\r\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\r\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\r\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\r\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\r\n                  p[2].x,\r\n                  p[2].y\r\n            ]);\r\n        }\r\n\r\n        return d;\r\n    }\r\n    /*\\\r\n     * Raphael.parsePathString\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Parses given path string into an array of arrays of path segments.\r\n     > Parameters\r\n     - pathString (string|array) path string or array of segments (in the last case it will be returned straight away)\r\n     = (array) array of segments.\r\n    \\*/\r\n    R.parsePathString = function (pathString) {\r\n        if (!pathString) {\r\n            return null;\r\n        }\r\n        var pth = paths(pathString);\r\n        if (pth.arr) {\r\n            return pathClone(pth.arr);\r\n        }\r\n\r\n        var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n            data = [];\r\n        if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption\r\n            data = pathClone(pathString);\r\n        }\r\n        if (!data.length) {\r\n            Str(pathString).replace(pathCommand, function (a, b, c) {\r\n                var params = [],\r\n                    name = b.toLowerCase();\r\n                c.replace(pathValues, function (a, b) {\r\n                    b && params.push(+b);\r\n                });\r\n                if (name == \"m\" && params.length > 2) {\r\n                    data.push([b][concat](params.splice(0, 2)));\r\n                    name = \"l\";\r\n                    b = b == \"m\" ? \"l\" : \"L\";\r\n                }\r\n                if (name == \"r\") {\r\n                    data.push([b][concat](params));\r\n                } else while (params.length >= paramCounts[name]) {\r\n                    data.push([b][concat](params.splice(0, paramCounts[name])));\r\n                    if (!paramCounts[name]) {\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        data.toString = R._path2string;\r\n        pth.arr = pathClone(data);\r\n        return data;\r\n    };\r\n    /*\\\r\n     * Raphael.parseTransformString\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Parses given path string into an array of transformations.\r\n     > Parameters\r\n     - TString (string|array) transform string or array of transformations (in the last case it will be returned straight away)\r\n     = (array) array of transformations.\r\n    \\*/\r\n    R.parseTransformString = cacher(function (TString) {\r\n        if (!TString) {\r\n            return null;\r\n        }\r\n        var paramCounts = {r: 3, s: 4, t: 2, m: 6},\r\n            data = [];\r\n        if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption\r\n            data = pathClone(TString);\r\n        }\r\n        if (!data.length) {\r\n            Str(TString).replace(tCommand, function (a, b, c) {\r\n                var params = [],\r\n                    name = lowerCase.call(b);\r\n                c.replace(pathValues, function (a, b) {\r\n                    b && params.push(+b);\r\n                });\r\n                data.push([b][concat](params));\r\n            });\r\n        }\r\n        data.toString = R._path2string;\r\n        return data;\r\n    });\r\n    // PATHS\r\n    var paths = function (ps) {\r\n        var p = paths.ps = paths.ps || {};\r\n        if (p[ps]) {\r\n            p[ps].sleep = 100;\r\n        } else {\r\n            p[ps] = {\r\n                sleep: 100\r\n            };\r\n        }\r\n        setTimeout(function () {\r\n            for (var key in p) if (p[has](key) && key != ps) {\r\n                p[key].sleep--;\r\n                !p[key].sleep && delete p[key];\r\n            }\r\n        });\r\n        return p[ps];\r\n    };\r\n    /*\\\r\n     * Raphael.findDotsAtSegment\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Find dot coordinates on the given cubic bezier curve at the given t.\r\n     > Parameters\r\n     - p1x (number) x of the first point of the curve\r\n     - p1y (number) y of the first point of the curve\r\n     - c1x (number) x of the first anchor of the curve\r\n     - c1y (number) y of the first anchor of the curve\r\n     - c2x (number) x of the second anchor of the curve\r\n     - c2y (number) y of the second anchor of the curve\r\n     - p2x (number) x of the second point of the curve\r\n     - p2y (number) y of the second point of the curve\r\n     - t (number) position on the curve (0..1)\r\n     = (object) point information in format:\r\n     o {\r\n     o     x: (number) x coordinate of the point\r\n     o     y: (number) y coordinate of the point\r\n     o     m: {\r\n     o         x: (number) x coordinate of the left anchor\r\n     o         y: (number) y coordinate of the left anchor\r\n     o     }\r\n     o     n: {\r\n     o         x: (number) x coordinate of the right anchor\r\n     o         y: (number) y coordinate of the right anchor\r\n     o     }\r\n     o     start: {\r\n     o         x: (number) x coordinate of the start of the curve\r\n     o         y: (number) y coordinate of the start of the curve\r\n     o     }\r\n     o     end: {\r\n     o         x: (number) x coordinate of the end of the curve\r\n     o         y: (number) y coordinate of the end of the curve\r\n     o     }\r\n     o     alpha: (number) angle of the curve derivative at the point\r\n     o }\r\n    \\*/\r\n    R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n        var t1 = 1 - t,\r\n            t13 = pow(t1, 3),\r\n            t12 = pow(t1, 2),\r\n            t2 = t * t,\r\n            t3 = t2 * t,\r\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\r\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\r\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\r\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\r\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\r\n            ax = t1 * p1x + t * c1x,\r\n            ay = t1 * p1y + t * c1y,\r\n            cx = t1 * c2x + t * p2x,\r\n            cy = t1 * c2y + t * p2y,\r\n            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\r\n        (mx > nx || my < ny) && (alpha += 180);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            m: {x: mx, y: my},\r\n            n: {x: nx, y: ny},\r\n            start: {x: ax, y: ay},\r\n            end: {x: cx, y: cy},\r\n            alpha: alpha\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.bezierBBox\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Return bounding box of a given cubic bezier curve\r\n     > Parameters\r\n     - p1x (number) x of the first point of the curve\r\n     - p1y (number) y of the first point of the curve\r\n     - c1x (number) x of the first anchor of the curve\r\n     - c1y (number) y of the first anchor of the curve\r\n     - c2x (number) x of the second anchor of the curve\r\n     - c2y (number) y of the second anchor of the curve\r\n     - p2x (number) x of the second point of the curve\r\n     - p2y (number) y of the second point of the curve\r\n     * or\r\n     - bez (array) array of six points for bezier curve\r\n     = (object) point information in format:\r\n     o {\r\n     o     min: {\r\n     o         x: (number) x coordinate of the left point\r\n     o         y: (number) y coordinate of the top point\r\n     o     }\r\n     o     max: {\r\n     o         x: (number) x coordinate of the right point\r\n     o         y: (number) y coordinate of the bottom point\r\n     o     }\r\n     o }\r\n    \\*/\r\n    R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n        if (!R.is(p1x, \"array\")) {\r\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\r\n        }\r\n        var bbox = curveDim.apply(null, p1x);\r\n        return {\r\n            x: bbox.min.x,\r\n            y: bbox.min.y,\r\n            x2: bbox.max.x,\r\n            y2: bbox.max.y,\r\n            width: bbox.max.x - bbox.min.x,\r\n            height: bbox.max.y - bbox.min.y\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.isPointInsideBBox\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns `true` if given point is inside bounding boxes.\r\n     > Parameters\r\n     - bbox (string) bounding box\r\n     - x (string) x coordinate of the point\r\n     - y (string) y coordinate of the point\r\n     = (boolean) `true` if point inside\r\n    \\*/\r\n    R.isPointInsideBBox = function (bbox, x, y) {\r\n        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;\r\n    };\r\n    /*\\\r\n     * Raphael.isBBoxIntersect\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns `true` if two bounding boxes intersect\r\n     > Parameters\r\n     - bbox1 (string) first bounding box\r\n     - bbox2 (string) second bounding box\r\n     = (boolean) `true` if they intersect\r\n    \\*/\r\n    R.isBBoxIntersect = function (bbox1, bbox2) {\r\n        var i = R.isPointInsideBBox;\r\n        return i(bbox2, bbox1.x, bbox1.y)\r\n            || i(bbox2, bbox1.x2, bbox1.y)\r\n            || i(bbox2, bbox1.x, bbox1.y2)\r\n            || i(bbox2, bbox1.x2, bbox1.y2)\r\n            || i(bbox1, bbox2.x, bbox2.y)\r\n            || i(bbox1, bbox2.x2, bbox2.y)\r\n            || i(bbox1, bbox2.x, bbox2.y2)\r\n            || i(bbox1, bbox2.x2, bbox2.y2)\r\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\r\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\r\n    };\r\n    function base3(t, p1, p2, p3, p4) {\r\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\r\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\r\n        return t * t2 - 3 * p1 + 3 * p2;\r\n    }\r\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\r\n        if (z == null) {\r\n            z = 1;\r\n        }\r\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\r\n        var z2 = z / 2,\r\n            n = 12,\r\n            Tvalues = [-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],\r\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\r\n            sum = 0;\r\n        for (var i = 0; i < n; i++) {\r\n            var ct = z2 * Tvalues[i] + z2,\r\n                xbase = base3(ct, x1, x2, x3, x4),\r\n                ybase = base3(ct, y1, y2, y3, y4),\r\n                comb = xbase * xbase + ybase * ybase;\r\n            sum += Cvalues[i] * math.sqrt(comb);\r\n        }\r\n        return z2 * sum;\r\n    }\r\n    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\r\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\r\n            return;\r\n        }\r\n        var t = 1,\r\n            step = t / 2,\r\n            t2 = t - step,\r\n            l,\r\n            e = .01;\r\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n        while (abs(l - ll) > e) {\r\n            step /= 2;\r\n            t2 += (l < ll ? 1 : -1) * step;\r\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\r\n        }\r\n        return t2;\r\n    }\r\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n        if (\r\n            mmax(x1, x2) < mmin(x3, x4) ||\r\n            mmin(x1, x2) > mmax(x3, x4) ||\r\n            mmax(y1, y2) < mmin(y3, y4) ||\r\n            mmin(y1, y2) > mmax(y3, y4)\r\n        ) {\r\n            return;\r\n        }\r\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n        if (!denominator) {\r\n            return;\r\n        }\r\n        var px = nx / denominator,\r\n            py = ny / denominator,\r\n            px2 = +px.toFixed(2),\r\n            py2 = +py.toFixed(2);\r\n        if (\r\n            px2 < +mmin(x1, x2).toFixed(2) ||\r\n            px2 > +mmax(x1, x2).toFixed(2) ||\r\n            px2 < +mmin(x3, x4).toFixed(2) ||\r\n            px2 > +mmax(x3, x4).toFixed(2) ||\r\n            py2 < +mmin(y1, y2).toFixed(2) ||\r\n            py2 > +mmax(y1, y2).toFixed(2) ||\r\n            py2 < +mmin(y3, y4).toFixed(2) ||\r\n            py2 > +mmax(y3, y4).toFixed(2)\r\n        ) {\r\n            return;\r\n        }\r\n        return {x: px, y: py};\r\n    }\r\n    function inter(bez1, bez2) {\r\n        return interHelper(bez1, bez2);\r\n    }\r\n    function interCount(bez1, bez2) {\r\n        return interHelper(bez1, bez2, 1);\r\n    }\r\n    function interHelper(bez1, bez2, justCount) {\r\n        var bbox1 = R.bezierBBox(bez1),\r\n            bbox2 = R.bezierBBox(bez2);\r\n        if (!R.isBBoxIntersect(bbox1, bbox2)) {\r\n            return justCount ? 0 : [];\r\n        }\r\n        var l1 = bezlen.apply(0, bez1),\r\n            l2 = bezlen.apply(0, bez2),\r\n            n1 = mmax(~~(l1 / 5), 1),\r\n            n2 = mmax(~~(l2 / 5), 1),\r\n            dots1 = [],\r\n            dots2 = [],\r\n            xy = {},\r\n            res = justCount ? 0 : [];\r\n        for (var i = 0; i < n1 + 1; i++) {\r\n            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));\r\n            dots1.push({x: p.x, y: p.y, t: i / n1});\r\n        }\r\n        for (i = 0; i < n2 + 1; i++) {\r\n            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));\r\n            dots2.push({x: p.x, y: p.y, t: i / n2});\r\n        }\r\n        for (i = 0; i < n1; i++) {\r\n            for (var j = 0; j < n2; j++) {\r\n                var di = dots1[i],\r\n                    di1 = dots1[i + 1],\r\n                    dj = dots2[j],\r\n                    dj1 = dots2[j + 1],\r\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\r\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\r\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n                if (is) {\r\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\r\n                        continue;\r\n                    }\r\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n                    if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\r\n                        if (justCount) {\r\n                            res++;\r\n                        } else {\r\n                            res.push({\r\n                                x: is.x,\r\n                                y: is.y,\r\n                                t1: mmin(t1, 1),\r\n                                t2: mmin(t2, 1)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /*\\\r\n     * Raphael.pathIntersection\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Finds intersections of two paths\r\n     > Parameters\r\n     - path1 (string) path string\r\n     - path2 (string) path string\r\n     = (array) dots of intersection\r\n     o [\r\n     o     {\r\n     o         x: (number) x coordinate of the point\r\n     o         y: (number) y coordinate of the point\r\n     o         t1: (number) t value for segment of path1\r\n     o         t2: (number) t value for segment of path2\r\n     o         segment1: (number) order number for segment of path1\r\n     o         segment2: (number) order number for segment of path2\r\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1\r\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\r\n     o     }\r\n     o ]\r\n    \\*/\r\n    R.pathIntersection = function (path1, path2) {\r\n        return interPathHelper(path1, path2);\r\n    };\r\n    R.pathIntersectionNumber = function (path1, path2) {\r\n        return interPathHelper(path1, path2, 1);\r\n    };\r\n    function interPathHelper(path1, path2, justCount) {\r\n        path1 = R._path2curve(path1);\r\n        path2 = R._path2curve(path2);\r\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\r\n            res = justCount ? 0 : [];\r\n        for (var i = 0, ii = path1.length; i < ii; i++) {\r\n            var pi = path1[i];\r\n            if (pi[0] == \"M\") {\r\n                x1 = x1m = pi[1];\r\n                y1 = y1m = pi[2];\r\n            } else {\r\n                if (pi[0] == \"C\") {\r\n                    bez1 = [x1, y1].concat(pi.slice(1));\r\n                    x1 = bez1[6];\r\n                    y1 = bez1[7];\r\n                } else {\r\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\r\n                    x1 = x1m;\r\n                    y1 = y1m;\r\n                }\r\n                for (var j = 0, jj = path2.length; j < jj; j++) {\r\n                    var pj = path2[j];\r\n                    if (pj[0] == \"M\") {\r\n                        x2 = x2m = pj[1];\r\n                        y2 = y2m = pj[2];\r\n                    } else {\r\n                        if (pj[0] == \"C\") {\r\n                            bez2 = [x2, y2].concat(pj.slice(1));\r\n                            x2 = bez2[6];\r\n                            y2 = bez2[7];\r\n                        } else {\r\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\r\n                            x2 = x2m;\r\n                            y2 = y2m;\r\n                        }\r\n                        var intr = interHelper(bez1, bez2, justCount);\r\n                        if (justCount) {\r\n                            res += intr;\r\n                        } else {\r\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\r\n                                intr[k].segment1 = i;\r\n                                intr[k].segment2 = j;\r\n                                intr[k].bez1 = bez1;\r\n                                intr[k].bez2 = bez2;\r\n                            }\r\n                            res = res.concat(intr);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /*\\\r\n     * Raphael.isPointInsidePath\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns `true` if given point is inside a given closed path.\r\n     > Parameters\r\n     - path (string) path string\r\n     - x (number) x of the point\r\n     - y (number) y of the point\r\n     = (boolean) true, if point is inside the path\r\n    \\*/\r\n    R.isPointInsidePath = function (path, x, y) {\r\n        var bbox = R.pathBBox(path);\r\n        return R.isPointInsideBBox(bbox, x, y) &&\r\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\r\n    };\r\n    R._removedFactory = function (methodname) {\r\n        return function () {\r\n            eve(\"raphael.log\", null, \"Rapha\\xebl: you are calling to method \\u201c\" + methodname + \"\\u201d of removed object\", methodname);\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.pathBBox\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Return bounding box of a given path\r\n     > Parameters\r\n     - path (string) path string\r\n     = (object) bounding box\r\n     o {\r\n     o     x: (number) x coordinate of the left top point of the box\r\n     o     y: (number) y coordinate of the left top point of the box\r\n     o     x2: (number) x coordinate of the right bottom point of the box\r\n     o     y2: (number) y coordinate of the right bottom point of the box\r\n     o     width: (number) width of the box\r\n     o     height: (number) height of the box\r\n     o     cx: (number) x coordinate of the center of the box\r\n     o     cy: (number) y coordinate of the center of the box\r\n     o }\r\n    \\*/\r\n    var pathDimensions = R.pathBBox = function (path) {\r\n        var pth = paths(path);\r\n        if (pth.bbox) {\r\n            return clone(pth.bbox);\r\n        }\r\n        if (!path) {\r\n            return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};\r\n        }\r\n        path = path2curve(path);\r\n        var x = 0,\r\n            y = 0,\r\n            X = [],\r\n            Y = [],\r\n            p;\r\n        for (var i = 0, ii = path.length; i < ii; i++) {\r\n            p = path[i];\r\n            if (p[0] == \"M\") {\r\n                x = p[1];\r\n                y = p[2];\r\n                X.push(x);\r\n                Y.push(y);\r\n            } else {\r\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\r\n                X = X[concat](dim.min.x, dim.max.x);\r\n                Y = Y[concat](dim.min.y, dim.max.y);\r\n                x = p[5];\r\n                y = p[6];\r\n            }\r\n        }\r\n        var xmin = mmin[apply](0, X),\r\n            ymin = mmin[apply](0, Y),\r\n            xmax = mmax[apply](0, X),\r\n            ymax = mmax[apply](0, Y),\r\n            width = xmax - xmin,\r\n            height = ymax - ymin,\r\n                bb = {\r\n                x: xmin,\r\n                y: ymin,\r\n                x2: xmax,\r\n                y2: ymax,\r\n                width: width,\r\n                height: height,\r\n                cx: xmin + width / 2,\r\n                cy: ymin + height / 2\r\n            };\r\n        pth.bbox = clone(bb);\r\n        return bb;\r\n    },\r\n        pathClone = function (pathArray) {\r\n            var res = clone(pathArray);\r\n            res.toString = R._path2string;\r\n            return res;\r\n        },\r\n        pathToRelative = R._pathToRelative = function (pathArray) {\r\n            var pth = paths(pathArray);\r\n            if (pth.rel) {\r\n                return pathClone(pth.rel);\r\n            }\r\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\r\n                pathArray = R.parsePathString(pathArray);\r\n            }\r\n            var res = [],\r\n                x = 0,\r\n                y = 0,\r\n                mx = 0,\r\n                my = 0,\r\n                start = 0;\r\n            if (pathArray[0][0] == \"M\") {\r\n                x = pathArray[0][1];\r\n                y = pathArray[0][2];\r\n                mx = x;\r\n                my = y;\r\n                start++;\r\n                res.push([\"M\", x, y]);\r\n            }\r\n            for (var i = start, ii = pathArray.length; i < ii; i++) {\r\n                var r = res[i] = [],\r\n                    pa = pathArray[i];\r\n                if (pa[0] != lowerCase.call(pa[0])) {\r\n                    r[0] = lowerCase.call(pa[0]);\r\n                    switch (r[0]) {\r\n                        case \"a\":\r\n                            r[1] = pa[1];\r\n                            r[2] = pa[2];\r\n                            r[3] = pa[3];\r\n                            r[4] = pa[4];\r\n                            r[5] = pa[5];\r\n                            r[6] = +(pa[6] - x).toFixed(3);\r\n                            r[7] = +(pa[7] - y).toFixed(3);\r\n                            break;\r\n                        case \"v\":\r\n                            r[1] = +(pa[1] - y).toFixed(3);\r\n                            break;\r\n                        case \"m\":\r\n                            mx = pa[1];\r\n                            my = pa[2];\r\n                        default:\r\n                            for (var j = 1, jj = pa.length; j < jj; j++) {\r\n                                r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\r\n                            }\r\n                    }\r\n                } else {\r\n                    r = res[i] = [];\r\n                    if (pa[0] == \"m\") {\r\n                        mx = pa[1] + x;\r\n                        my = pa[2] + y;\r\n                    }\r\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\r\n                        res[i][k] = pa[k];\r\n                    }\r\n                }\r\n                var len = res[i].length;\r\n                switch (res[i][0]) {\r\n                    case \"z\":\r\n                        x = mx;\r\n                        y = my;\r\n                        break;\r\n                    case \"h\":\r\n                        x += +res[i][len - 1];\r\n                        break;\r\n                    case \"v\":\r\n                        y += +res[i][len - 1];\r\n                        break;\r\n                    default:\r\n                        x += +res[i][len - 2];\r\n                        y += +res[i][len - 1];\r\n                }\r\n            }\r\n            res.toString = R._path2string;\r\n            pth.rel = pathClone(res);\r\n            return res;\r\n        },\r\n        pathToAbsolute = R._pathToAbsolute = function (pathArray) {\r\n            var pth = paths(pathArray);\r\n            if (pth.abs) {\r\n                return pathClone(pth.abs);\r\n            }\r\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\r\n                pathArray = R.parsePathString(pathArray);\r\n            }\r\n            if (!pathArray || !pathArray.length) {\r\n                return [[\"M\", 0, 0]];\r\n            }\r\n            var res = [],\r\n                x = 0,\r\n                y = 0,\r\n                mx = 0,\r\n                my = 0,\r\n                start = 0;\r\n            if (pathArray[0][0] == \"M\") {\r\n                x = +pathArray[0][1];\r\n                y = +pathArray[0][2];\r\n                mx = x;\r\n                my = y;\r\n                start++;\r\n                res[0] = [\"M\", x, y];\r\n            }\r\n            var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\r\n            for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\r\n                res.push(r = []);\r\n                pa = pathArray[i];\r\n                if (pa[0] != upperCase.call(pa[0])) {\r\n                    r[0] = upperCase.call(pa[0]);\r\n                    switch (r[0]) {\r\n                        case \"A\":\r\n                            r[1] = pa[1];\r\n                            r[2] = pa[2];\r\n                            r[3] = pa[3];\r\n                            r[4] = pa[4];\r\n                            r[5] = pa[5];\r\n                            r[6] = +(pa[6] + x);\r\n                            r[7] = +(pa[7] + y);\r\n                            break;\r\n                        case \"V\":\r\n                            r[1] = +pa[1] + y;\r\n                            break;\r\n                        case \"H\":\r\n                            r[1] = +pa[1] + x;\r\n                            break;\r\n                        case \"R\":\r\n                            var dots = [x, y][concat](pa.slice(1));\r\n                            for (var j = 2, jj = dots.length; j < jj; j++) {\r\n                                dots[j] = +dots[j] + x;\r\n                                dots[++j] = +dots[j] + y;\r\n                            }\r\n                            res.pop();\r\n                            res = res[concat](catmullRom2bezier(dots, crz));\r\n                            break;\r\n                        case \"M\":\r\n                            mx = +pa[1] + x;\r\n                            my = +pa[2] + y;\r\n                        default:\r\n                            for (j = 1, jj = pa.length; j < jj; j++) {\r\n                                r[j] = +pa[j] + ((j % 2) ? x : y);\r\n                            }\r\n                    }\r\n                } else if (pa[0] == \"R\") {\r\n                    dots = [x, y][concat](pa.slice(1));\r\n                    res.pop();\r\n                    res = res[concat](catmullRom2bezier(dots, crz));\r\n                    r = [\"R\"][concat](pa.slice(-2));\r\n                } else {\r\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\r\n                        r[k] = pa[k];\r\n                    }\r\n                }\r\n                switch (r[0]) {\r\n                    case \"Z\":\r\n                        x = mx;\r\n                        y = my;\r\n                        break;\r\n                    case \"H\":\r\n                        x = r[1];\r\n                        break;\r\n                    case \"V\":\r\n                        y = r[1];\r\n                        break;\r\n                    case \"M\":\r\n                        mx = r[r.length - 2];\r\n                        my = r[r.length - 1];\r\n                    default:\r\n                        x = r[r.length - 2];\r\n                        y = r[r.length - 1];\r\n                }\r\n            }\r\n            res.toString = R._path2string;\r\n            pth.abs = pathClone(res);\r\n            return res;\r\n        },\r\n        l2c = function (x1, y1, x2, y2) {\r\n            return [x1, y1, x2, y2, x2, y2];\r\n        },\r\n        q2c = function (x1, y1, ax, ay, x2, y2) {\r\n            var _13 = 1 / 3,\r\n                _23 = 2 / 3;\r\n            return [\r\n                    _13 * x1 + _23 * ax,\r\n                    _13 * y1 + _23 * ay,\r\n                    _13 * x2 + _23 * ax,\r\n                    _13 * y2 + _23 * ay,\r\n                    x2,\r\n                    y2\r\n                ];\r\n        },\r\n        a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n            // for more information of where this math came from visit:\r\n            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\r\n            var _120 = PI * 120 / 180,\r\n                rad = PI / 180 * (+angle || 0),\r\n                res = [],\r\n                xy,\r\n                rotate = cacher(function (x, y, rad) {\r\n                    var X = x * math.cos(rad) - y * math.sin(rad),\r\n                        Y = x * math.sin(rad) + y * math.cos(rad);\r\n                    return {x: X, y: Y};\r\n                });\r\n            if (!recursive) {\r\n                xy = rotate(x1, y1, -rad);\r\n                x1 = xy.x;\r\n                y1 = xy.y;\r\n                xy = rotate(x2, y2, -rad);\r\n                x2 = xy.x;\r\n                y2 = xy.y;\r\n                var cos = math.cos(PI / 180 * angle),\r\n                    sin = math.sin(PI / 180 * angle),\r\n                    x = (x1 - x2) / 2,\r\n                    y = (y1 - y2) / 2;\r\n                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\r\n                if (h > 1) {\r\n                    h = math.sqrt(h);\r\n                    rx = h * rx;\r\n                    ry = h * ry;\r\n                }\r\n                var rx2 = rx * rx,\r\n                    ry2 = ry * ry,\r\n                    k = (large_arc_flag == sweep_flag ? -1 : 1) *\r\n                        math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\r\n                    cx = k * rx * y / ry + (x1 + x2) / 2,\r\n                    cy = k * -ry * x / rx + (y1 + y2) / 2,\r\n                    f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\r\n                    f2 = math.asin(((y2 - cy) / ry).toFixed(9));\r\n\r\n                f1 = x1 < cx ? PI - f1 : f1;\r\n                f2 = x2 < cx ? PI - f2 : f2;\r\n                f1 < 0 && (f1 = PI * 2 + f1);\r\n                f2 < 0 && (f2 = PI * 2 + f2);\r\n                if (sweep_flag && f1 > f2) {\r\n                    f1 = f1 - PI * 2;\r\n                }\r\n                if (!sweep_flag && f2 > f1) {\r\n                    f2 = f2 - PI * 2;\r\n                }\r\n            } else {\r\n                f1 = recursive[0];\r\n                f2 = recursive[1];\r\n                cx = recursive[2];\r\n                cy = recursive[3];\r\n            }\r\n            var df = f2 - f1;\r\n            if (abs(df) > _120) {\r\n                var f2old = f2,\r\n                    x2old = x2,\r\n                    y2old = y2;\r\n                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n                x2 = cx + rx * math.cos(f2);\r\n                y2 = cy + ry * math.sin(f2);\r\n                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n            }\r\n            df = f2 - f1;\r\n            var c1 = math.cos(f1),\r\n                s1 = math.sin(f1),\r\n                c2 = math.cos(f2),\r\n                s2 = math.sin(f2),\r\n                t = math.tan(df / 4),\r\n                hx = 4 / 3 * rx * t,\r\n                hy = 4 / 3 * ry * t,\r\n                m1 = [x1, y1],\r\n                m2 = [x1 + hx * s1, y1 - hy * c1],\r\n                m3 = [x2 + hx * s2, y2 - hy * c2],\r\n                m4 = [x2, y2];\r\n            m2[0] = 2 * m1[0] - m2[0];\r\n            m2[1] = 2 * m1[1] - m2[1];\r\n            if (recursive) {\r\n                return [m2, m3, m4][concat](res);\r\n            } else {\r\n                res = [m2, m3, m4][concat](res).join()[split](\",\");\r\n                var newres = [];\r\n                for (var i = 0, ii = res.length; i < ii; i++) {\r\n                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n                }\r\n                return newres;\r\n            }\r\n        },\r\n        findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n            var t1 = 1 - t;\r\n            return {\r\n                x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\r\n                y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\r\n            };\r\n        },\r\n        curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n            var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\r\n                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\r\n                c = p1x - c1x,\r\n                t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,\r\n                t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,\r\n                y = [p1y, p2y],\r\n                x = [p1x, p2x],\r\n                dot;\r\n            abs(t1) > \"1e12\" && (t1 = .5);\r\n            abs(t2) > \"1e12\" && (t2 = .5);\r\n            if (t1 > 0 && t1 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            if (t2 > 0 && t2 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\r\n            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\r\n            c = p1y - c1y;\r\n            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;\r\n            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;\r\n            abs(t1) > \"1e12\" && (t1 = .5);\r\n            abs(t2) > \"1e12\" && (t2 = .5);\r\n            if (t1 > 0 && t1 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            if (t2 > 0 && t2 < 1) {\r\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\r\n                x.push(dot.x);\r\n                y.push(dot.y);\r\n            }\r\n            return {\r\n                min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},\r\n                max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}\r\n            };\r\n        }),\r\n        path2curve = R._path2curve = cacher(function (path, path2) {\r\n            var pth = !path2 && paths(path);\r\n            if (!path2 && pth.curve) {\r\n                return pathClone(pth.curve);\r\n            }\r\n            var p = pathToAbsolute(path),\r\n                p2 = path2 && pathToAbsolute(path2),\r\n                attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\r\n                attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\r\n                processPath = function (path, d, pcom) {\r\n                    var nx, ny, tq = {T:1, Q:1};\r\n                    if (!path) {\r\n                        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\r\n                    }\r\n                    !(path[0] in tq) && (d.qx = d.qy = null);\r\n                    switch (path[0]) {\r\n                        case \"M\":\r\n                            d.X = path[1];\r\n                            d.Y = path[2];\r\n                            break;\r\n                        case \"A\":\r\n                            path = [\"C\"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\r\n                            break;\r\n                        case \"S\":\r\n                            if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\r\n                                nx = d.x * 2 - d.bx;          // And reflect the previous\r\n                                ny = d.y * 2 - d.by;          // command's control point relative to the current point.\r\n                            }\r\n                            else {                            // or some else or nothing\r\n                                nx = d.x;\r\n                                ny = d.y;\r\n                            }\r\n                            path = [\"C\", nx, ny][concat](path.slice(1));\r\n                            break;\r\n                        case \"T\":\r\n                            if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\r\n                                d.qx = d.x * 2 - d.qx;        // And make a reflection similar\r\n                                d.qy = d.y * 2 - d.qy;        // to case \"S\".\r\n                            }\r\n                            else {                            // or something else or nothing\r\n                                d.qx = d.x;\r\n                                d.qy = d.y;\r\n                            }\r\n                            path = [\"C\"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\r\n                            break;\r\n                        case \"Q\":\r\n                            d.qx = path[1];\r\n                            d.qy = path[2];\r\n                            path = [\"C\"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\r\n                            break;\r\n                        case \"L\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], path[2]));\r\n                            break;\r\n                        case \"H\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, path[1], d.y));\r\n                            break;\r\n                        case \"V\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.x, path[1]));\r\n                            break;\r\n                        case \"Z\":\r\n                            path = [\"C\"][concat](l2c(d.x, d.y, d.X, d.Y));\r\n                            break;\r\n                    }\r\n                    return path;\r\n                },\r\n                fixArc = function (pp, i) {\r\n                    if (pp[i].length > 7) {\r\n                        pp[i].shift();\r\n                        var pi = pp[i];\r\n                        while (pi.length) {\r\n                            pp.splice(i++, 0, [\"C\"][concat](pi.splice(0, 6)));\r\n                        }\r\n                        pp.splice(i, 1);\r\n                        ii = mmax(p.length, p2 && p2.length || 0);\r\n                    }\r\n                },\r\n                fixM = function (path1, path2, a1, a2, i) {\r\n                    if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\r\n                        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\r\n                        a1.bx = 0;\r\n                        a1.by = 0;\r\n                        a1.x = path1[i][1];\r\n                        a1.y = path1[i][2];\r\n                        ii = mmax(p.length, p2 && p2.length || 0);\r\n                    }\r\n                };\r\n            for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\r\n                p[i] = processPath(p[i], attrs);\r\n                fixArc(p, i);\r\n                p2 && (p2[i] = processPath(p2[i], attrs2));\r\n                p2 && fixArc(p2, i);\r\n                fixM(p, p2, attrs, attrs2, i);\r\n                fixM(p2, p, attrs2, attrs, i);\r\n                var seg = p[i],\r\n                    seg2 = p2 && p2[i],\r\n                    seglen = seg.length,\r\n                    seg2len = p2 && seg2.length;\r\n                attrs.x = seg[seglen - 2];\r\n                attrs.y = seg[seglen - 1];\r\n                attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\r\n                attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\r\n                attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\r\n                attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\r\n                attrs2.x = p2 && seg2[seg2len - 2];\r\n                attrs2.y = p2 && seg2[seg2len - 1];\r\n            }\r\n            if (!p2) {\r\n                pth.curve = pathClone(p);\r\n            }\r\n            return p2 ? [p, p2] : p;\r\n        }, null, pathClone),\r\n        parseDots = R._parseDots = cacher(function (gradient) {\r\n            var dots = [];\r\n            for (var i = 0, ii = gradient.length; i < ii; i++) {\r\n                var dot = {},\r\n                    par = gradient[i].match(/^([^:]*):?([\\d\\.]*)/);\r\n                dot.color = R.getRGB(par[1]);\r\n                if (dot.color.error) {\r\n                    return null;\r\n                }\r\n                dot.color = dot.color.hex;\r\n                par[2] && (dot.offset = par[2] + \"%\");\r\n                dots.push(dot);\r\n            }\r\n            for (i = 1, ii = dots.length - 1; i < ii; i++) {\r\n                if (!dots[i].offset) {\r\n                    var start = toFloat(dots[i - 1].offset || 0),\r\n                        end = 0;\r\n                    for (var j = i + 1; j < ii; j++) {\r\n                        if (dots[j].offset) {\r\n                            end = dots[j].offset;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!end) {\r\n                        end = 100;\r\n                        j = ii;\r\n                    }\r\n                    end = toFloat(end);\r\n                    var d = (end - start) / (j - i + 1);\r\n                    for (; i < j; i++) {\r\n                        start += d;\r\n                        dots[i].offset = start + \"%\";\r\n                    }\r\n                }\r\n            }\r\n            return dots;\r\n        }),\r\n        tear = R._tear = function (el, paper) {\r\n            el == paper.top && (paper.top = el.prev);\r\n            el == paper.bottom && (paper.bottom = el.next);\r\n            el.next && (el.next.prev = el.prev);\r\n            el.prev && (el.prev.next = el.next);\r\n        },\r\n        tofront = R._tofront = function (el, paper) {\r\n            if (paper.top === el) {\r\n                return;\r\n            }\r\n            tear(el, paper);\r\n            el.next = null;\r\n            el.prev = paper.top;\r\n            paper.top.next = el;\r\n            paper.top = el;\r\n        },\r\n        toback = R._toback = function (el, paper) {\r\n            if (paper.bottom === el) {\r\n                return;\r\n            }\r\n            tear(el, paper);\r\n            el.next = paper.bottom;\r\n            el.prev = null;\r\n            paper.bottom.prev = el;\r\n            paper.bottom = el;\r\n        },\r\n        insertafter = R._insertafter = function (el, el2, paper) {\r\n            tear(el, paper);\r\n            el2 == paper.top && (paper.top = el);\r\n            el2.next && (el2.next.prev = el);\r\n            el.next = el2.next;\r\n            el.prev = el2;\r\n            el2.next = el;\r\n        },\r\n        insertbefore = R._insertbefore = function (el, el2, paper) {\r\n            tear(el, paper);\r\n            el2 == paper.bottom && (paper.bottom = el);\r\n            el2.prev && (el2.prev.next = el);\r\n            el.prev = el2.prev;\r\n            el2.prev = el;\r\n            el.next = el2;\r\n        },\r\n        /*\\\r\n         * Raphael.toMatrix\r\n         [ method ]\r\n         **\r\n         * Utility method\r\n         **\r\n         * Returns matrix of transformations applied to a given path\r\n         > Parameters\r\n         - path (string) path string\r\n         - transform (string|array) transformation string\r\n         = (object) @Matrix\r\n        \\*/\r\n        toMatrix = R.toMatrix = function (path, transform) {\r\n            var bb = pathDimensions(path),\r\n                el = {\r\n                    _: {\r\n                        transform: E\r\n                    },\r\n                    getBBox: function () {\r\n                        return bb;\r\n                    }\r\n                };\r\n            extractTransform(el, transform);\r\n            return el.matrix;\r\n        },\r\n        /*\\\r\n         * Raphael.transformPath\r\n         [ method ]\r\n         **\r\n         * Utility method\r\n         **\r\n         * Returns path transformed by a given transformation\r\n         > Parameters\r\n         - path (string) path string\r\n         - transform (string|array) transformation string\r\n         = (string) path\r\n        \\*/\r\n        transformPath = R.transformPath = function (path, transform) {\r\n            return mapPath(path, toMatrix(path, transform));\r\n        },\r\n        extractTransform = R._extractTransform = function (el, tstr) {\r\n            if (tstr == null) {\r\n                return el._.transform;\r\n            }\r\n            tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\r\n            var tdata = R.parseTransformString(tstr),\r\n                deg = 0,\r\n                dx = 0,\r\n                dy = 0,\r\n                sx = 1,\r\n                sy = 1,\r\n                _ = el._,\r\n                m = new Matrix;\r\n            _.transform = tdata || [];\r\n            if (tdata) {\r\n                for (var i = 0, ii = tdata.length; i < ii; i++) {\r\n                    var t = tdata[i],\r\n                        tlen = t.length,\r\n                        command = Str(t[0]).toLowerCase(),\r\n                        absolute = t[0] != command,\r\n                        inver = absolute ? m.invert() : 0,\r\n                        x1,\r\n                        y1,\r\n                        x2,\r\n                        y2,\r\n                        bb;\r\n                    if (command == \"t\" && tlen == 3) {\r\n                        if (absolute) {\r\n                            x1 = inver.x(0, 0);\r\n                            y1 = inver.y(0, 0);\r\n                            x2 = inver.x(t[1], t[2]);\r\n                            y2 = inver.y(t[1], t[2]);\r\n                            m.translate(x2 - x1, y2 - y1);\r\n                        } else {\r\n                            m.translate(t[1], t[2]);\r\n                        }\r\n                    } else if (command == \"r\") {\r\n                        if (tlen == 2) {\r\n                            bb = bb || el.getBBox(1);\r\n                            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                            deg += t[1];\r\n                        } else if (tlen == 4) {\r\n                            if (absolute) {\r\n                                x2 = inver.x(t[2], t[3]);\r\n                                y2 = inver.y(t[2], t[3]);\r\n                                m.rotate(t[1], x2, y2);\r\n                            } else {\r\n                                m.rotate(t[1], t[2], t[3]);\r\n                            }\r\n                            deg += t[1];\r\n                        }\r\n                    } else if (command == \"s\") {\r\n                        if (tlen == 2 || tlen == 3) {\r\n                            bb = bb || el.getBBox(1);\r\n                            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\r\n                            sx *= t[1];\r\n                            sy *= t[tlen - 1];\r\n                        } else if (tlen == 5) {\r\n                            if (absolute) {\r\n                                x2 = inver.x(t[3], t[4]);\r\n                                y2 = inver.y(t[3], t[4]);\r\n                                m.scale(t[1], t[2], x2, y2);\r\n                            } else {\r\n                                m.scale(t[1], t[2], t[3], t[4]);\r\n                            }\r\n                            sx *= t[1];\r\n                            sy *= t[2];\r\n                        }\r\n                    } else if (command == \"m\" && tlen == 7) {\r\n                        m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\r\n                    }\r\n                    _.dirtyT = 1;\r\n                    el.matrix = m;\r\n                }\r\n            }\r\n\r\n            /*\\\r\n             * Element.matrix\r\n             [ property (object) ]\r\n             **\r\n             * Keeps @Matrix object, which represents element transformation\r\n            \\*/\r\n            el.matrix = m;\r\n\r\n            _.sx = sx;\r\n            _.sy = sy;\r\n            _.deg = deg;\r\n            _.dx = dx = m.e;\r\n            _.dy = dy = m.f;\r\n\r\n            if (sx == 1 && sy == 1 && !deg && _.bbox) {\r\n                _.bbox.x += +dx;\r\n                _.bbox.y += +dy;\r\n            } else {\r\n                _.dirtyT = 1;\r\n            }\r\n        },\r\n        getEmpty = function (item) {\r\n            var l = item[0];\r\n            switch (l.toLowerCase()) {\r\n                case \"t\": return [l, 0, 0];\r\n                case \"m\": return [l, 1, 0, 0, 1, 0, 0];\r\n                case \"r\": if (item.length == 4) {\r\n                    return [l, 0, item[2], item[3]];\r\n                } else {\r\n                    return [l, 0];\r\n                }\r\n                case \"s\": if (item.length == 5) {\r\n                    return [l, 1, 1, item[3], item[4]];\r\n                } else if (item.length == 3) {\r\n                    return [l, 1, 1];\r\n                } else {\r\n                    return [l, 1];\r\n                }\r\n            }\r\n        },\r\n        equaliseTransform = R._equaliseTransform = function (t1, t2) {\r\n            t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\r\n            t1 = R.parseTransformString(t1) || [];\r\n            t2 = R.parseTransformString(t2) || [];\r\n            var maxlength = mmax(t1.length, t2.length),\r\n                from = [],\r\n                to = [],\r\n                i = 0, j, jj,\r\n                tt1, tt2;\r\n            for (; i < maxlength; i++) {\r\n                tt1 = t1[i] || getEmpty(t2[i]);\r\n                tt2 = t2[i] || getEmpty(tt1);\r\n                if ((tt1[0] != tt2[0]) ||\r\n                    (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\r\n                    (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\r\n                    ) {\r\n                    return;\r\n                }\r\n                from[i] = [];\r\n                to[i] = [];\r\n                for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {\r\n                    j in tt1 && (from[i][j] = tt1[j]);\r\n                    j in tt2 && (to[i][j] = tt2[j]);\r\n                }\r\n            }\r\n            return {\r\n                from: from,\r\n                to: to\r\n            };\r\n        };\r\n    R._getContainer = function (x, y, w, h) {\r\n        var container;\r\n        container = h == null && !R.is(x, \"object\") ? g.doc.getElementById(x) : x;\r\n        if (container == null) {\r\n            return;\r\n        }\r\n        if (container.tagName) {\r\n            if (y == null) {\r\n                return {\r\n                    container: container,\r\n                    width: container.style.pixelWidth || container.offsetWidth,\r\n                    height: container.style.pixelHeight || container.offsetHeight\r\n                };\r\n            } else {\r\n                return {\r\n                    container: container,\r\n                    width: y,\r\n                    height: w\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            container: 1,\r\n            x: x,\r\n            y: y,\r\n            width: w,\r\n            height: h\r\n        };\r\n    };\r\n    /*\\\r\n     * Raphael.pathToRelative\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Converts path to relative form\r\n     > Parameters\r\n     - pathString (string|array) path string or array of segments\r\n     = (array) array of segments.\r\n    \\*/\r\n    R.pathToRelative = pathToRelative;\r\n    R._engine = {};\r\n    /*\\\r\n     * Raphael.path2curve\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Converts path to a new path where all segments are cubic bezier curves.\r\n     > Parameters\r\n     - pathString (string|array) path string or array of segments\r\n     = (array) array of segments.\r\n    \\*/\r\n    R.path2curve = path2curve;\r\n    /*\\\r\n     * Raphael.matrix\r\n     [ method ]\r\n     **\r\n     * Utility method\r\n     **\r\n     * Returns matrix based on given parameters.\r\n     > Parameters\r\n     - a (number)\r\n     - b (number)\r\n     - c (number)\r\n     - d (number)\r\n     - e (number)\r\n     - f (number)\r\n     = (object) @Matrix\r\n    \\*/\r\n    R.matrix = function (a, b, c, d, e, f) {\r\n        return new Matrix(a, b, c, d, e, f);\r\n    };\r\n    function Matrix(a, b, c, d, e, f) {\r\n        if (a != null) {\r\n            this.a = +a;\r\n            this.b = +b;\r\n            this.c = +c;\r\n            this.d = +d;\r\n            this.e = +e;\r\n            this.f = +f;\r\n        } else {\r\n            this.a = 1;\r\n            this.b = 0;\r\n            this.c = 0;\r\n            this.d = 1;\r\n            this.e = 0;\r\n            this.f = 0;\r\n        }\r\n    }\r\n    (function (matrixproto) {\r\n        /*\\\r\n         * Matrix.add\r\n         [ method ]\r\n         **\r\n         * Adds given matrix to existing one.\r\n         > Parameters\r\n         - a (number)\r\n         - b (number)\r\n         - c (number)\r\n         - d (number)\r\n         - e (number)\r\n         - f (number)\r\n         or\r\n         - matrix (object) @Matrix\r\n        \\*/\r\n        matrixproto.add = function (a, b, c, d, e, f) {\r\n            var out = [[], [], []],\r\n                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\r\n                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\r\n                x, y, z, res;\r\n\r\n            if (a && a instanceof Matrix) {\r\n                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\r\n            }\r\n\r\n            for (x = 0; x < 3; x++) {\r\n                for (y = 0; y < 3; y++) {\r\n                    res = 0;\r\n                    for (z = 0; z < 3; z++) {\r\n                        res += m[x][z] * matrix[z][y];\r\n                    }\r\n                    out[x][y] = res;\r\n                }\r\n            }\r\n            this.a = out[0][0];\r\n            this.b = out[1][0];\r\n            this.c = out[0][1];\r\n            this.d = out[1][1];\r\n            this.e = out[0][2];\r\n            this.f = out[1][2];\r\n        };\r\n        /*\\\r\n         * Matrix.invert\r\n         [ method ]\r\n         **\r\n         * Returns inverted version of the matrix\r\n         = (object) @Matrix\r\n        \\*/\r\n        matrixproto.invert = function () {\r\n            var me = this,\r\n                x = me.a * me.d - me.b * me.c;\r\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\r\n        };\r\n        /*\\\r\n         * Matrix.clone\r\n         [ method ]\r\n         **\r\n         * Returns copy of the matrix\r\n         = (object) @Matrix\r\n        \\*/\r\n        matrixproto.clone = function () {\r\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\r\n        };\r\n        /*\\\r\n         * Matrix.translate\r\n         [ method ]\r\n         **\r\n         * Translate the matrix\r\n         > Parameters\r\n         - x (number)\r\n         - y (number)\r\n        \\*/\r\n        matrixproto.translate = function (x, y) {\r\n            this.add(1, 0, 0, 1, x, y);\r\n        };\r\n        /*\\\r\n         * Matrix.scale\r\n         [ method ]\r\n         **\r\n         * Scales the matrix\r\n         > Parameters\r\n         - x (number)\r\n         - y (number) #optional\r\n         - cx (number) #optional\r\n         - cy (number) #optional\r\n        \\*/\r\n        matrixproto.scale = function (x, y, cx, cy) {\r\n            y == null && (y = x);\r\n            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\r\n            this.add(x, 0, 0, y, 0, 0);\r\n            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\r\n        };\r\n        /*\\\r\n         * Matrix.rotate\r\n         [ method ]\r\n         **\r\n         * Rotates the matrix\r\n         > Parameters\r\n         - a (number)\r\n         - x (number)\r\n         - y (number)\r\n        \\*/\r\n        matrixproto.rotate = function (a, x, y) {\r\n            a = R.rad(a);\r\n            x = x || 0;\r\n            y = y || 0;\r\n            var cos = +math.cos(a).toFixed(9),\r\n                sin = +math.sin(a).toFixed(9);\r\n            this.add(cos, sin, -sin, cos, x, y);\r\n            this.add(1, 0, 0, 1, -x, -y);\r\n        };\r\n        /*\\\r\n         * Matrix.x\r\n         [ method ]\r\n         **\r\n         * Return x coordinate for given point after transformation described by the matrix. See also @Matrix.y\r\n         > Parameters\r\n         - x (number)\r\n         - y (number)\r\n         = (number) x\r\n        \\*/\r\n        matrixproto.x = function (x, y) {\r\n            return x * this.a + y * this.c + this.e;\r\n        };\r\n        /*\\\r\n         * Matrix.y\r\n         [ method ]\r\n         **\r\n         * Return y coordinate for given point after transformation described by the matrix. See also @Matrix.x\r\n         > Parameters\r\n         - x (number)\r\n         - y (number)\r\n         = (number) y\r\n        \\*/\r\n        matrixproto.y = function (x, y) {\r\n            return x * this.b + y * this.d + this.f;\r\n        };\r\n        matrixproto.get = function (i) {\r\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\r\n        };\r\n        matrixproto.toString = function () {\r\n            return R.svg ?\r\n                \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\" :\r\n                [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();\r\n        };\r\n        matrixproto.toFilter = function () {\r\n            return \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + this.get(0) +\r\n                \", M12=\" + this.get(2) + \", M21=\" + this.get(1) + \", M22=\" + this.get(3) +\r\n                \", Dx=\" + this.get(4) + \", Dy=\" + this.get(5) + \", sizingmethod='auto expand')\";\r\n        };\r\n        matrixproto.offset = function () {\r\n            return [this.e.toFixed(4), this.f.toFixed(4)];\r\n        };\r\n        function norm(a) {\r\n            return a[0] * a[0] + a[1] * a[1];\r\n        }\r\n        function normalize(a) {\r\n            var mag = math.sqrt(norm(a));\r\n            a[0] && (a[0] /= mag);\r\n            a[1] && (a[1] /= mag);\r\n        }\r\n        /*\\\r\n         * Matrix.split\r\n         [ method ]\r\n         **\r\n         * Splits matrix into primitive transformations\r\n         = (object) in format:\r\n         o dx (number) translation by x\r\n         o dy (number) translation by y\r\n         o scalex (number) scale by x\r\n         o scaley (number) scale by y\r\n         o shear (number) shear\r\n         o rotate (number) rotation in deg\r\n         o isSimple (boolean) could it be represented via simple transformations\r\n        \\*/\r\n        matrixproto.split = function () {\r\n            var out = {};\r\n            // translation\r\n            out.dx = this.e;\r\n            out.dy = this.f;\r\n\r\n            // scale and shear\r\n            var row = [[this.a, this.c], [this.b, this.d]];\r\n            out.scalex = math.sqrt(norm(row[0]));\r\n            normalize(row[0]);\r\n\r\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\r\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\r\n\r\n            out.scaley = math.sqrt(norm(row[1]));\r\n            normalize(row[1]);\r\n            out.shear /= out.scaley;\r\n\r\n            // rotation\r\n            var sin = -row[0][1],\r\n                cos = row[1][1];\r\n            if (cos < 0) {\r\n                out.rotate = R.deg(math.acos(cos));\r\n                if (sin < 0) {\r\n                    out.rotate = 360 - out.rotate;\r\n                }\r\n            } else {\r\n                out.rotate = R.deg(math.asin(sin));\r\n            }\r\n\r\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\r\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\r\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\r\n            return out;\r\n        };\r\n        /*\\\r\n         * Matrix.toTransformString\r\n         [ method ]\r\n         **\r\n         * Return transform string that represents given matrix\r\n         = (string) transform string\r\n        \\*/\r\n        matrixproto.toTransformString = function (shorter) {\r\n            var s = shorter || this[split]();\r\n            if (s.isSimple) {\r\n                s.scalex = +s.scalex.toFixed(4);\r\n                s.scaley = +s.scaley.toFixed(4);\r\n                s.rotate = +s.rotate.toFixed(4);\r\n                return  (s.dx || s.dy ? \"t\" + [s.dx, s.dy] : E) +\r\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\r\n                        (s.rotate ? \"r\" + [s.rotate, 0, 0] : E);\r\n            } else {\r\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\r\n            }\r\n        };\r\n    })(Matrix.prototype);\r\n\r\n    // WebKit rendering bug workaround method\r\n    var version = navigator.userAgent.match(/Version\\/(.*?)\\s/) || navigator.userAgent.match(/Chrome\\/(\\d+)/);\r\n    if ((navigator.vendor == \"Apple Computer, Inc.\") && (version && version[1] < 4 || navigator.platform.slice(0, 2) == \"iP\") ||\r\n        (navigator.vendor == \"Google Inc.\" && version && version[1] < 8)) {\r\n        /*\\\r\n         * Paper.safari\r\n         [ method ]\r\n         **\r\n         * There is an inconvenient rendering bug in Safari (WebKit):\r\n         * sometimes the rendering should be forced.\r\n         * This method should help with dealing with this bug.\r\n        \\*/\r\n        paperproto.safari = function () {\r\n            var rect = this.rect(-99, -99, this.width + 99, this.height + 99).attr({stroke: \"none\"});\r\n            setTimeout(function () {rect.remove();});\r\n        };\r\n    } else {\r\n        paperproto.safari = fun;\r\n    }\r\n\r\n    var preventDefault = function () {\r\n        this.returnValue = false;\r\n    },\r\n    preventTouch = function () {\r\n        return this.originalEvent.preventDefault();\r\n    },\r\n    stopPropagation = function () {\r\n        this.cancelBubble = true;\r\n    },\r\n    stopTouch = function () {\r\n        return this.originalEvent.stopPropagation();\r\n    },\r\n    getEventPosition = function (e) {\r\n        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\r\n\r\n        return {\r\n            x: e.clientX + scrollX,\r\n            y: e.clientY + scrollY\r\n        };\r\n    },\r\n    addEvent = (function () {\r\n        if (g.doc.addEventListener) {\r\n            return function (obj, type, fn, element) {\r\n                var f = function (e) {\r\n                    var pos = getEventPosition(e);\r\n                    return fn.call(element, e, pos.x, pos.y);\r\n                };\r\n                obj.addEventListener(type, f, false);\r\n\r\n                if (supportsTouch && touchMap[type]) {\r\n                    var _f = function (e) {\r\n                        var pos = getEventPosition(e),\r\n                            olde = e;\r\n\r\n                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\r\n                            if (e.targetTouches[i].target == obj) {\r\n                                e = e.targetTouches[i];\r\n                                e.originalEvent = olde;\r\n                                e.preventDefault = preventTouch;\r\n                                e.stopPropagation = stopTouch;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        return fn.call(element, e, pos.x, pos.y);\r\n                    };\r\n                    obj.addEventListener(touchMap[type], _f, false);\r\n                }\r\n\r\n                return function () {\r\n                    obj.removeEventListener(type, f, false);\r\n\r\n                    if (supportsTouch && touchMap[type])\r\n                        obj.removeEventListener(touchMap[type], f, false);\r\n\r\n                    return true;\r\n                };\r\n            };\r\n        } else if (g.doc.attachEvent) {\r\n            return function (obj, type, fn, element) {\r\n                var f = function (e) {\r\n                    e = e || g.win.event;\r\n                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n                        scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\r\n                        x = e.clientX + scrollX,\r\n                        y = e.clientY + scrollY;\r\n                    e.preventDefault = e.preventDefault || preventDefault;\r\n                    e.stopPropagation = e.stopPropagation || stopPropagation;\r\n                    return fn.call(element, e, x, y);\r\n                };\r\n                obj.attachEvent(\"on\" + type, f);\r\n                var detacher = function () {\r\n                    obj.detachEvent(\"on\" + type, f);\r\n                    return true;\r\n                };\r\n                return detacher;\r\n            };\r\n        }\r\n    })(),\r\n    drag = [],\r\n    dragMove = function (e) {\r\n        var x = e.clientX,\r\n            y = e.clientY,\r\n            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\r\n            dragi,\r\n            j = drag.length;\r\n        while (j--) {\r\n            dragi = drag[j];\r\n            if (supportsTouch && e.touches) {\r\n                var i = e.touches.length,\r\n                    touch;\r\n                while (i--) {\r\n                    touch = e.touches[i];\r\n                    if (touch.identifier == dragi.el._drag.id) {\r\n                        x = touch.clientX;\r\n                        y = touch.clientY;\r\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                e.preventDefault();\r\n            }\r\n            var node = dragi.el.node,\r\n                o,\r\n                next = node.nextSibling,\r\n                parent = node.parentNode,\r\n                display = node.style.display;\r\n            g.win.opera && parent.removeChild(node);\r\n            node.style.display = \"none\";\r\n            o = dragi.el.paper.getElementByPoint(x, y);\r\n            node.style.display = display;\r\n            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\r\n            o && eve(\"raphael.drag.over.\" + dragi.el.id, dragi.el, o);\r\n            x += scrollX;\r\n            y += scrollY;\r\n            eve(\"raphael.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\r\n        }\r\n    },\r\n    dragUp = function (e) {\r\n        R.unmousemove(dragMove).unmouseup(dragUp);\r\n        var i = drag.length,\r\n            dragi;\r\n        while (i--) {\r\n            dragi = drag[i];\r\n            dragi.el._drag = {};\r\n            eve(\"raphael.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\r\n        }\r\n        drag = [];\r\n    },\r\n    /*\\\r\n     * Raphael.el\r\n     [ property (object) ]\r\n     **\r\n     * You can add your own method to elements. This is usefull when you want to hack default functionality or\r\n     * want to wrap some common transformation or attributes in one method. In difference to canvas methods,\r\n     * you can redefine element method at any time. Expending element methods wouldn’t affect set.\r\n     > Usage\r\n     | Raphael.el.red = function () {\r\n     |     this.attr({fill: \"#f00\"});\r\n     | };\r\n     | // then use it\r\n     | paper.circle(100, 100, 20).red();\r\n    \\*/\r\n    elproto = R.el = {};\r\n    /*\\\r\n     * Element.click\r\n     [ method ]\r\n     **\r\n     * Adds event handler for click for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unclick\r\n     [ method ]\r\n     **\r\n     * Removes event handler for click for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.dblclick\r\n     [ method ]\r\n     **\r\n     * Adds event handler for double click for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.undblclick\r\n     [ method ]\r\n     **\r\n     * Removes event handler for double click for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mousedown\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mousedown for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmousedown\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mousedown for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mousemove\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mousemove for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmousemove\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mousemove for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mouseout\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mouseout for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmouseout\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mouseout for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mouseover\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mouseover for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmouseover\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mouseover for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.mouseup\r\n     [ method ]\r\n     **\r\n     * Adds event handler for mouseup for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.unmouseup\r\n     [ method ]\r\n     **\r\n     * Removes event handler for mouseup for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchstart\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchstart for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchstart\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchstart for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchmove\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchmove for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchmove\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchmove for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchend\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchend for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchend\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchend for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n\r\n    /*\\\r\n     * Element.touchcancel\r\n     [ method ]\r\n     **\r\n     * Adds event handler for touchcancel for the element.\r\n     > Parameters\r\n     - handler (function) handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    /*\\\r\n     * Element.untouchcancel\r\n     [ method ]\r\n     **\r\n     * Removes event handler for touchcancel for the element.\r\n     > Parameters\r\n     - handler (function) #optional handler for the event\r\n     = (object) @Element\r\n    \\*/\r\n    for (var i = events.length; i--;) {\r\n        (function (eventName) {\r\n            R[eventName] = elproto[eventName] = function (fn, scope) {\r\n                if (R.is(fn, \"function\")) {\r\n                    this.events = this.events || [];\r\n                    this.events.push({name: eventName, f: fn, unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)});\r\n                }\r\n                return this;\r\n            };\r\n            R[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\r\n                var events = this.events || [],\r\n                    l = events.length;\r\n                while (l--){\r\n                    if (events[l].name == eventName && (R.is(fn, \"undefined\") || events[l].f == fn)) {\r\n                        events[l].unbind();\r\n                        events.splice(l, 1);\r\n                        !events.length && delete this.events;\r\n                    }\r\n                }\r\n                return this;\r\n            };\r\n        })(events[i]);\r\n    }\r\n\r\n    /*\\\r\n     * Element.data\r\n     [ method ]\r\n     **\r\n     * Adds or retrieves given value asociated with given key.\r\n     ** \r\n     * See also @Element.removeData\r\n     > Parameters\r\n     - key (string) key to store data\r\n     - value (any) #optional value to store\r\n     = (object) @Element\r\n     * or, if value is not specified:\r\n     = (any) value\r\n     * or, if key and value are not specified:\r\n     = (object) Key/value pairs for all the data associated with the element.\r\n     > Usage\r\n     | for (var i = 0, i < 5, i++) {\r\n     |     paper.circle(10 + 15 * i, 10, 10)\r\n     |          .attr({fill: \"#000\"})\r\n     |          .data(\"i\", i)\r\n     |          .click(function () {\r\n     |             alert(this.data(\"i\"));\r\n     |          });\r\n     | }\r\n    \\*/\r\n    elproto.data = function (key, value) {\r\n        var data = eldata[this.id] = eldata[this.id] || {};\r\n        if (arguments.length == 0) {\r\n            return data;\r\n        }\r\n        if (arguments.length == 1) {\r\n            if (R.is(key, \"object\")) {\r\n                for (var i in key) if (key[has](i)) {\r\n                    this.data(i, key[i]);\r\n                }\r\n                return this;\r\n            }\r\n            eve(\"raphael.data.get.\" + this.id, this, data[key], key);\r\n            return data[key];\r\n        }\r\n        data[key] = value;\r\n        eve(\"raphael.data.set.\" + this.id, this, value, key);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.removeData\r\n     [ method ]\r\n     **\r\n     * Removes value associated with an element by given key.\r\n     * If key is not provided, removes all the data of the element.\r\n     > Parameters\r\n     - key (string) #optional key\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.removeData = function (key) {\r\n        if (key == null) {\r\n            eldata[this.id] = {};\r\n        } else {\r\n            eldata[this.id] && delete eldata[this.id][key];\r\n        }\r\n        return this;\r\n    };\r\n     /*\\\r\n     * Element.getData\r\n     [ method ]\r\n     **\r\n     * Retrieves the element data\r\n     = (object) data\r\n    \\*/\r\n    elproto.getData = function () {\r\n        return clone(eldata[this.id] || {});\r\n    };\r\n    /*\\\r\n     * Element.hover\r\n     [ method ]\r\n     **\r\n     * Adds event handlers for hover for the element.\r\n     > Parameters\r\n     - f_in (function) handler for hover in\r\n     - f_out (function) handler for hover out\r\n     - icontext (object) #optional context for hover in handler\r\n     - ocontext (object) #optional context for hover out handler\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\r\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\r\n    };\r\n    /*\\\r\n     * Element.unhover\r\n     [ method ]\r\n     **\r\n     * Removes event handlers for hover for the element.\r\n     > Parameters\r\n     - f_in (function) handler for hover in\r\n     - f_out (function) handler for hover out\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.unhover = function (f_in, f_out) {\r\n        return this.unmouseover(f_in).unmouseout(f_out);\r\n    };\r\n    var draggable = [];\r\n    /*\\\r\n     * Element.drag\r\n     [ method ]\r\n     **\r\n     * Adds event handlers for drag of the element.\r\n     > Parameters\r\n     - onmove (function) handler for moving\r\n     - onstart (function) handler for drag start\r\n     - onend (function) handler for drag end\r\n     - mcontext (object) #optional context for moving handler\r\n     - scontext (object) #optional context for drag start handler\r\n     - econtext (object) #optional context for drag end handler\r\n     * Additionaly following `drag` events will be triggered: `drag.start.<id>` on start, \r\n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element will be dragged over another element \r\n     * `drag.over.<id>` will be fired as well.\r\n     *\r\n     * Start event and start handler will be called in specified context or in context of the element with following parameters:\r\n     o x (number) x position of the mouse\r\n     o y (number) y position of the mouse\r\n     o event (object) DOM event object\r\n     * Move event and move handler will be called in specified context or in context of the element with following parameters:\r\n     o dx (number) shift by x from the start point\r\n     o dy (number) shift by y from the start point\r\n     o x (number) x position of the mouse\r\n     o y (number) y position of the mouse\r\n     o event (object) DOM event object\r\n     * End event and end handler will be called in specified context or in context of the element with following parameters:\r\n     o event (object) DOM event object\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\r\n        function start(e) {\r\n            (e.originalEvent || e).preventDefault();\r\n            var x = e.clientX,\r\n                y = e.clientY,\r\n                scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\r\n                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\r\n            this._drag.id = e.identifier;\r\n            if (supportsTouch && e.touches) {\r\n                var i = e.touches.length, touch;\r\n                while (i--) {\r\n                    touch = e.touches[i];\r\n                    this._drag.id = touch.identifier;\r\n                    if (touch.identifier == this._drag.id) {\r\n                        x = touch.clientX;\r\n                        y = touch.clientY;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            this._drag.x = x + scrollX;\r\n            this._drag.y = y + scrollY;\r\n            !drag.length && R.mousemove(dragMove).mouseup(dragUp);\r\n            drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\r\n            onstart && eve.on(\"raphael.drag.start.\" + this.id, onstart);\r\n            onmove && eve.on(\"raphael.drag.move.\" + this.id, onmove);\r\n            onend && eve.on(\"raphael.drag.end.\" + this.id, onend);\r\n            eve(\"raphael.drag.start.\" + this.id, start_scope || move_scope || this, e.clientX + scrollX, e.clientY + scrollY, e);\r\n        }\r\n        this._drag = {};\r\n        draggable.push({el: this, start: start});\r\n        this.mousedown(start);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.onDragOver\r\n     [ method ]\r\n     **\r\n     * Shortcut for assigning event handler for `drag.over.<id>` event, where id is id of the element (see @Element.id).\r\n     > Parameters\r\n     - f (function) handler for event, first argument would be the element you are dragging over\r\n    \\*/\r\n    elproto.onDragOver = function (f) {\r\n        f ? eve.on(\"raphael.drag.over.\" + this.id, f) : eve.unbind(\"raphael.drag.over.\" + this.id);\r\n    };\r\n    /*\\\r\n     * Element.undrag\r\n     [ method ]\r\n     **\r\n     * Removes all drag event handlers from given element.\r\n    \\*/\r\n    elproto.undrag = function () {\r\n        var i = draggable.length;\r\n        while (i--) if (draggable[i].el == this) {\r\n            this.unmousedown(draggable[i].start);\r\n            draggable.splice(i, 1);\r\n            eve.unbind(\"raphael.drag.*.\" + this.id);\r\n        }\r\n        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);\r\n        drag = [];\r\n    };\r\n    /*\\\r\n     * Paper.circle\r\n     [ method ]\r\n     **\r\n     * Draws a circle.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the centre\r\n     - y (number) y coordinate of the centre\r\n     - r (number) radius\r\n     = (object) Raphaël element object with type “circle”\r\n     **\r\n     > Usage\r\n     | var c = paper.circle(50, 50, 40);\r\n    \\*/\r\n    paperproto.circle = function (x, y, r) {\r\n        var out = R._engine.circle(this, x || 0, y || 0, r || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.rect\r\n     [ method ]\r\n     *\r\n     * Draws a rectangle.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the top left corner\r\n     - y (number) y coordinate of the top left corner\r\n     - width (number) width\r\n     - height (number) height\r\n     - r (number) #optional radius for rounded corners, default is 0\r\n     = (object) Raphaël element object with type “rect”\r\n     **\r\n     > Usage\r\n     | // regular rectangle\r\n     | var c = paper.rect(10, 10, 50, 50);\r\n     | // rectangle with rounded corners\r\n     | var c = paper.rect(40, 40, 50, 50, 10);\r\n    \\*/\r\n    paperproto.rect = function (x, y, w, h, r) {\r\n        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.ellipse\r\n     [ method ]\r\n     **\r\n     * Draws an ellipse.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the centre\r\n     - y (number) y coordinate of the centre\r\n     - rx (number) horizontal radius\r\n     - ry (number) vertical radius\r\n     = (object) Raphaël element object with type “ellipse”\r\n     **\r\n     > Usage\r\n     | var c = paper.ellipse(50, 50, 40, 20);\r\n    \\*/\r\n    paperproto.ellipse = function (x, y, rx, ry) {\r\n        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.path\r\n     [ method ]\r\n     **\r\n     * Creates a path element by given path data string.\r\n     > Parameters\r\n     - pathString (string) #optional path string in SVG format.\r\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numercal form. Example:\r\n     | \"M10,20L30,40\"\r\n     * Here we can see two commands: “M”, with arguments `(10, 20)` and “L” with arguments `(30, 40)`. Upper case letter mean command is absolute, lower case—relative.\r\n     *\r\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a>.</p>\r\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\r\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\r\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\r\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\r\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\r\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\r\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\r\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\r\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\r\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\r\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\r\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\r\n     * * “Catmull-Rom curveto” is a not standard SVG command and added in 2.0 to make life easier.\r\n     * Note: there is a special case when path consist of just three commands: “M10,10R…z”. In this case path will smoothly connects to its beginning.\r\n     > Usage\r\n     | var c = paper.path(\"M10 10L90 90\");\r\n     | // draw a diagonal line:\r\n     | // move to 10,10, line to 90,90\r\n     * For example of path strings, check out these icons: http://raphaeljs.com/icons/\r\n    \\*/\r\n    paperproto.path = function (pathString) {\r\n        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);\r\n        var out = R._engine.path(R.format[apply](R, arguments), this);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.image\r\n     [ method ]\r\n     **\r\n     * Embeds an image into the surface.\r\n     **\r\n     > Parameters\r\n     **\r\n     - src (string) URI of the source image\r\n     - x (number) x coordinate position\r\n     - y (number) y coordinate position\r\n     - width (number) width of the image\r\n     - height (number) height of the image\r\n     = (object) Raphaël element object with type “image”\r\n     **\r\n     > Usage\r\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\r\n    \\*/\r\n    paperproto.image = function (src, x, y, w, h) {\r\n        var out = R._engine.image(this, src || \"about:blank\", x || 0, y || 0, w || 0, h || 0);\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.text\r\n     [ method ]\r\n     **\r\n     * Draws a text string. If you need line breaks, put “\\n” in the string.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate position\r\n     - y (number) y coordinate position\r\n     - text (string) The text string to draw\r\n     = (object) Raphaël element object with type “text”\r\n     **\r\n     > Usage\r\n     | var t = paper.text(50, 50, \"Raphaël\\nkicks\\nbutt!\");\r\n    \\*/\r\n    paperproto.text = function (x, y, text) {\r\n        var out = R._engine.text(this, x || 0, y || 0, Str(text));\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.set\r\n     [ method ]\r\n     **\r\n     * Creates array-like object to keep and operate several elements at once.\r\n     * Warning: it doesn’t create any elements for itself in the page, it just groups existing elements.\r\n     * Sets act as pseudo elements — all methods available to an element can be used on a set.\r\n     = (object) array-like object that represents set of elements\r\n     **\r\n     > Usage\r\n     | var st = paper.set();\r\n     | st.push(\r\n     |     paper.circle(10, 10, 5),\r\n     |     paper.circle(30, 10, 5)\r\n     | );\r\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\r\n    \\*/\r\n    paperproto.set = function (itemsArray) {\r\n        !R.is(itemsArray, \"array\") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));\r\n        var out = new Set(itemsArray);\r\n        this.__set__ && this.__set__.push(out);\r\n        out[\"paper\"] = this;\r\n        out[\"type\"] = \"set\";\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.setStart\r\n     [ method ]\r\n     **\r\n     * Creates @Paper.set. All elements that will be created after calling this method and before calling\r\n     * @Paper.setFinish will be added to the set.\r\n     **\r\n     > Usage\r\n     | paper.setStart();\r\n     | paper.circle(10, 10, 5),\r\n     | paper.circle(30, 10, 5)\r\n     | var st = paper.setFinish();\r\n     | st.attr({fill: \"red\"}); // changes the fill of both circles\r\n    \\*/\r\n    paperproto.setStart = function (set) {\r\n        this.__set__ = set || this.set();\r\n    };\r\n    /*\\\r\n     * Paper.setFinish\r\n     [ method ]\r\n     **\r\n     * See @Paper.setStart. This method finishes catching and returns resulting set.\r\n     **\r\n     = (object) set\r\n    \\*/\r\n    paperproto.setFinish = function (set) {\r\n        var out = this.__set__;\r\n        delete this.__set__;\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Paper.setSize\r\n     [ method ]\r\n     **\r\n     * If you need to change dimensions of the canvas call this method\r\n     **\r\n     > Parameters\r\n     **\r\n     - width (number) new width of the canvas\r\n     - height (number) new height of the canvas\r\n    \\*/\r\n    paperproto.setSize = function (width, height) {\r\n        return R._engine.setSize.call(this, width, height);\r\n    };\r\n    /*\\\r\n     * Paper.setViewBox\r\n     [ method ]\r\n     **\r\n     * Sets the view box of the paper. Practically it gives you ability to zoom and pan whole paper surface by \r\n     * specifying new boundaries.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) new x position, default is `0`\r\n     - y (number) new y position, default is `0`\r\n     - w (number) new width of the canvas\r\n     - h (number) new height of the canvas\r\n     - fit (boolean) `true` if you want graphics to fit into new boundary box\r\n    \\*/\r\n    paperproto.setViewBox = function (x, y, w, h, fit) {\r\n        return R._engine.setViewBox.call(this, x, y, w, h, fit);\r\n    };\r\n    /*\\\r\n     * Paper.top\r\n     [ property ]\r\n     **\r\n     * Points to the topmost element on the paper\r\n    \\*/\r\n    /*\\\r\n     * Paper.bottom\r\n     [ property ]\r\n     **\r\n     * Points to the bottom element on the paper\r\n    \\*/\r\n    paperproto.top = paperproto.bottom = null;\r\n    /*\\\r\n     * Paper.raphael\r\n     [ property ]\r\n     **\r\n     * Points to the @Raphael object/function\r\n    \\*/\r\n    paperproto.raphael = R;\r\n    var getOffset = function (elem) {\r\n        var box = elem.getBoundingClientRect(),\r\n            doc = elem.ownerDocument,\r\n            body = doc.body,\r\n            docElem = doc.documentElement,\r\n            clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\r\n            top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\r\n            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\r\n        return {\r\n            y: top,\r\n            x: left\r\n        };\r\n    };\r\n    /*\\\r\n     * Paper.getElementByPoint\r\n     [ method ]\r\n     **\r\n     * Returns you topmost element under given point.\r\n     **\r\n     = (object) Raphaël element object\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate from the top left corner of the window\r\n     - y (number) y coordinate from the top left corner of the window\r\n     > Usage\r\n     | paper.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\r\n    \\*/\r\n    paperproto.getElementByPoint = function (x, y) {\r\n        var paper = this,\r\n            svg = paper.canvas,\r\n            target = g.doc.elementFromPoint(x, y);\r\n        if (g.win.opera && target.tagName == \"svg\") {\r\n            var so = getOffset(svg),\r\n                sr = svg.createSVGRect();\r\n            sr.x = x - so.x;\r\n            sr.y = y - so.y;\r\n            sr.width = sr.height = 1;\r\n            var hits = svg.getIntersectionList(sr, null);\r\n            if (hits.length) {\r\n                target = hits[hits.length - 1];\r\n            }\r\n        }\r\n        if (!target) {\r\n            return null;\r\n        }\r\n        while (target.parentNode && target != svg.parentNode && !target.raphael) {\r\n            target = target.parentNode;\r\n        }\r\n        target == paper.canvas.parentNode && (target = svg);\r\n        target = target && target.raphael ? paper.getById(target.raphaelid) : null;\r\n        return target;\r\n    };\r\n\r\n    /*\\\r\n     * Paper.getElementsByBBox\r\n     [ method ]\r\n     **\r\n     * Returns set of elements that have an intersecting bounding box\r\n     **\r\n     > Parameters\r\n     **\r\n     - bbox (object) bbox to check with\r\n     = (object) @Set\r\n     \\*/\r\n    paperproto.getElementsByBBox = function (bbox) {\r\n        var set = this.set();\r\n        this.forEach(function (el) {\r\n            if (R.isBBoxIntersect(el.getBBox(), bbox)) {\r\n                set.push(el);\r\n            }\r\n        });\r\n        return set;\r\n    };\r\n\r\n    /*\\\r\n     * Paper.getById\r\n     [ method ]\r\n     **\r\n     * Returns you element by its internal ID.\r\n     **\r\n     > Parameters\r\n     **\r\n     - id (number) id\r\n     = (object) Raphaël element object\r\n    \\*/\r\n    paperproto.getById = function (id) {\r\n        var bot = this.bottom;\r\n        while (bot) {\r\n            if (bot.id == id) {\r\n                return bot;\r\n            }\r\n            bot = bot.next;\r\n        }\r\n        return null;\r\n    };\r\n    /*\\\r\n     * Paper.forEach\r\n     [ method ]\r\n     **\r\n     * Executes given function for each element on the paper\r\n     *\r\n     * If callback function returns `false` it will stop loop running.\r\n     **\r\n     > Parameters\r\n     **\r\n     - callback (function) function to run\r\n     - thisArg (object) context object for the callback\r\n     = (object) Paper object\r\n     > Usage\r\n     | paper.forEach(function (el) {\r\n     |     el.attr({ stroke: \"blue\" });\r\n     | });\r\n    \\*/\r\n    paperproto.forEach = function (callback, thisArg) {\r\n        var bot = this.bottom;\r\n        while (bot) {\r\n            if (callback.call(thisArg, bot) === false) {\r\n                return this;\r\n            }\r\n            bot = bot.next;\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Paper.getElementsByPoint\r\n     [ method ]\r\n     **\r\n     * Returns set of elements that have common point inside\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the point\r\n     - y (number) y coordinate of the point\r\n     = (object) @Set\r\n    \\*/\r\n    paperproto.getElementsByPoint = function (x, y) {\r\n        var set = this.set();\r\n        this.forEach(function (el) {\r\n            if (el.isPointInside(x, y)) {\r\n                set.push(el);\r\n            }\r\n        });\r\n        return set;\r\n    };\r\n    function x_y() {\r\n        return this.x + S + this.y;\r\n    }\r\n    function x_y_w_h() {\r\n        return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\r\n    }\r\n    /*\\\r\n     * Element.isPointInside\r\n     [ method ]\r\n     **\r\n     * Determine if given point is inside this element’s shape\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the point\r\n     - y (number) y coordinate of the point\r\n     = (boolean) `true` if point inside the shape\r\n    \\*/\r\n    elproto.isPointInside = function (x, y) {\r\n        var rp = this.realPath = getPath[this.type](this);\r\n        if (this.attr('transform') && this.attr('transform').length) {\r\n            rp = R.transformPath(rp, this.attr('transform'));\r\n        }\r\n        return R.isPointInsidePath(rp, x, y);\r\n    };\r\n    /*\\\r\n     * Element.getBBox\r\n     [ method ]\r\n     **\r\n     * Return bounding box for a given element\r\n     **\r\n     > Parameters\r\n     **\r\n     - isWithoutTransform (boolean) flag, `true` if you want to have bounding box before transformations. Default is `false`.\r\n     = (object) Bounding box object:\r\n     o {\r\n     o     x: (number) top left corner x\r\n     o     y: (number) top left corner y\r\n     o     x2: (number) bottom right corner x\r\n     o     y2: (number) bottom right corner y\r\n     o     width: (number) width\r\n     o     height: (number) height\r\n     o }\r\n    \\*/\r\n    elproto.getBBox = function (isWithoutTransform) {\r\n        if (this.removed) {\r\n            return {};\r\n        }\r\n        var _ = this._;\r\n        if (isWithoutTransform) {\r\n            if (_.dirty || !_.bboxwt) {\r\n                this.realPath = getPath[this.type](this);\r\n                _.bboxwt = pathDimensions(this.realPath);\r\n                _.bboxwt.toString = x_y_w_h;\r\n                _.dirty = 0;\r\n            }\r\n            return _.bboxwt;\r\n        }\r\n        if (_.dirty || _.dirtyT || !_.bbox) {\r\n            if (_.dirty || !this.realPath) {\r\n                _.bboxwt = 0;\r\n                this.realPath = getPath[this.type](this);\r\n            }\r\n            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));\r\n            _.bbox.toString = x_y_w_h;\r\n            _.dirty = _.dirtyT = 0;\r\n        }\r\n        return _.bbox;\r\n    };\r\n    /*\\\r\n     * Element.clone\r\n     [ method ]\r\n     **\r\n     = (object) clone of a given element\r\n     **\r\n    \\*/\r\n    elproto.clone = function () {\r\n        if (this.removed) {\r\n            return null;\r\n        }\r\n        var out = this.paper[this.type]().attr(this.attr());\r\n        this.__set__ && this.__set__.push(out);\r\n        return out;\r\n    };\r\n    /*\\\r\n     * Element.glow\r\n     [ method ]\r\n     **\r\n     * Return set of elements that create glow-like effect around given element. See @Paper.set.\r\n     *\r\n     * Note: Glow is not connected to the element. If you change element attributes it won’t adjust itself.\r\n     **\r\n     > Parameters\r\n     **\r\n     - glow (object) #optional parameters object with all properties optional:\r\n     o {\r\n     o     width (number) size of the glow, default is `10`\r\n     o     fill (boolean) will it be filled, default is `false`\r\n     o     opacity (number) opacity, default is `0.5`\r\n     o     offsetx (number) horizontal offset, default is `0`\r\n     o     offsety (number) vertical offset, default is `0`\r\n     o     color (string) glow colour, default is `black`\r\n     o }\r\n     = (object) @Paper.set of elements that represents glow\r\n    \\*/\r\n    elproto.glow = function (glow) {\r\n        if (this.type == \"text\") {\r\n            return null;\r\n        }\r\n        glow = glow || {};\r\n        var s = {\r\n            width: (glow.width || 10) + (+this.attr(\"stroke-width\") || 1),\r\n            fill: glow.fill || false,\r\n            opacity: glow.opacity || .5,\r\n            offsetx: glow.offsetx || 0,\r\n            offsety: glow.offsety || 0,\r\n            color: glow.color || \"#000\"\r\n        },\r\n            c = s.width / 2,\r\n            r = this.paper,\r\n            out = r.set(),\r\n            path = this.realPath || getPath[this.type](this);\r\n        path = this.matrix ? mapPath(path, this.matrix) : path;\r\n        for (var i = 1; i < c + 1; i++) {\r\n            out.push(r.path(path).attr({\r\n                stroke: s.color,\r\n                fill: s.fill ? s.color : \"none\",\r\n                \"stroke-linejoin\": \"round\",\r\n                \"stroke-linecap\": \"round\",\r\n                \"stroke-width\": +(s.width / c * i).toFixed(3),\r\n                opacity: +(s.opacity / c).toFixed(3)\r\n            }));\r\n        }\r\n        return out.insertBefore(this).translate(s.offsetx, s.offsety);\r\n    };\r\n    var curveslengths = {},\r\n    getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\r\n        if (length == null) {\r\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\r\n        } else {\r\n            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\r\n        }\r\n    },\r\n    getLengthFactory = function (istotal, subpath) {\r\n        return function (path, length, onlystart) {\r\n            path = path2curve(path);\r\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\r\n                len = 0;\r\n            for (var i = 0, ii = path.length; i < ii; i++) {\r\n                p = path[i];\r\n                if (p[0] == \"M\") {\r\n                    x = +p[1];\r\n                    y = +p[2];\r\n                } else {\r\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\r\n                    if (len + l > length) {\r\n                        if (subpath && !subpaths.start) {\r\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\r\n                            sp += [\"C\" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];\r\n                            if (onlystart) {return sp;}\r\n                            subpaths.start = sp;\r\n                            sp = [\"M\" + point.x, point.y + \"C\" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();\r\n                            len += l;\r\n                            x = +p[5];\r\n                            y = +p[6];\r\n                            continue;\r\n                        }\r\n                        if (!istotal && !subpath) {\r\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\r\n                            return {x: point.x, y: point.y, alpha: point.alpha};\r\n                        }\r\n                    }\r\n                    len += l;\r\n                    x = +p[5];\r\n                    y = +p[6];\r\n                }\r\n                sp += p.shift() + p;\r\n            }\r\n            subpaths.end = sp;\r\n            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\r\n            point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});\r\n            return point;\r\n        };\r\n    };\r\n    var getTotalLength = getLengthFactory(1),\r\n        getPointAtLength = getLengthFactory(),\r\n        getSubpathsAtLength = getLengthFactory(0, 1);\r\n    /*\\\r\n     * Raphael.getTotalLength\r\n     [ method ]\r\n     **\r\n     * Returns length of the given path in pixels.\r\n     **\r\n     > Parameters\r\n     **\r\n     - path (string) SVG path string.\r\n     **\r\n     = (number) length.\r\n    \\*/\r\n    R.getTotalLength = getTotalLength;\r\n    /*\\\r\n     * Raphael.getPointAtLength\r\n     [ method ]\r\n     **\r\n     * Return coordinates of the point located at the given length on the given path.\r\n     **\r\n     > Parameters\r\n     **\r\n     - path (string) SVG path string\r\n     - length (number)\r\n     **\r\n     = (object) representation of the point:\r\n     o {\r\n     o     x: (number) x coordinate\r\n     o     y: (number) y coordinate\r\n     o     alpha: (number) angle of derivative\r\n     o }\r\n    \\*/\r\n    R.getPointAtLength = getPointAtLength;\r\n    /*\\\r\n     * Raphael.getSubpath\r\n     [ method ]\r\n     **\r\n     * Return subpath of a given path from given length to given length.\r\n     **\r\n     > Parameters\r\n     **\r\n     - path (string) SVG path string\r\n     - from (number) position of the start of the segment\r\n     - to (number) position of the end of the segment\r\n     **\r\n     = (string) pathstring for the segment\r\n    \\*/\r\n    R.getSubpath = function (path, from, to) {\r\n        if (this.getTotalLength(path) - to < 1e-6) {\r\n            return getSubpathsAtLength(path, from).end;\r\n        }\r\n        var a = getSubpathsAtLength(path, to, 1);\r\n        return from ? getSubpathsAtLength(a, from).end : a;\r\n    };\r\n    /*\\\r\n     * Element.getTotalLength\r\n     [ method ]\r\n     **\r\n     * Returns length of the path in pixels. Only works for element of “path” type.\r\n     = (number) length.\r\n    \\*/\r\n    elproto.getTotalLength = function () {\r\n        var path = this.getPath();\r\n        if (!path) {\r\n            return;\r\n        }\r\n\r\n        if (this.node.getTotalLength) {\r\n            return this.node.getTotalLength();\r\n        }\r\n\r\n        return getTotalLength(path);\r\n    };\r\n    /*\\\r\n     * Element.getPointAtLength\r\n     [ method ]\r\n     **\r\n     * Return coordinates of the point located at the given length on the given path. Only works for element of “path” type.\r\n     **\r\n     > Parameters\r\n     **\r\n     - length (number)\r\n     **\r\n     = (object) representation of the point:\r\n     o {\r\n     o     x: (number) x coordinate\r\n     o     y: (number) y coordinate\r\n     o     alpha: (number) angle of derivative\r\n     o }\r\n    \\*/\r\n    elproto.getPointAtLength = function (length) {\r\n        var path = this.getPath();\r\n        if (!path) {\r\n            return;\r\n        }\r\n\r\n        return getPointAtLength(path, length);\r\n    };\r\n    /*\\\r\n     * Element.getPath\r\n     [ method ]\r\n     **\r\n     * Returns path of the element. Only works for elements of “path” type and simple elements like circle.\r\n     = (object) path\r\n     **\r\n    \\*/\r\n    elproto.getPath = function () {\r\n        var path,\r\n            getPath = R._getPath[this.type];\r\n        \r\n        if (this.type == \"text\" || this.type == \"set\") {\r\n            return;\r\n        }\r\n\r\n        if (getPath) {\r\n            path = getPath(this);\r\n        }\r\n\r\n        return path;\r\n    };\r\n    /*\\\r\n     * Element.getSubpath\r\n     [ method ]\r\n     **\r\n     * Return subpath of a given element from given length to given length. Only works for element of “path” type.\r\n     **\r\n     > Parameters\r\n     **\r\n     - from (number) position of the start of the segment\r\n     - to (number) position of the end of the segment\r\n     **\r\n     = (string) pathstring for the segment\r\n    \\*/\r\n    elproto.getSubpath = function (from, to) {\r\n        var path = this.getPath();\r\n        if (!path) {\r\n            return;\r\n        }\r\n\r\n        return R.getSubpath(path, from, to);\r\n    };\r\n    /*\\\r\n     * Raphael.easing_formulas\r\n     [ property ]\r\n     **\r\n     * Object that contains easing formulas for animation. You could extend it with your own. By default it has following list of easing:\r\n     # <ul>\r\n     #     <li>“linear”</li>\r\n     #     <li>“&lt;” or “easeIn” or “ease-in”</li>\r\n     #     <li>“>” or “easeOut” or “ease-out”</li>\r\n     #     <li>“&lt;>” or “easeInOut” or “ease-in-out”</li>\r\n     #     <li>“backIn” or “back-in”</li>\r\n     #     <li>“backOut” or “back-out”</li>\r\n     #     <li>“elastic”</li>\r\n     #     <li>“bounce”</li>\r\n     # </ul>\r\n     # <p>See also <a href=\"http://raphaeljs.com/easing.html\">Easing demo</a>.</p>\r\n    \\*/\r\n    var ef = R.easing_formulas = {\r\n        linear: function (n) {\r\n            return n;\r\n        },\r\n        \"<\": function (n) {\r\n            return pow(n, 1.7);\r\n        },\r\n        \">\": function (n) {\r\n            return pow(n, .48);\r\n        },\r\n        \"<>\": function (n) {\r\n            var q = .48 - n / 1.04,\r\n                Q = math.sqrt(.1734 + q * q),\r\n                x = Q - q,\r\n                X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),\r\n                y = -Q - q,\r\n                Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),\r\n                t = X + Y + .5;\r\n            return (1 - t) * 3 * t * t + t * t * t;\r\n        },\r\n        backIn: function (n) {\r\n            var s = 1.70158;\r\n            return n * n * ((s + 1) * n - s);\r\n        },\r\n        backOut: function (n) {\r\n            n = n - 1;\r\n            var s = 1.70158;\r\n            return n * n * ((s + 1) * n + s) + 1;\r\n        },\r\n        elastic: function (n) {\r\n            if (n == !!n) {\r\n                return n;\r\n            }\r\n            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\r\n        },\r\n        bounce: function (n) {\r\n            var s = 7.5625,\r\n                p = 2.75,\r\n                l;\r\n            if (n < (1 / p)) {\r\n                l = s * n * n;\r\n            } else {\r\n                if (n < (2 / p)) {\r\n                    n -= (1.5 / p);\r\n                    l = s * n * n + .75;\r\n                } else {\r\n                    if (n < (2.5 / p)) {\r\n                        n -= (2.25 / p);\r\n                        l = s * n * n + .9375;\r\n                    } else {\r\n                        n -= (2.625 / p);\r\n                        l = s * n * n + .984375;\r\n                    }\r\n                }\r\n            }\r\n            return l;\r\n        }\r\n    };\r\n    ef.easeIn = ef[\"ease-in\"] = ef[\"<\"];\r\n    ef.easeOut = ef[\"ease-out\"] = ef[\">\"];\r\n    ef.easeInOut = ef[\"ease-in-out\"] = ef[\"<>\"];\r\n    ef[\"back-in\"] = ef.backIn;\r\n    ef[\"back-out\"] = ef.backOut;\r\n\r\n    var animationElements = [],\r\n        requestAnimFrame = window.requestAnimationFrame       ||\r\n                           window.webkitRequestAnimationFrame ||\r\n                           window.mozRequestAnimationFrame    ||\r\n                           window.oRequestAnimationFrame      ||\r\n                           window.msRequestAnimationFrame     ||\r\n                           function (callback) {\r\n                               setTimeout(callback, 16);\r\n                           },\r\n        animation = function () {\r\n            var Now = +new Date,\r\n                l = 0;\r\n            for (; l < animationElements.length; l++) {\r\n                var e = animationElements[l];\r\n                if (e.el.removed || e.paused) {\r\n                    continue;\r\n                }\r\n                var time = Now - e.start,\r\n                    ms = e.ms,\r\n                    easing = e.easing,\r\n                    from = e.from,\r\n                    diff = e.diff,\r\n                    to = e.to,\r\n                    t = e.t,\r\n                    that = e.el,\r\n                    set = {},\r\n                    now,\r\n                    init = {},\r\n                    key;\r\n                if (e.initstatus) {\r\n                    time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;\r\n                    e.status = e.initstatus;\r\n                    delete e.initstatus;\r\n                    e.stop && animationElements.splice(l--, 1);\r\n                } else {\r\n                    e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;\r\n                }\r\n                if (time < 0) {\r\n                    continue;\r\n                }\r\n                if (time < ms) {\r\n                    var pos = easing(time / ms);\r\n                    for (var attr in from) if (from[has](attr)) {\r\n                        switch (availableAnimAttrs[attr]) {\r\n                            case nu:\r\n                                now = +from[attr] + pos * ms * diff[attr];\r\n                                break;\r\n                            case \"colour\":\r\n                                now = \"rgb(\" + [\r\n                                    upto255(round(from[attr].r + pos * ms * diff[attr].r)),\r\n                                    upto255(round(from[attr].g + pos * ms * diff[attr].g)),\r\n                                    upto255(round(from[attr].b + pos * ms * diff[attr].b))\r\n                                ].join(\",\") + \")\";\r\n                                break;\r\n                            case \"path\":\r\n                                now = [];\r\n                                for (var i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                    now[i] = [from[attr][i][0]];\r\n                                    for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                        now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];\r\n                                    }\r\n                                    now[i] = now[i].join(S);\r\n                                }\r\n                                now = now.join(S);\r\n                                break;\r\n                            case \"transform\":\r\n                                if (diff[attr].real) {\r\n                                    now = [];\r\n                                    for (i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                        now[i] = [from[attr][i][0]];\r\n                                        for (j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                            now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    var get = function (i) {\r\n                                        return +from[attr][i] + pos * ms * diff[attr][i];\r\n                                    };\r\n                                    // now = [[\"r\", get(2), 0, 0], [\"t\", get(3), get(4)], [\"s\", get(0), get(1), 0, 0]];\r\n                                    now = [[\"m\", get(0), get(1), get(2), get(3), get(4), get(5)]];\r\n                                }\r\n                                break;\r\n                            case \"csv\":\r\n                                if (attr == \"clip-rect\") {\r\n                                    now = [];\r\n                                    i = 4;\r\n                                    while (i--) {\r\n                                        now[i] = +from[attr][i] + pos * ms * diff[attr][i];\r\n                                    }\r\n                                }\r\n                                break;\r\n                            default:\r\n                                var from2 = [][concat](from[attr]);\r\n                                now = [];\r\n                                i = that.paper.customAttributes[attr].length;\r\n                                while (i--) {\r\n                                    now[i] = +from2[i] + pos * ms * diff[attr][i];\r\n                                }\r\n                                break;\r\n                        }\r\n                        set[attr] = now;\r\n                    }\r\n                    that.attr(set);\r\n                    (function (id, that, anim) {\r\n                        setTimeout(function () {\r\n                            eve(\"raphael.anim.frame.\" + id, that, anim);\r\n                        });\r\n                    })(that.id, that, e.anim);\r\n                } else {\r\n                    (function(f, el, a) {\r\n                        setTimeout(function() {\r\n                            eve(\"raphael.anim.frame.\" + el.id, el, a);\r\n                            eve(\"raphael.anim.finish.\" + el.id, el, a);\r\n                            R.is(f, \"function\") && f.call(el);\r\n                        });\r\n                    })(e.callback, that, e.anim);\r\n                    that.attr(to);\r\n                    animationElements.splice(l--, 1);\r\n                    if (e.repeat > 1 && !e.next) {\r\n                        for (key in to) if (to[has](key)) {\r\n                            init[key] = e.totalOrigin[key];\r\n                        }\r\n                        e.el.attr(init);\r\n                        runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);\r\n                    }\r\n                    if (e.next && !e.stop) {\r\n                        runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);\r\n                    }\r\n                }\r\n            }\r\n            R.svg && that && that.paper && that.paper.safari();\r\n            animationElements.length && requestAnimFrame(animation);\r\n        },\r\n        upto255 = function (color) {\r\n            return color > 255 ? 255 : color < 0 ? 0 : color;\r\n        };\r\n    /*\\\r\n     * Element.animateWith\r\n     [ method ]\r\n     **\r\n     * Acts similar to @Element.animate, but ensure that given animation runs in sync with another given element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - el (object) element to sync with\r\n     - anim (object) animation to sync with\r\n     - params (object) #optional final attributes for the element, see also @Element.attr\r\n     - ms (number) #optional number of milliseconds for animation to run\r\n     - easing (string) #optional easing type. Accept on of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\r\n     - callback (function) #optional callback function. Will be called at the end of animation.\r\n     * or\r\n     - element (object) element to sync with\r\n     - anim (object) animation to sync with\r\n     - animation (object) #optional animation object, see @Raphael.animation\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.animateWith = function (el, anim, params, ms, easing, callback) {\r\n        var element = this;\r\n        if (element.removed) {\r\n            callback && callback.call(element);\r\n            return element;\r\n        }\r\n        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),\r\n            x, y;\r\n        runAnimation(a, element, a.percents[0], null, element.attr());\r\n        for (var i = 0, ii = animationElements.length; i < ii; i++) {\r\n            if (animationElements[i].anim == anim && animationElements[i].el == el) {\r\n                animationElements[ii - 1].start = animationElements[i].start;\r\n                break;\r\n            }\r\n        }\r\n        return element;\r\n        // \r\n        // \r\n        // var a = params ? R.animation(params, ms, easing, callback) : anim,\r\n        //     status = element.status(anim);\r\n        // return this.animate(a).status(a, status * anim.ms / a.ms);\r\n    };\r\n    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {\r\n        var cx = 3 * p1x,\r\n            bx = 3 * (p2x - p1x) - cx,\r\n            ax = 1 - cx - bx,\r\n            cy = 3 * p1y,\r\n            by = 3 * (p2y - p1y) - cy,\r\n            ay = 1 - cy - by;\r\n        function sampleCurveX(t) {\r\n            return ((ax * t + bx) * t + cx) * t;\r\n        }\r\n        function solve(x, epsilon) {\r\n            var t = solveCurveX(x, epsilon);\r\n            return ((ay * t + by) * t + cy) * t;\r\n        }\r\n        function solveCurveX(x, epsilon) {\r\n            var t0, t1, t2, x2, d2, i;\r\n            for(t2 = x, i = 0; i < 8; i++) {\r\n                x2 = sampleCurveX(t2) - x;\r\n                if (abs(x2) < epsilon) {\r\n                    return t2;\r\n                }\r\n                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;\r\n                if (abs(d2) < 1e-6) {\r\n                    break;\r\n                }\r\n                t2 = t2 - x2 / d2;\r\n            }\r\n            t0 = 0;\r\n            t1 = 1;\r\n            t2 = x;\r\n            if (t2 < t0) {\r\n                return t0;\r\n            }\r\n            if (t2 > t1) {\r\n                return t1;\r\n            }\r\n            while (t0 < t1) {\r\n                x2 = sampleCurveX(t2);\r\n                if (abs(x2 - x) < epsilon) {\r\n                    return t2;\r\n                }\r\n                if (x > x2) {\r\n                    t0 = t2;\r\n                } else {\r\n                    t1 = t2;\r\n                }\r\n                t2 = (t1 - t0) / 2 + t0;\r\n            }\r\n            return t2;\r\n        }\r\n        return solve(t, 1 / (200 * duration));\r\n    }\r\n    elproto.onAnimation = function (f) {\r\n        f ? eve.on(\"raphael.anim.frame.\" + this.id, f) : eve.unbind(\"raphael.anim.frame.\" + this.id);\r\n        return this;\r\n    };\r\n    function Animation(anim, ms) {\r\n        var percents = [],\r\n            newAnim = {};\r\n        this.ms = ms;\r\n        this.times = 1;\r\n        if (anim) {\r\n            for (var attr in anim) if (anim[has](attr)) {\r\n                newAnim[toFloat(attr)] = anim[attr];\r\n                percents.push(toFloat(attr));\r\n            }\r\n            percents.sort(sortByNumber);\r\n        }\r\n        this.anim = newAnim;\r\n        this.top = percents[percents.length - 1];\r\n        this.percents = percents;\r\n    }\r\n    /*\\\r\n     * Animation.delay\r\n     [ method ]\r\n     **\r\n     * Creates a copy of existing animation object with given delay.\r\n     **\r\n     > Parameters\r\n     **\r\n     - delay (number) number of ms to pass between animation start and actual animation\r\n     **\r\n     = (object) new altered Animation object\r\n     | var anim = Raphael.animation({cx: 10, cy: 20}, 2e3);\r\n     | circle1.animate(anim); // run the given animation immediately\r\n     | circle2.animate(anim.delay(500)); // run the given animation after 500 ms\r\n    \\*/\r\n    Animation.prototype.delay = function (delay) {\r\n        var a = new Animation(this.anim, this.ms);\r\n        a.times = this.times;\r\n        a.del = +delay || 0;\r\n        return a;\r\n    };\r\n    /*\\\r\n     * Animation.repeat\r\n     [ method ]\r\n     **\r\n     * Creates a copy of existing animation object with given repetition.\r\n     **\r\n     > Parameters\r\n     **\r\n     - repeat (number) number iterations of animation. For infinite animation pass `Infinity`\r\n     **\r\n     = (object) new altered Animation object\r\n    \\*/\r\n    Animation.prototype.repeat = function (times) {\r\n        var a = new Animation(this.anim, this.ms);\r\n        a.del = this.del;\r\n        a.times = math.floor(mmax(times, 0)) || 1;\r\n        return a;\r\n    };\r\n    function runAnimation(anim, element, percent, status, totalOrigin, times) {\r\n        percent = toFloat(percent);\r\n        var params,\r\n            isInAnim,\r\n            isInAnimSet,\r\n            percents = [],\r\n            next,\r\n            prev,\r\n            timestamp,\r\n            ms = anim.ms,\r\n            from = {},\r\n            to = {},\r\n            diff = {};\r\n        if (status) {\r\n            for (i = 0, ii = animationElements.length; i < ii; i++) {\r\n                var e = animationElements[i];\r\n                if (e.el.id == element.id && e.anim == anim) {\r\n                    if (e.percent != percent) {\r\n                        animationElements.splice(i, 1);\r\n                        isInAnimSet = 1;\r\n                    } else {\r\n                        isInAnim = e;\r\n                    }\r\n                    element.attr(e.totalOrigin);\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            status = +to; // NaN\r\n        }\r\n        for (var i = 0, ii = anim.percents.length; i < ii; i++) {\r\n            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {\r\n                percent = anim.percents[i];\r\n                prev = anim.percents[i - 1] || 0;\r\n                ms = ms / anim.top * (percent - prev);\r\n                next = anim.percents[i + 1];\r\n                params = anim.anim[percent];\r\n                break;\r\n            } else if (status) {\r\n                element.attr(anim.anim[anim.percents[i]]);\r\n            }\r\n        }\r\n        if (!params) {\r\n            return;\r\n        }\r\n        if (!isInAnim) {\r\n            for (var attr in params) if (params[has](attr)) {\r\n                if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {\r\n                    from[attr] = element.attr(attr);\r\n                    (from[attr] == null) && (from[attr] = availableAttrs[attr]);\r\n                    to[attr] = params[attr];\r\n                    switch (availableAnimAttrs[attr]) {\r\n                        case nu:\r\n                            diff[attr] = (to[attr] - from[attr]) / ms;\r\n                            break;\r\n                        case \"colour\":\r\n                            from[attr] = R.getRGB(from[attr]);\r\n                            var toColour = R.getRGB(to[attr]);\r\n                            diff[attr] = {\r\n                                r: (toColour.r - from[attr].r) / ms,\r\n                                g: (toColour.g - from[attr].g) / ms,\r\n                                b: (toColour.b - from[attr].b) / ms\r\n                            };\r\n                            break;\r\n                        case \"path\":\r\n                            var pathes = path2curve(from[attr], to[attr]),\r\n                                toPath = pathes[1];\r\n                            from[attr] = pathes[0];\r\n                            diff[attr] = [];\r\n                            for (i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                diff[attr][i] = [0];\r\n                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;\r\n                                }\r\n                            }\r\n                            break;\r\n                        case \"transform\":\r\n                            var _ = element._,\r\n                                eq = equaliseTransform(_[attr], to[attr]);\r\n                            if (eq) {\r\n                                from[attr] = eq.from;\r\n                                to[attr] = eq.to;\r\n                                diff[attr] = [];\r\n                                diff[attr].real = true;\r\n                                for (i = 0, ii = from[attr].length; i < ii; i++) {\r\n                                    diff[attr][i] = [from[attr][i][0]];\r\n                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {\r\n                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                var m = (element.matrix || new Matrix),\r\n                                    to2 = {\r\n                                        _: {transform: _.transform},\r\n                                        getBBox: function () {\r\n                                            return element.getBBox(1);\r\n                                        }\r\n                                    };\r\n                                from[attr] = [\r\n                                    m.a,\r\n                                    m.b,\r\n                                    m.c,\r\n                                    m.d,\r\n                                    m.e,\r\n                                    m.f\r\n                                ];\r\n                                extractTransform(to2, to[attr]);\r\n                                to[attr] = to2._.transform;\r\n                                diff[attr] = [\r\n                                    (to2.matrix.a - m.a) / ms,\r\n                                    (to2.matrix.b - m.b) / ms,\r\n                                    (to2.matrix.c - m.c) / ms,\r\n                                    (to2.matrix.d - m.d) / ms,\r\n                                    (to2.matrix.e - m.e) / ms,\r\n                                    (to2.matrix.f - m.f) / ms\r\n                                ];\r\n                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];\r\n                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};\r\n                                // extractTransform(to2, to[attr]);\r\n                                // diff[attr] = [\r\n                                //     (to2._.sx - _.sx) / ms,\r\n                                //     (to2._.sy - _.sy) / ms,\r\n                                //     (to2._.deg - _.deg) / ms,\r\n                                //     (to2._.dx - _.dx) / ms,\r\n                                //     (to2._.dy - _.dy) / ms\r\n                                // ];\r\n                            }\r\n                            break;\r\n                        case \"csv\":\r\n                            var values = Str(params[attr])[split](separator),\r\n                                from2 = Str(from[attr])[split](separator);\r\n                            if (attr == \"clip-rect\") {\r\n                                from[attr] = from2;\r\n                                diff[attr] = [];\r\n                                i = from2.length;\r\n                                while (i--) {\r\n                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;\r\n                                }\r\n                            }\r\n                            to[attr] = values;\r\n                            break;\r\n                        default:\r\n                            values = [][concat](params[attr]);\r\n                            from2 = [][concat](from[attr]);\r\n                            diff[attr] = [];\r\n                            i = element.paper.customAttributes[attr].length;\r\n                            while (i--) {\r\n                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            var easing = params.easing,\r\n                easyeasy = R.easing_formulas[easing];\r\n            if (!easyeasy) {\r\n                easyeasy = Str(easing).match(bezierrg);\r\n                if (easyeasy && easyeasy.length == 5) {\r\n                    var curve = easyeasy;\r\n                    easyeasy = function (t) {\r\n                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);\r\n                    };\r\n                } else {\r\n                    easyeasy = pipe;\r\n                }\r\n            }\r\n            timestamp = params.start || anim.start || +new Date;\r\n            e = {\r\n                anim: anim,\r\n                percent: percent,\r\n                timestamp: timestamp,\r\n                start: timestamp + (anim.del || 0),\r\n                status: 0,\r\n                initstatus: status || 0,\r\n                stop: false,\r\n                ms: ms,\r\n                easing: easyeasy,\r\n                from: from,\r\n                diff: diff,\r\n                to: to,\r\n                el: element,\r\n                callback: params.callback,\r\n                prev: prev,\r\n                next: next,\r\n                repeat: times || anim.times,\r\n                origin: element.attr(),\r\n                totalOrigin: totalOrigin\r\n            };\r\n            animationElements.push(e);\r\n            if (status && !isInAnim && !isInAnimSet) {\r\n                e.stop = true;\r\n                e.start = new Date - ms * status;\r\n                if (animationElements.length == 1) {\r\n                    return animation();\r\n                }\r\n            }\r\n            if (isInAnimSet) {\r\n                e.start = new Date - e.ms * status;\r\n            }\r\n            animationElements.length == 1 && requestAnimFrame(animation);\r\n        } else {\r\n            isInAnim.initstatus = status;\r\n            isInAnim.start = new Date - isInAnim.ms * status;\r\n        }\r\n        eve(\"raphael.anim.start.\" + element.id, element, anim);\r\n    }\r\n    /*\\\r\n     * Raphael.animation\r\n     [ method ]\r\n     **\r\n     * Creates an animation object that can be passed to the @Element.animate or @Element.animateWith methods.\r\n     * See also @Animation.delay and @Animation.repeat methods.\r\n     **\r\n     > Parameters\r\n     **\r\n     - params (object) final attributes for the element, see also @Element.attr\r\n     - ms (number) number of milliseconds for animation to run\r\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\r\n     - callback (function) #optional callback function. Will be called at the end of animation.\r\n     **\r\n     = (object) @Animation\r\n    \\*/\r\n    R.animation = function (params, ms, easing, callback) {\r\n        if (params instanceof Animation) {\r\n            return params;\r\n        }\r\n        if (R.is(easing, \"function\") || !easing) {\r\n            callback = callback || easing || null;\r\n            easing = null;\r\n        }\r\n        params = Object(params);\r\n        ms = +ms || 0;\r\n        var p = {},\r\n            json,\r\n            attr;\r\n        for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + \"%\" != attr) {\r\n            json = true;\r\n            p[attr] = params[attr];\r\n        }\r\n        if (!json) {\r\n            return new Animation(params, ms);\r\n        } else {\r\n            easing && (p.easing = easing);\r\n            callback && (p.callback = callback);\r\n            return new Animation({100: p}, ms);\r\n        }\r\n    };\r\n    /*\\\r\n     * Element.animate\r\n     [ method ]\r\n     **\r\n     * Creates and starts animation for given element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - params (object) final attributes for the element, see also @Element.attr\r\n     - ms (number) number of milliseconds for animation to run\r\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\r\n     - callback (function) #optional callback function. Will be called at the end of animation.\r\n     * or\r\n     - animation (object) animation object, see @Raphael.animation\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.animate = function (params, ms, easing, callback) {\r\n        var element = this;\r\n        if (element.removed) {\r\n            callback && callback.call(element);\r\n            return element;\r\n        }\r\n        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);\r\n        runAnimation(anim, element, anim.percents[0], null, element.attr());\r\n        return element;\r\n    };\r\n    /*\\\r\n     * Element.setTime\r\n     [ method ]\r\n     **\r\n     * Sets the status of animation of the element in milliseconds. Similar to @Element.status method.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) animation object\r\n     - value (number) number of milliseconds from the beginning of the animation\r\n     **\r\n     = (object) original element if `value` is specified\r\n     * Note, that during animation following events are triggered:\r\n     *\r\n     * On each animation frame event `anim.frame.<id>`, on start `anim.start.<id>` and on end `anim.finish.<id>`.\r\n    \\*/\r\n    elproto.setTime = function (anim, value) {\r\n        if (anim && value != null) {\r\n            this.status(anim, mmin(value, anim.ms) / anim.ms);\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.status\r\n     [ method ]\r\n     **\r\n     * Gets or sets the status of animation of the element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     - value (number) #optional 0 – 1. If specified, method works like a setter and sets the status of a given animation to the value. This will cause animation to jump to the given position.\r\n     **\r\n     = (number) status\r\n     * or\r\n     = (array) status if `anim` is not specified. Array of objects in format:\r\n     o {\r\n     o     anim: (object) animation object\r\n     o     status: (number) status\r\n     o }\r\n     * or\r\n     = (object) original element if `value` is specified\r\n    \\*/\r\n    elproto.status = function (anim, value) {\r\n        var out = [],\r\n            i = 0,\r\n            len,\r\n            e;\r\n        if (value != null) {\r\n            runAnimation(anim, this, -1, mmin(value, 1));\r\n            return this;\r\n        } else {\r\n            len = animationElements.length;\r\n            for (; i < len; i++) {\r\n                e = animationElements[i];\r\n                if (e.el.id == this.id && (!anim || e.anim == anim)) {\r\n                    if (anim) {\r\n                        return e.status;\r\n                    }\r\n                    out.push({\r\n                        anim: e.anim,\r\n                        status: e.status\r\n                    });\r\n                }\r\n            }\r\n            if (anim) {\r\n                return 0;\r\n            }\r\n            return out;\r\n        }\r\n    };\r\n    /*\\\r\n     * Element.pause\r\n     [ method ]\r\n     **\r\n     * Stops animation of the element with ability to resume it later on.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.pause = function (anim) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\r\n            if (eve(\"raphael.anim.pause.\" + this.id, this, animationElements[i].anim) !== false) {\r\n                animationElements[i].paused = true;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.resume\r\n     [ method ]\r\n     **\r\n     * Resumes animation if it was paused with @Element.pause method.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.resume = function (anim) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\r\n            var e = animationElements[i];\r\n            if (eve(\"raphael.anim.resume.\" + this.id, this, e.anim) !== false) {\r\n                delete e.paused;\r\n                this.status(e.anim, e.status);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.stop\r\n     [ method ]\r\n     **\r\n     * Stops animation of the element.\r\n     **\r\n     > Parameters\r\n     **\r\n     - anim (object) #optional animation object\r\n     **\r\n     = (object) original element\r\n    \\*/\r\n    elproto.stop = function (anim) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\r\n            if (eve(\"raphael.anim.stop.\" + this.id, this, animationElements[i].anim) !== false) {\r\n                animationElements.splice(i--, 1);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    function stopAnimation(paper) {\r\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {\r\n            animationElements.splice(i--, 1);\r\n        }\r\n    }\r\n    eve.on(\"raphael.remove\", stopAnimation);\r\n    eve.on(\"raphael.clear\", stopAnimation);\r\n    elproto.toString = function () {\r\n        return \"Rapha\\xebl\\u2019s object\";\r\n    };\r\n\r\n    // Set\r\n    var Set = function (items) {\r\n        this.items = [];\r\n        this.length = 0;\r\n        this.type = \"set\";\r\n        if (items) {\r\n            for (var i = 0, ii = items.length; i < ii; i++) {\r\n                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {\r\n                    this[this.items.length] = this.items[this.items.length] = items[i];\r\n                    this.length++;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setproto = Set.prototype;\r\n    /*\\\r\n     * Set.push\r\n     [ method ]\r\n     **\r\n     * Adds each argument to the current set.\r\n     = (object) original element\r\n    \\*/\r\n    setproto.push = function () {\r\n        var item,\r\n            len;\r\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\r\n            item = arguments[i];\r\n            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {\r\n                len = this.items.length;\r\n                this[len] = this.items[len] = item;\r\n                this.length++;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Set.pop\r\n     [ method ]\r\n     **\r\n     * Removes last element and returns it.\r\n     = (object) element\r\n    \\*/\r\n    setproto.pop = function () {\r\n        this.length && delete this[this.length--];\r\n        return this.items.pop();\r\n    };\r\n    /*\\\r\n     * Set.forEach\r\n     [ method ]\r\n     **\r\n     * Executes given function for each element in the set.\r\n     *\r\n     * If function returns `false` it will stop loop running.\r\n     **\r\n     > Parameters\r\n     **\r\n     - callback (function) function to run\r\n     - thisArg (object) context object for the callback\r\n     = (object) Set object\r\n    \\*/\r\n    setproto.forEach = function (callback, thisArg) {\r\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\r\n            if (callback.call(thisArg, this.items[i], i) === false) {\r\n                return this;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    for (var method in elproto) if (elproto[has](method)) {\r\n        setproto[method] = (function (methodname) {\r\n            return function () {\r\n                var arg = arguments;\r\n                return this.forEach(function (el) {\r\n                    el[methodname][apply](el, arg);\r\n                });\r\n            };\r\n        })(method);\r\n    }\r\n    setproto.attr = function (name, value) {\r\n        if (name && R.is(name, array) && R.is(name[0], \"object\")) {\r\n            for (var j = 0, jj = name.length; j < jj; j++) {\r\n                this.items[j].attr(name[j]);\r\n            }\r\n        } else {\r\n            for (var i = 0, ii = this.items.length; i < ii; i++) {\r\n                this.items[i].attr(name, value);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Set.clear\r\n     [ method ]\r\n     **\r\n     * Removeds all elements from the set\r\n    \\*/\r\n    setproto.clear = function () {\r\n        while (this.length) {\r\n            this.pop();\r\n        }\r\n    };\r\n    /*\\\r\n     * Set.splice\r\n     [ method ]\r\n     **\r\n     * Removes given element from the set\r\n     **\r\n     > Parameters\r\n     **\r\n     - index (number) position of the deletion\r\n     - count (number) number of element to remove\r\n     - insertion… (object) #optional elements to insert\r\n     = (object) set elements that were deleted\r\n    \\*/\r\n    setproto.splice = function (index, count, insertion) {\r\n        index = index < 0 ? mmax(this.length + index, 0) : index;\r\n        count = mmax(0, mmin(this.length - index, count));\r\n        var tail = [],\r\n            todel = [],\r\n            args = [],\r\n            i;\r\n        for (i = 2; i < arguments.length; i++) {\r\n            args.push(arguments[i]);\r\n        }\r\n        for (i = 0; i < count; i++) {\r\n            todel.push(this[index + i]);\r\n        }\r\n        for (; i < this.length - index; i++) {\r\n            tail.push(this[index + i]);\r\n        }\r\n        var arglen = args.length;\r\n        for (i = 0; i < arglen + tail.length; i++) {\r\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\r\n        }\r\n        i = this.items.length = this.length -= count - arglen;\r\n        while (this[i]) {\r\n            delete this[i++];\r\n        }\r\n        return new Set(todel);\r\n    };\r\n    /*\\\r\n     * Set.exclude\r\n     [ method ]\r\n     **\r\n     * Removes given element from the set\r\n     **\r\n     > Parameters\r\n     **\r\n     - element (object) element to remove\r\n     = (boolean) `true` if object was found & removed from the set\r\n    \\*/\r\n    setproto.exclude = function (el) {\r\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\r\n            this.splice(i, 1);\r\n            return true;\r\n        }\r\n    };\r\n    setproto.animate = function (params, ms, easing, callback) {\r\n        (R.is(easing, \"function\") || !easing) && (callback = easing || null);\r\n        var len = this.items.length,\r\n            i = len,\r\n            item,\r\n            set = this,\r\n            collector;\r\n        if (!len) {\r\n            return this;\r\n        }\r\n        callback && (collector = function () {\r\n            !--len && callback.call(set);\r\n        });\r\n        easing = R.is(easing, string) ? easing : collector;\r\n        var anim = R.animation(params, ms, easing, collector);\r\n        item = this.items[--i].animate(anim);\r\n        while (i--) {\r\n            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);\r\n            (this.items[i] && !this.items[i].removed) || len--;\r\n        }\r\n        return this;\r\n    };\r\n    setproto.insertAfter = function (el) {\r\n        var i = this.items.length;\r\n        while (i--) {\r\n            this.items[i].insertAfter(el);\r\n        }\r\n        return this;\r\n    };\r\n    setproto.getBBox = function () {\r\n        var x = [],\r\n            y = [],\r\n            x2 = [],\r\n            y2 = [];\r\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\r\n            var box = this.items[i].getBBox();\r\n            x.push(box.x);\r\n            y.push(box.y);\r\n            x2.push(box.x + box.width);\r\n            y2.push(box.y + box.height);\r\n        }\r\n        x = mmin[apply](0, x);\r\n        y = mmin[apply](0, y);\r\n        x2 = mmax[apply](0, x2);\r\n        y2 = mmax[apply](0, y2);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            x2: x2,\r\n            y2: y2,\r\n            width: x2 - x,\r\n            height: y2 - y\r\n        };\r\n    };\r\n    setproto.clone = function (s) {\r\n        s = this.paper.set();\r\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\r\n            s.push(this.items[i].clone());\r\n        }\r\n        return s;\r\n    };\r\n    setproto.toString = function () {\r\n        return \"Rapha\\xebl\\u2018s set\";\r\n    };\r\n\r\n    setproto.glow = function(glowConfig) {\r\n        var ret = this.paper.set();\r\n        this.forEach(function(shape, index){\r\n            var g = shape.glow(glowConfig);\r\n            if(g != null){\r\n                g.forEach(function(shape2, index2){\r\n                    ret.push(shape2);\r\n                });\r\n            }\r\n        });\r\n        return ret;\r\n    };\r\n\r\n\r\n    /*\\\r\n     * Set.isPointInside\r\n     [ method ]\r\n     **\r\n     * Determine if given point is inside this set’s elements\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x coordinate of the point\r\n     - y (number) y coordinate of the point\r\n     = (boolean) `true` if point is inside any of the set's elements\r\n     \\*/\r\n    setproto.isPointInside = function (x, y) {\r\n        var isPointInside = false;\r\n        this.forEach(function (el) {\r\n            if (el.isPointInside(x, y)) {\r\n                isPointInside = true;\r\n                return false; // stop loop\r\n            }\r\n        });\r\n        return isPointInside;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.registerFont\r\n     [ method ]\r\n     **\r\n     * Adds given font to the registered set of fonts for Raphaël. Should be used as an internal call from within Cufón’s font file.\r\n     * Returns original parameter, so it could be used with chaining.\r\n     # <a href=\"http://wiki.github.com/sorccu/cufon/about\">More about Cufón and how to convert your font form TTF, OTF, etc to JavaScript file.</a>\r\n     **\r\n     > Parameters\r\n     **\r\n     - font (object) the font to register\r\n     = (object) the font you passed in\r\n     > Usage\r\n     | Cufon.registerFont(Raphael.registerFont({…}));\r\n    \\*/\r\n    R.registerFont = function (font) {\r\n        if (!font.face) {\r\n            return font;\r\n        }\r\n        this.fonts = this.fonts || {};\r\n        var fontcopy = {\r\n                w: font.w,\r\n                face: {},\r\n                glyphs: {}\r\n            },\r\n            family = font.face[\"font-family\"];\r\n        for (var prop in font.face) if (font.face[has](prop)) {\r\n            fontcopy.face[prop] = font.face[prop];\r\n        }\r\n        if (this.fonts[family]) {\r\n            this.fonts[family].push(fontcopy);\r\n        } else {\r\n            this.fonts[family] = [fontcopy];\r\n        }\r\n        if (!font.svg) {\r\n            fontcopy.face[\"units-per-em\"] = toInt(font.face[\"units-per-em\"], 10);\r\n            for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {\r\n                var path = font.glyphs[glyph];\r\n                fontcopy.glyphs[glyph] = {\r\n                    w: path.w,\r\n                    k: {},\r\n                    d: path.d && \"M\" + path.d.replace(/[mlcxtrv]/g, function (command) {\r\n                            return {l: \"L\", c: \"C\", x: \"z\", t: \"m\", r: \"l\", v: \"c\"}[command] || \"M\";\r\n                        }) + \"z\"\r\n                };\r\n                if (path.k) {\r\n                    for (var k in path.k) if (path[has](k)) {\r\n                        fontcopy.glyphs[glyph].k[k] = path.k[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return font;\r\n    };\r\n    /*\\\r\n     * Paper.getFont\r\n     [ method ]\r\n     **\r\n     * Finds font object in the registered fonts by given parameters. You could specify only one word from the font name, like “Myriad” for “Myriad Pro”.\r\n     **\r\n     > Parameters\r\n     **\r\n     - family (string) font family name or any word from it\r\n     - weight (string) #optional font weight\r\n     - style (string) #optional font style\r\n     - stretch (string) #optional font stretch\r\n     = (object) the font object\r\n     > Usage\r\n     | paper.print(100, 100, \"Test string\", paper.getFont(\"Times\", 800), 30);\r\n    \\*/\r\n    paperproto.getFont = function (family, weight, style, stretch) {\r\n        stretch = stretch || \"normal\";\r\n        style = style || \"normal\";\r\n        weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;\r\n        if (!R.fonts) {\r\n            return;\r\n        }\r\n        var font = R.fonts[family];\r\n        if (!font) {\r\n            var name = new RegExp(\"(^|\\\\s)\" + family.replace(/[^\\w\\d\\s+!~.:_-]/g, E) + \"(\\\\s|$)\", \"i\");\r\n            for (var fontName in R.fonts) if (R.fonts[has](fontName)) {\r\n                if (name.test(fontName)) {\r\n                    font = R.fonts[fontName];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        var thefont;\r\n        if (font) {\r\n            for (var i = 0, ii = font.length; i < ii; i++) {\r\n                thefont = font[i];\r\n                if (thefont.face[\"font-weight\"] == weight && (thefont.face[\"font-style\"] == style || !thefont.face[\"font-style\"]) && thefont.face[\"font-stretch\"] == stretch) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return thefont;\r\n    };\r\n    /*\\\r\n     * Paper.print\r\n     [ method ]\r\n     **\r\n     * Creates path that represent given text written using given font at given position with given size.\r\n     * Result of the method is path element that contains whole text as a separate path.\r\n     **\r\n     > Parameters\r\n     **\r\n     - x (number) x position of the text\r\n     - y (number) y position of the text\r\n     - string (string) text to print\r\n     - font (object) font object, see @Paper.getFont\r\n     - size (number) #optional size of the font, default is `16`\r\n     - origin (string) #optional could be `\"baseline\"` or `\"middle\"`, default is `\"middle\"`\r\n     - letter_spacing (number) #optional number in range `-1..1`, default is `0`\r\n     - line_spacing (number) #optional number in range `1..3`, default is `1`\r\n     = (object) resulting path element, which consist of all letters\r\n     > Usage\r\n     | var txt = r.print(10, 50, \"print\", r.getFont(\"Museo\"), 30).attr({fill: \"#fff\"});\r\n    \\*/\r\n    paperproto.print = function (x, y, string, font, size, origin, letter_spacing, line_spacing) {\r\n        origin = origin || \"middle\"; // baseline|middle\r\n        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);\r\n        line_spacing = mmax(mmin(line_spacing || 1, 3), 1);\r\n        var letters = Str(string)[split](E),\r\n            shift = 0,\r\n            notfirst = 0,\r\n            path = E,\r\n            scale;\r\n        R.is(font, \"string\") && (font = this.getFont(font));\r\n        if (font) {\r\n            scale = (size || 16) / font.face[\"units-per-em\"];\r\n            var bb = font.face.bbox[split](separator),\r\n                top = +bb[0],\r\n                lineHeight = bb[3] - bb[1],\r\n                shifty = 0,\r\n                height = +bb[1] + (origin == \"baseline\" ? lineHeight + (+font.face.descent) : lineHeight / 2);\r\n            for (var i = 0, ii = letters.length; i < ii; i++) {\r\n                if (letters[i] == \"\\n\") {\r\n                    shift = 0;\r\n                    curr = 0;\r\n                    notfirst = 0;\r\n                    shifty += lineHeight * line_spacing;\r\n                } else {\r\n                    var prev = notfirst && font.glyphs[letters[i - 1]] || {},\r\n                        curr = font.glyphs[letters[i]];\r\n                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;\r\n                    notfirst = 1;\r\n                }\r\n                if (curr && curr.d) {\r\n                    path += R.transformPath(curr.d, [\"t\", shift * scale, shifty * scale, \"s\", scale, scale, top, height, \"t\", (x - top) / scale, (y - height) / scale]);\r\n                }\r\n            }\r\n        }\r\n        return this.path(path).attr({\r\n            fill: \"#000\",\r\n            stroke: \"none\"\r\n        });\r\n    };\r\n\r\n    /*\\\r\n     * Paper.add\r\n     [ method ]\r\n     **\r\n     * Imports elements in JSON array in format `{type: type, <attributes>}`\r\n     **\r\n     > Parameters\r\n     **\r\n     - json (array)\r\n     = (object) resulting set of imported elements\r\n     > Usage\r\n     | paper.add([\r\n     |     {\r\n     |         type: \"circle\",\r\n     |         cx: 10,\r\n     |         cy: 10,\r\n     |         r: 5\r\n     |     },\r\n     |     {\r\n     |         type: \"rect\",\r\n     |         x: 10,\r\n     |         y: 10,\r\n     |         width: 10,\r\n     |         height: 10,\r\n     |         fill: \"#fc0\"\r\n     |     }\r\n     | ]);\r\n    \\*/\r\n    paperproto.add = function (json) {\r\n        if (R.is(json, \"array\")) {\r\n            var res = this.set(),\r\n                i = 0,\r\n                ii = json.length,\r\n                j;\r\n            for (; i < ii; i++) {\r\n                j = json[i] || {};\r\n                elements[has](j.type) && res.push(this[j.type]().attr(j));\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /*\\\r\n     * Raphael.format\r\n     [ method ]\r\n     **\r\n     * Simple format function. Replaces construction of type “`{<number>}`” to the corresponding argument.\r\n     **\r\n     > Parameters\r\n     **\r\n     - token (string) string to format\r\n     - … (string) rest of arguments will be treated as parameters for replacement\r\n     = (string) formated string\r\n     > Usage\r\n     | var x = 10,\r\n     |     y = 20,\r\n     |     width = 40,\r\n     |     height = 50;\r\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\r\n     | paper.path(Raphael.format(\"M{0},{1}h{2}v{3}h{4}z\", x, y, width, height, -width));\r\n    \\*/\r\n    R.format = function (token, params) {\r\n        var args = R.is(params, array) ? [0][concat](params) : arguments;\r\n        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {\r\n            return args[++i] == null ? E : args[i];\r\n        }));\r\n        return token || E;\r\n    };\r\n    /*\\\r\n     * Raphael.fullfill\r\n     [ method ]\r\n     **\r\n     * A little bit more advanced format function than @Raphael.format. Replaces construction of type “`{<name>}`” to the corresponding argument.\r\n     **\r\n     > Parameters\r\n     **\r\n     - token (string) string to format\r\n     - json (object) object which properties will be used as a replacement\r\n     = (string) formated string\r\n     > Usage\r\n     | // this will draw a rectangular shape equivalent to \"M10,20h40v50h-40z\"\r\n     | paper.path(Raphael.fullfill(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\r\n     |     x: 10,\r\n     |     y: 20,\r\n     |     dim: {\r\n     |         width: 40,\r\n     |         height: 50,\r\n     |         \"negative width\": -40\r\n     |     }\r\n     | }));\r\n    \\*/\r\n    R.fullfill = (function () {\r\n        var tokenRegex = /\\{([^\\}]+)\\}/g,\r\n            objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\r\n            replacer = function (all, key, obj) {\r\n                var res = obj;\r\n                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\r\n                    name = name || quotedName;\r\n                    if (res) {\r\n                        if (name in res) {\r\n                            res = res[name];\r\n                        }\r\n                        typeof res == \"function\" && isFunc && (res = res());\r\n                    }\r\n                });\r\n                res = (res == null || res == obj ? all : res) + \"\";\r\n                return res;\r\n            };\r\n        return function (str, obj) {\r\n            return String(str).replace(tokenRegex, function (all, key) {\r\n                return replacer(all, key, obj);\r\n            });\r\n        };\r\n    })();\r\n    /*\\\r\n     * Raphael.ninja\r\n     [ method ]\r\n     **\r\n     * If you want to leave no trace of Raphaël (Well, Raphaël creates only one global variable `Raphael`, but anyway.) You can use `ninja` method.\r\n     * Beware, that in this case plugins could stop working, because they are depending on global variable existance.\r\n     **\r\n     = (object) Raphael object\r\n     > Usage\r\n     | (function (local_raphael) {\r\n     |     var paper = local_raphael(10, 10, 320, 200);\r\n     |     …\r\n     | })(Raphael.ninja());\r\n    \\*/\r\n    R.ninja = function () {\r\n        oldRaphael.was ? (g.win.Raphael = oldRaphael.is) : delete Raphael;\r\n        return R;\r\n    };\r\n    /*\\\r\n     * Raphael.st\r\n     [ property (object) ]\r\n     **\r\n     * You can add your own method to elements and sets. It is wise to add a set method for each element method\r\n     * you added, so you will be able to call the same method on sets too.\r\n     **\r\n     * See also @Raphael.el.\r\n     > Usage\r\n     | Raphael.el.red = function () {\r\n     |     this.attr({fill: \"#f00\"});\r\n     | };\r\n     | Raphael.st.red = function () {\r\n     |     this.forEach(function (el) {\r\n     |         el.red();\r\n     |     });\r\n     | };\r\n     | // then use it\r\n     | paper.set(paper.circle(100, 100, 20), paper.circle(110, 100, 20)).red();\r\n    \\*/\r\n    R.st = setproto;\r\n    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\r\n    (function (doc, loaded, f) {\r\n        if (doc.readyState == null && doc.addEventListener){\r\n            doc.addEventListener(loaded, f = function () {\r\n                doc.removeEventListener(loaded, f, false);\r\n                doc.readyState = \"complete\";\r\n            }, false);\r\n            doc.readyState = \"loading\";\r\n        }\r\n        function isLoaded() {\r\n            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve(\"raphael.DOMload\");\r\n        }\r\n        isLoaded();\r\n    })(document, \"DOMContentLoaded\");\r\n\r\n    eve.on(\"raphael.DOMload\", function () {\r\n        loaded = true;\r\n    });\r\n\r\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Raphaël - JavaScript Vector Library                                 │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ SVG Module                                                          │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\r\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\r\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function(){\r\n    if (!R.svg) {\r\n        return;\r\n    }\r\n    var has = \"hasOwnProperty\",\r\n        Str = String,\r\n        toFloat = parseFloat,\r\n        toInt = parseInt,\r\n        math = Math,\r\n        mmax = math.max,\r\n        abs = math.abs,\r\n        pow = math.pow,\r\n        separator = /[, ]+/,\r\n        eve = R.eve,\r\n        E = \"\",\r\n        S = \" \";\r\n    var xlink = \"http://www.w3.org/1999/xlink\",\r\n        markers = {\r\n            block: \"M5,0 0,2.5 5,5z\",\r\n            classic: \"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",\r\n            diamond: \"M2.5,0 5,2.5 2.5,5 0,2.5z\",\r\n            open: \"M6,1 1,3.5 6,6\",\r\n            oval: \"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"\r\n        },\r\n        markerCounter = {};\r\n    R.toString = function () {\r\n        return  \"Your browser supports SVG.\\nYou are running Rapha\\xebl \" + this.version;\r\n    };\r\n    var $ = function (el, attr) {\r\n        if (attr) {\r\n            if (typeof el == \"string\") {\r\n                el = $(el);\r\n            }\r\n            for (var key in attr) if (attr[has](key)) {\r\n                if (key.substring(0, 6) == \"xlink:\") {\r\n                    el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));\r\n                } else {\r\n                    if (el !== undefined) {\r\n                        var elValue = Str(attr[key]);\r\n                        if (key !== \"d\" || key === \"d\" && elValue !== \"M,0,0\") {\r\n                            el.setAttribute(key, elValue);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            el = R._g.doc.createElementNS(\"http://www.w3.org/2000/svg\", el);\r\n            el.style && (el.style.webkitTapHighlightColor = \"rgba(0,0,0,0)\");\r\n        }\r\n        return el;\r\n    },\r\n    addGradientFill = function (element, gradient) {\r\n        var type = \"linear\",\r\n            id = element.id + gradient,\r\n            fx = .5, fy = .5,\r\n            o = element.node,\r\n            SVG = element.paper,\r\n            s = o.style,\r\n            el = R._g.doc.getElementById(id);\r\n        if (!el) {\r\n            gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {\r\n                type = \"radial\";\r\n                if (_fx && _fy) {\r\n                    fx = toFloat(_fx);\r\n                    fy = toFloat(_fy);\r\n                    var dir = ((fy > .5) * 2 - 1);\r\n                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&\r\n                        (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&\r\n                        fy != .5 &&\r\n                        (fy = fy.toFixed(5) - 1e-5 * dir);\r\n                }\r\n                return E;\r\n            });\r\n            gradient = gradient.split(/\\s*\\-\\s*/);\r\n            if (type == \"linear\") {\r\n                var angle = gradient.shift();\r\n                angle = -toFloat(angle);\r\n                if (isNaN(angle)) {\r\n                    return null;\r\n                }\r\n                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],\r\n                    max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\r\n                vector[2] *= max;\r\n                vector[3] *= max;\r\n                if (vector[2] < 0) {\r\n                    vector[0] = -vector[2];\r\n                    vector[2] = 0;\r\n                }\r\n                if (vector[3] < 0) {\r\n                    vector[1] = -vector[3];\r\n                    vector[3] = 0;\r\n                }\r\n            }\r\n            var dots = R._parseDots(gradient);\r\n            if (!dots) {\r\n                return null;\r\n            }\r\n            id = id.replace(/[\\(\\)\\s,\\xb0#]/g, \"_\");\r\n            \r\n            if (element.gradient && id != element.gradient.id) {\r\n                SVG.defs.removeChild(element.gradient);\r\n                delete element.gradient;\r\n            }\r\n\r\n            if (!element.gradient) {\r\n                el = $(type + \"Gradient\", {id: id});\r\n                element.gradient = el;\r\n                $(el, type == \"radial\" ? {\r\n                    fx: fx,\r\n                    fy: fy\r\n                } : {\r\n                    x1: vector[0],\r\n                    y1: vector[1],\r\n                    x2: vector[2],\r\n                    y2: vector[3],\r\n                    gradientTransform: element.matrix.invert()\r\n                });\r\n                SVG.defs.appendChild(el);\r\n                for (var i = 0, ii = dots.length; i < ii; i++) {\r\n                    el.appendChild($(\"stop\", {\r\n                        offset: dots[i].offset ? dots[i].offset : i ? \"100%\" : \"0%\",\r\n                        \"stop-color\": dots[i].color || \"#fff\"\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        $(o, {\r\n            fill: \"url(#\" + id + \")\",\r\n            opacity: 1,\r\n            \"fill-opacity\": 1\r\n        });\r\n        s.fill = E;\r\n        s.opacity = 1;\r\n        s.fillOpacity = 1;\r\n        return 1;\r\n    },\r\n    updatePosition = function (o) {\r\n        var bbox = o.getBBox(1);\r\n        $(o.pattern, {patternTransform: o.matrix.invert() + \" translate(\" + bbox.x + \",\" + bbox.y + \")\"});\r\n    },\r\n    addArrow = function (o, value, isEnd) {\r\n        if (o.type == \"path\") {\r\n            var values = Str(value).toLowerCase().split(\"-\"),\r\n                p = o.paper,\r\n                se = isEnd ? \"end\" : \"start\",\r\n                node = o.node,\r\n                attrs = o.attrs,\r\n                stroke = attrs[\"stroke-width\"],\r\n                i = values.length,\r\n                type = \"classic\",\r\n                from,\r\n                to,\r\n                dx,\r\n                refX,\r\n                attr,\r\n                w = 3,\r\n                h = 3,\r\n                t = 5;\r\n            while (i--) {\r\n                switch (values[i]) {\r\n                    case \"block\":\r\n                    case \"classic\":\r\n                    case \"oval\":\r\n                    case \"diamond\":\r\n                    case \"open\":\r\n                    case \"none\":\r\n                        type = values[i];\r\n                        break;\r\n                    case \"wide\": h = 5; break;\r\n                    case \"narrow\": h = 2; break;\r\n                    case \"long\": w = 5; break;\r\n                    case \"short\": w = 2; break;\r\n                }\r\n            }\r\n            if (type == \"open\") {\r\n                w += 2;\r\n                h += 2;\r\n                t += 2;\r\n                dx = 1;\r\n                refX = isEnd ? 4 : 1;\r\n                attr = {\r\n                    fill: \"none\",\r\n                    stroke: attrs.stroke\r\n                };\r\n            } else {\r\n                refX = dx = w / 2;\r\n                attr = {\r\n                    fill: attrs.stroke,\r\n                    stroke: \"none\"\r\n                };\r\n            }\r\n            if (o._.arrows) {\r\n                if (isEnd) {\r\n                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;\r\n                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;\r\n                } else {\r\n                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;\r\n                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;\r\n                }\r\n            } else {\r\n                o._.arrows = {};\r\n            }\r\n            if (type != \"none\") {\r\n                var pathId = \"raphael-marker-\" + type,\r\n                    markerId = \"raphael-marker-\" + se + type + w + h;\r\n                if (!R._g.doc.getElementById(pathId)) {\r\n                    p.defs.appendChild($($(\"path\"), {\r\n                        \"stroke-linecap\": \"round\",\r\n                        d: markers[type],\r\n                        id: pathId\r\n                    }));\r\n                    markerCounter[pathId] = 1;\r\n                } else {\r\n                    markerCounter[pathId]++;\r\n                }\r\n                var marker = R._g.doc.getElementById(markerId),\r\n                    use;\r\n                if (!marker) {\r\n                    marker = $($(\"marker\"), {\r\n                        id: markerId,\r\n                        markerHeight: h,\r\n                        markerWidth: w,\r\n                        orient: \"auto\",\r\n                        refX: refX,\r\n                        refY: h / 2\r\n                    });\r\n                    use = $($(\"use\"), {\r\n                        \"xlink:href\": \"#\" + pathId,\r\n                        transform: (isEnd ? \"rotate(180 \" + w / 2 + \" \" + h / 2 + \") \" : E) + \"scale(\" + w / t + \",\" + h / t + \")\",\r\n                        \"stroke-width\": (1 / ((w / t + h / t) / 2)).toFixed(4)\r\n                    });\r\n                    marker.appendChild(use);\r\n                    p.defs.appendChild(marker);\r\n                    markerCounter[markerId] = 1;\r\n                } else {\r\n                    markerCounter[markerId]++;\r\n                    use = marker.getElementsByTagName(\"use\")[0];\r\n                }\r\n                $(use, attr);\r\n                var delta = dx * (type != \"diamond\" && type != \"oval\");\r\n                if (isEnd) {\r\n                    from = o._.arrows.startdx * stroke || 0;\r\n                    to = R.getTotalLength(attrs.path) - delta * stroke;\r\n                } else {\r\n                    from = delta * stroke;\r\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\r\n                }\r\n                attr = {};\r\n                attr[\"marker-\" + se] = \"url(#\" + markerId + \")\";\r\n                if (to || from) {\r\n                    attr.d = R.getSubpath(attrs.path, from, to);\r\n                }\r\n                $(node, attr);\r\n                o._.arrows[se + \"Path\"] = pathId;\r\n                o._.arrows[se + \"Marker\"] = markerId;\r\n                o._.arrows[se + \"dx\"] = delta;\r\n                o._.arrows[se + \"Type\"] = type;\r\n                o._.arrows[se + \"String\"] = value;\r\n            } else {\r\n                if (isEnd) {\r\n                    from = o._.arrows.startdx * stroke || 0;\r\n                    to = R.getTotalLength(attrs.path) - from;\r\n                } else {\r\n                    from = 0;\r\n                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\r\n                }\r\n                o._.arrows[se + \"Path\"] && $(node, {d: R.getSubpath(attrs.path, from, to)});\r\n                delete o._.arrows[se + \"Path\"];\r\n                delete o._.arrows[se + \"Marker\"];\r\n                delete o._.arrows[se + \"dx\"];\r\n                delete o._.arrows[se + \"Type\"];\r\n                delete o._.arrows[se + \"String\"];\r\n            }\r\n            for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {\r\n                var item = R._g.doc.getElementById(attr);\r\n                item && item.parentNode.removeChild(item);\r\n            }\r\n        }\r\n    },\r\n    dasharray = {\r\n        \"\": [0],\r\n        \"none\": [0],\r\n        \"-\": [3, 1],\r\n        \".\": [1, 1],\r\n        \"-.\": [3, 1, 1, 1],\r\n        \"-..\": [3, 1, 1, 1, 1, 1],\r\n        \". \": [1, 3],\r\n        \"- \": [4, 3],\r\n        \"--\": [8, 3],\r\n        \"- .\": [4, 3, 1, 3],\r\n        \"--.\": [8, 3, 1, 3],\r\n        \"--..\": [8, 3, 1, 3, 1, 3]\r\n    },\r\n    addDashes = function (o, value, params) {\r\n        value = dasharray[Str(value).toLowerCase()];\r\n        if (value) {\r\n            var width = o.attrs[\"stroke-width\"] || \"1\",\r\n                butt = {round: width, square: width, butt: 0}[o.attrs[\"stroke-linecap\"] || params[\"stroke-linecap\"]] || 0,\r\n                dashes = [],\r\n                i = value.length;\r\n            while (i--) {\r\n                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;\r\n            }\r\n            $(o.node, {\"stroke-dasharray\": dashes.join(\",\")});\r\n        }\r\n    },\r\n    setFillAndStroke = function (o, params) {\r\n        var node = o.node,\r\n            attrs = o.attrs,\r\n            vis = node.style.visibility;\r\n        node.style.visibility = \"hidden\";\r\n        for (var att in params) {\r\n            if (params[has](att)) {\r\n                if (!R._availableAttrs[has](att)) {\r\n                    continue;\r\n                }\r\n                var value = params[att];\r\n                attrs[att] = value;\r\n                switch (att) {\r\n                    case \"blur\":\r\n                        o.blur(value);\r\n                        break;\r\n                    case \"title\":\r\n                        var title = node.getElementsByTagName(\"title\");\r\n\r\n                        // Use the existing <title>.\r\n                        if (title.length && (title = title[0])) {\r\n                          title.firstChild.nodeValue = value;\r\n                        } else {\r\n                          title = $(\"title\");\r\n                          var val = R._g.doc.createTextNode(value);\r\n                          title.appendChild(val);\r\n                          node.appendChild(title);\r\n                        }\r\n                        break;\r\n                    case \"href\":\r\n                    case \"target\":\r\n                        var pn = node.parentNode;\r\n                        if (pn.tagName.toLowerCase() != \"a\") {\r\n                            var hl = $(\"a\");\r\n                            pn.insertBefore(hl, node);\r\n                            hl.appendChild(node);\r\n                            pn = hl;\r\n                        }\r\n                        if (att == \"target\") {\r\n                            pn.setAttributeNS(xlink, \"show\", value == \"blank\" ? \"new\" : value);\r\n                        } else {\r\n                            pn.setAttributeNS(xlink, att, value);\r\n                        }\r\n                        break;\r\n                    case \"cursor\":\r\n                        node.style.cursor = value;\r\n                        break;\r\n                    case \"transform\":\r\n                        o.transform(value);\r\n                        break;\r\n                    case \"arrow-start\":\r\n                        addArrow(o, value);\r\n                        break;\r\n                    case \"arrow-end\":\r\n                        addArrow(o, value, 1);\r\n                        break;\r\n                    case \"clip-rect\":\r\n                        var rect = Str(value).split(separator);\r\n                        if (rect.length == 4) {\r\n                            o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);\r\n                            var el = $(\"clipPath\"),\r\n                                rc = $(\"rect\");\r\n                            el.id = R.createUUID();\r\n                            $(rc, {\r\n                                x: rect[0],\r\n                                y: rect[1],\r\n                                width: rect[2],\r\n                                height: rect[3]\r\n                            });\r\n                            el.appendChild(rc);\r\n                            o.paper.defs.appendChild(el);\r\n                            $(node, {\"clip-path\": \"url(#\" + el.id + \")\"});\r\n                            o.clip = rc;\r\n                        }\r\n                        if (!value) {\r\n                            var path = node.getAttribute(\"clip-path\");\r\n                            if (path) {\r\n                                var clip = R._g.doc.getElementById(path.replace(/(^url\\(#|\\)$)/g, E));\r\n                                clip && clip.parentNode.removeChild(clip);\r\n                                $(node, {\"clip-path\": E});\r\n                                delete o.clip;\r\n                            }\r\n                        }\r\n                    break;\r\n                    case \"path\":\r\n                        if (o.type == \"path\") {\r\n                            $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : \"M0,0\"});\r\n                            o._.dirty = 1;\r\n                            if (o._.arrows) {\r\n                                \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\r\n                                \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"width\":\r\n                        node.setAttribute(att, value);\r\n                        o._.dirty = 1;\r\n                        if (attrs.fx) {\r\n                            att = \"x\";\r\n                            value = attrs.x;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    case \"x\":\r\n                        if (attrs.fx) {\r\n                            value = -attrs.x - (attrs.width || 0);\r\n                        }\r\n                    case \"rx\":\r\n                        if (att == \"rx\" && o.type == \"rect\") {\r\n                            break;\r\n                        }\r\n                    case \"cx\":\r\n                        node.setAttribute(att, value);\r\n                        o.pattern && updatePosition(o);\r\n                        o._.dirty = 1;\r\n                        break;\r\n                    case \"height\":\r\n                        node.setAttribute(att, value);\r\n                        o._.dirty = 1;\r\n                        if (attrs.fy) {\r\n                            att = \"y\";\r\n                            value = attrs.y;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    case \"y\":\r\n                        if (attrs.fy) {\r\n                            value = -attrs.y - (attrs.height || 0);\r\n                        }\r\n                    case \"ry\":\r\n                        if (att == \"ry\" && o.type == \"rect\") {\r\n                            break;\r\n                        }\r\n                    case \"cy\":\r\n                        node.setAttribute(att, value);\r\n                        o.pattern && updatePosition(o);\r\n                        o._.dirty = 1;\r\n                        break;\r\n                    case \"r\":\r\n                        if (o.type == \"rect\") {\r\n                            $(node, {rx: value, ry: value});\r\n                        } else {\r\n                            node.setAttribute(att, value);\r\n                        }\r\n                        o._.dirty = 1;\r\n                        break;\r\n                    case \"src\":\r\n                        if (o.type == \"image\") {\r\n                            node.setAttributeNS(xlink, \"href\", value);\r\n                        }\r\n                        break;\r\n                    case \"stroke-width\":\r\n                        if (o._.sx != 1 || o._.sy != 1) {\r\n                            value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;\r\n                        }\r\n                        if (o.paper._vbSize) {\r\n                            value *= o.paper._vbSize;\r\n                        }\r\n                        node.setAttribute(att, value);\r\n                        if (attrs[\"stroke-dasharray\"]) {\r\n                            addDashes(o, attrs[\"stroke-dasharray\"], params);\r\n                        }\r\n                        if (o._.arrows) {\r\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\r\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\r\n                        }\r\n                        break;\r\n                    case \"stroke-dasharray\":\r\n                        addDashes(o, value, params);\r\n                        break;\r\n                    case \"fill\":\r\n                        var isURL = Str(value).match(R._ISURL);\r\n                        if (isURL) {\r\n                            el = $(\"pattern\");\r\n                            var ig = $(\"image\");\r\n                            el.id = R.createUUID();\r\n                            $(el, {x: 0, y: 0, patternUnits: \"userSpaceOnUse\", height: 1, width: 1});\r\n                            $(ig, {x: 0, y: 0, \"xlink:href\": isURL[1]});\r\n                            el.appendChild(ig);\r\n\r\n                            (function (el) {\r\n                                R._preload(isURL[1], function () {\r\n                                    var w = this.offsetWidth,\r\n                                        h = this.offsetHeight;\r\n                                    $(el, {width: w, height: h});\r\n                                    $(ig, {width: w, height: h});\r\n                                    o.paper.safari();\r\n                                });\r\n                            })(el);\r\n                            o.paper.defs.appendChild(el);\r\n                            $(node, {fill: \"url(#\" + el.id + \")\"});\r\n                            o.pattern = el;\r\n                            o.pattern && updatePosition(o);\r\n                            break;\r\n                        }\r\n                        var clr = R.getRGB(value);\r\n                        if (!clr.error) {\r\n                            delete params.gradient;\r\n                            delete attrs.gradient;\r\n                            !R.is(attrs.opacity, \"undefined\") &&\r\n                                R.is(params.opacity, \"undefined\") &&\r\n                                $(node, {opacity: attrs.opacity});\r\n                            !R.is(attrs[\"fill-opacity\"], \"undefined\") &&\r\n                                R.is(params[\"fill-opacity\"], \"undefined\") &&\r\n                                $(node, {\"fill-opacity\": attrs[\"fill-opacity\"]});\r\n                        } else if ((o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value)) {\r\n                            if (\"opacity\" in attrs || \"fill-opacity\" in attrs) {\r\n                                var gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\r\n                                if (gradient) {\r\n                                    var stops = gradient.getElementsByTagName(\"stop\");\r\n                                    $(stops[stops.length - 1], {\"stop-opacity\": (\"opacity\" in attrs ? attrs.opacity : 1) * (\"fill-opacity\" in attrs ? attrs[\"fill-opacity\"] : 1)});\r\n                                }\r\n                            }\r\n                            attrs.gradient = value;\r\n                            attrs.fill = \"none\";\r\n                            break;\r\n                        }\r\n                        clr[has](\"opacity\") && $(node, {\"fill-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\r\n                    case \"stroke\":\r\n                        clr = R.getRGB(value);\r\n                        node.setAttribute(att, clr.hex);\r\n                        att == \"stroke\" && clr[has](\"opacity\") && $(node, {\"stroke-opacity\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\r\n                        if (att == \"stroke\" && o._.arrows) {\r\n                            \"startString\" in o._.arrows && addArrow(o, o._.arrows.startString);\r\n                            \"endString\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\r\n                        }\r\n                        break;\r\n                    case \"gradient\":\r\n                        (o.type == \"circle\" || o.type == \"ellipse\" || Str(value).charAt() != \"r\") && addGradientFill(o, value);\r\n                        break;\r\n                    case \"opacity\":\r\n                        if (attrs.gradient && !attrs[has](\"stroke-opacity\")) {\r\n                            $(node, {\"stroke-opacity\": value > 1 ? value / 100 : value});\r\n                        }\r\n                        // fall\r\n                    case \"fill-opacity\":\r\n                        if (attrs.gradient) {\r\n                            gradient = R._g.doc.getElementById(node.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g, E));\r\n                            if (gradient) {\r\n                                stops = gradient.getElementsByTagName(\"stop\");\r\n                                $(stops[stops.length - 1], {\"stop-opacity\": value});\r\n                            }\r\n                            break;\r\n                        }\r\n                    default:\r\n                        att == \"font-size\" && (value = toInt(value, 10) + \"px\");\r\n                        var cssrule = att.replace(/(\\-.)/g, function (w) {\r\n                            return w.substring(1).toUpperCase();\r\n                        });\r\n                        node.style[cssrule] = value;\r\n                        o._.dirty = 1;\r\n                        node.setAttribute(att, value);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        tuneText(o, params);\r\n        node.style.visibility = vis;\r\n    },\r\n    leading = 1.2,\r\n    tuneText = function (el, params) {\r\n        if (el.type != \"text\" || !(params[has](\"text\") || params[has](\"font\") || params[has](\"font-size\") || params[has](\"x\") || params[has](\"y\"))) {\r\n            return;\r\n        }\r\n        var a = el.attrs,\r\n            node = el.node,\r\n            fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue(\"font-size\"), 10) : 10;\r\n\r\n        if (params[has](\"text\")) {\r\n            a.text = params.text;\r\n            while (node.firstChild) {\r\n                node.removeChild(node.firstChild);\r\n            }\r\n            var texts = Str(params.text).split(\"\\n\"),\r\n                tspans = [],\r\n                tspan;\r\n            for (var i = 0, ii = texts.length; i < ii; i++) {\r\n                tspan = $(\"tspan\");\r\n                i && $(tspan, {dy: fontSize * leading, x: a.x});\r\n                tspan.appendChild(R._g.doc.createTextNode(texts[i]));\r\n                node.appendChild(tspan);\r\n                tspans[i] = tspan;\r\n            }\r\n        } else {\r\n            tspans = node.getElementsByTagName(\"tspan\");\r\n            for (i = 0, ii = tspans.length; i < ii; i++) if (i) {\r\n                $(tspans[i], {dy: fontSize * leading, x: a.x});\r\n            } else {\r\n                $(tspans[0], {dy: 0});\r\n            }\r\n        }\r\n        $(node, {x: a.x, y: a.y});\r\n        el._.dirty = 1;\r\n        var bb = el._getBBox(),\r\n            dif = a.y - (bb.y + bb.height / 2);\r\n        dif && R.is(dif, \"finite\") && $(tspans[0], {dy: dif});\r\n    },\r\n    Element = function (node, svg) {\r\n        var X = 0,\r\n            Y = 0;\r\n        /*\\\r\n         * Element.node\r\n         [ property (object) ]\r\n         **\r\n         * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\r\n         **\r\n         * Note: Don’t mess with it.\r\n         > Usage\r\n         | // draw a circle at coordinate 10,10 with radius of 10\r\n         | var c = paper.circle(10, 10, 10);\r\n         | c.node.onclick = function () {\r\n         |     c.attr(\"fill\", \"red\");\r\n         | };\r\n        \\*/\r\n        this[0] = this.node = node;\r\n        /*\\\r\n         * Element.raphael\r\n         [ property (object) ]\r\n         **\r\n         * Internal reference to @Raphael object. In case it is not available.\r\n         > Usage\r\n         | Raphael.el.red = function () {\r\n         |     var hsb = this.paper.raphael.rgb2hsb(this.attr(\"fill\"));\r\n         |     hsb.h = 1;\r\n         |     this.attr({fill: this.paper.raphael.hsb2rgb(hsb).hex});\r\n         | }\r\n        \\*/\r\n        node.raphael = true;\r\n        /*\\\r\n         * Element.id\r\n         [ property (number) ]\r\n         **\r\n         * Unique id of the element. Especially usesful when you want to listen to events of the element, \r\n         * because all events are fired in format `<module>.<action>.<id>`. Also useful for @Paper.getById method.\r\n        \\*/\r\n        this.id = R._oid++;\r\n        node.raphaelid = this.id;\r\n        this.matrix = R.matrix();\r\n        this.realPath = null;\r\n        /*\\\r\n         * Element.paper\r\n         [ property (object) ]\r\n         **\r\n         * Internal reference to “paper” where object drawn. Mainly for use in plugins and element extensions.\r\n         > Usage\r\n         | Raphael.el.cross = function () {\r\n         |     this.attr({fill: \"red\"});\r\n         |     this.paper.path(\"M10,10L50,50M50,10L10,50\")\r\n         |         .attr({stroke: \"red\"});\r\n         | }\r\n        \\*/\r\n        this.paper = svg;\r\n        this.attrs = this.attrs || {};\r\n        this._ = {\r\n            transform: [],\r\n            sx: 1,\r\n            sy: 1,\r\n            deg: 0,\r\n            dx: 0,\r\n            dy: 0,\r\n            dirty: 1\r\n        };\r\n        !svg.bottom && (svg.bottom = this);\r\n        /*\\\r\n         * Element.prev\r\n         [ property (object) ]\r\n         **\r\n         * Reference to the previous element in the hierarchy.\r\n        \\*/\r\n        this.prev = svg.top;\r\n        svg.top && (svg.top.next = this);\r\n        svg.top = this;\r\n        /*\\\r\n         * Element.next\r\n         [ property (object) ]\r\n         **\r\n         * Reference to the next element in the hierarchy.\r\n        \\*/\r\n        this.next = null;\r\n    },\r\n    elproto = R.el;\r\n\r\n    Element.prototype = elproto;\r\n    elproto.constructor = Element;\r\n\r\n    R._engine.path = function (pathString, SVG) {\r\n        var el = $(\"path\");\r\n        SVG.canvas && SVG.canvas.appendChild(el);\r\n        var p = new Element(el, SVG);\r\n        p.type = \"path\";\r\n        setFillAndStroke(p, {\r\n            fill: \"none\",\r\n            stroke: \"#000\",\r\n            path: pathString\r\n        });\r\n        return p;\r\n    };\r\n    /*\\\r\n     * Element.rotate\r\n     [ method ]\r\n     **\r\n     * Deprecated! Use @Element.transform instead.\r\n     * Adds rotation by given angle around given point to the list of\r\n     * transformations of the element.\r\n     > Parameters\r\n     - deg (number) angle in degrees\r\n     - cx (number) #optional x coordinate of the centre of rotation\r\n     - cy (number) #optional y coordinate of the centre of rotation\r\n     * If cx & cy aren’t specified centre of the shape is used as a point of rotation.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.rotate = function (deg, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        deg = Str(deg).split(separator);\r\n        if (deg.length - 1) {\r\n            cx = toFloat(deg[1]);\r\n            cy = toFloat(deg[2]);\r\n        }\r\n        deg = toFloat(deg[0]);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n            cx = bbox.x + bbox.width / 2;\r\n            cy = bbox.y + bbox.height / 2;\r\n        }\r\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.scale\r\n     [ method ]\r\n     **\r\n     * Deprecated! Use @Element.transform instead.\r\n     * Adds scale by given amount relative to given point to the list of\r\n     * transformations of the element.\r\n     > Parameters\r\n     - sx (number) horisontal scale amount\r\n     - sy (number) vertical scale amount\r\n     - cx (number) #optional x coordinate of the centre of scale\r\n     - cy (number) #optional y coordinate of the centre of scale\r\n     * If cx & cy aren’t specified centre of the shape is used instead.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.scale = function (sx, sy, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        sx = Str(sx).split(separator);\r\n        if (sx.length - 1) {\r\n            sy = toFloat(sx[1]);\r\n            cx = toFloat(sx[2]);\r\n            cy = toFloat(sx[3]);\r\n        }\r\n        sx = toFloat(sx[0]);\r\n        (sy == null) && (sy = sx);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n        }\r\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\r\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\r\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.translate\r\n     [ method ]\r\n     **\r\n     * Deprecated! Use @Element.transform instead.\r\n     * Adds translation by given amount to the list of transformations of the element.\r\n     > Parameters\r\n     - dx (number) horisontal shift\r\n     - dy (number) vertical shift\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.translate = function (dx, dy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        dx = Str(dx).split(separator);\r\n        if (dx.length - 1) {\r\n            dy = toFloat(dx[1]);\r\n        }\r\n        dx = toFloat(dx[0]) || 0;\r\n        dy = +dy || 0;\r\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.transform\r\n     [ method ]\r\n     **\r\n     * Adds transformation to the element which is separate to other attributes,\r\n     * i.e. translation doesn’t change `x` or `y` of the rectange. The format\r\n     * of transformation string is similar to the path string syntax:\r\n     | \"t100,100r30,100,100s2,2,100,100r45s1.5\"\r\n     * Each letter is a command. There are four commands: `t` is for translate, `r` is for rotate, `s` is for\r\n     * scale and `m` is for matrix.\r\n     *\r\n     * There are also alternative “absolute” translation, rotation and scale: `T`, `R` and `S`. They will not take previous transformation into account. For example, `...T100,0` will always move element 100 px horisontally, while `...t100,0` could move it vertically if there is `r90` before. Just compare results of `r90t100,0` and `r90T100,0`.\r\n     *\r\n     * So, the example line above could be read like “translate by 100, 100; rotate 30° around 100, 100; scale twice around 100, 100;\r\n     * rotate 45° around centre; scale 1.5 times relative to centre”. As you can see rotate and scale commands have origin\r\n     * coordinates as optional parameters, the default is the centre point of the element.\r\n     * Matrix accepts six parameters.\r\n     > Usage\r\n     | var el = paper.rect(10, 20, 300, 200);\r\n     | // translate 100, 100, rotate 45°, translate -100, 0\r\n     | el.transform(\"t100,100r45t-100,0\");\r\n     | // if you want you can append or prepend transformations\r\n     | el.transform(\"...t50,50\");\r\n     | el.transform(\"s2...\");\r\n     | // or even wrap\r\n     | el.transform(\"t50,50...t-50-50\");\r\n     | // to reset transformation call method with empty string\r\n     | el.transform(\"\");\r\n     | // to get current value call it without parameters\r\n     | console.log(el.transform());\r\n     > Parameters\r\n     - tstr (string) #optional transformation string\r\n     * If tstr isn’t specified\r\n     = (string) current transformation string\r\n     * else\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.transform = function (tstr) {\r\n        var _ = this._;\r\n        if (tstr == null) {\r\n            return _.transform;\r\n        }\r\n        R._extractTransform(this, tstr);\r\n\r\n        this.clip && $(this.clip, {transform: this.matrix.invert()});\r\n        this.pattern && updatePosition(this);\r\n        this.node && $(this.node, {transform: this.matrix});\r\n    \r\n        if (_.sx != 1 || _.sy != 1) {\r\n            var sw = this.attrs[has](\"stroke-width\") ? this.attrs[\"stroke-width\"] : 1;\r\n            this.attr({\"stroke-width\": sw});\r\n        }\r\n\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.hide\r\n     [ method ]\r\n     **\r\n     * Makes element invisible. See @Element.show.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.hide = function () {\r\n        !this.removed && this.paper.safari(this.node.style.display = \"none\");\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.show\r\n     [ method ]\r\n     **\r\n     * Makes element visible. See @Element.hide.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.show = function () {\r\n        !this.removed && this.paper.safari(this.node.style.display = \"\");\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.remove\r\n     [ method ]\r\n     **\r\n     * Removes element from the paper.\r\n    \\*/\r\n    elproto.remove = function () {\r\n        if (this.removed || !this.node.parentNode) {\r\n            return;\r\n        }\r\n        var paper = this.paper;\r\n        paper.__set__ && paper.__set__.exclude(this);\r\n        eve.unbind(\"raphael.*.*.\" + this.id);\r\n        if (this.gradient) {\r\n            paper.defs.removeChild(this.gradient);\r\n        }\r\n        R._tear(this, paper);\r\n        if (this.node.parentNode.tagName.toLowerCase() == \"a\") {\r\n            this.node.parentNode.parentNode.removeChild(this.node.parentNode);\r\n        } else {\r\n            this.node.parentNode.removeChild(this.node);\r\n        }\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n        this.removed = true;\r\n    };\r\n    elproto._getBBox = function () {\r\n        if (this.node.style.display == \"none\") {\r\n            this.show();\r\n            var hide = true;\r\n        }\r\n        var bbox = {};\r\n        try {\r\n            bbox = this.node.getBBox();\r\n        } catch(e) {\r\n            // Firefox 3.0.x plays badly here\r\n        } finally {\r\n            bbox = bbox || {};\r\n        }\r\n        hide && this.hide();\r\n        return bbox;\r\n    };\r\n    /*\\\r\n     * Element.attr\r\n     [ method ]\r\n     **\r\n     * Sets the attributes of the element.\r\n     > Parameters\r\n     - attrName (string) attribute’s name\r\n     - value (string) value\r\n     * or\r\n     - params (object) object of name/value pairs\r\n     * or\r\n     - attrName (string) attribute’s name\r\n     * or\r\n     - attrNames (array) in this case method returns array of current values for given attribute names\r\n     = (object) @Element if attrsName & value or params are passed in.\r\n     = (...) value of the attribute if only attrsName is passed in.\r\n     = (array) array of values of the attribute if attrsNames is passed in.\r\n     = (object) object of attributes if nothing is passed in.\r\n     > Possible parameters\r\n     # <p>Please refer to the <a href=\"http://www.w3.org/TR/SVG/\" title=\"The W3C Recommendation for the SVG language describes these properties in detail.\">SVG specification</a> for an explanation of these parameters.</p>\r\n     o arrow-end (string) arrowhead on the end of the path. The format for string is `<type>[-<width>[-<length>]]`. Possible types: `classic`, `block`, `open`, `oval`, `diamond`, `none`, width: `wide`, `narrow`, `medium`, length: `long`, `short`, `midium`.\r\n     o clip-rect (string) comma or space separated values: x, y, width and height\r\n     o cursor (string) CSS type of the cursor\r\n     o cx (number) the x-axis coordinate of the center of the circle, or ellipse\r\n     o cy (number) the y-axis coordinate of the center of the circle, or ellipse\r\n     o fill (string) colour, gradient or image\r\n     o fill-opacity (number)\r\n     o font (string)\r\n     o font-family (string)\r\n     o font-size (number) font size in pixels\r\n     o font-weight (string)\r\n     o height (number)\r\n     o href (string) URL, if specified element behaves as hyperlink\r\n     o opacity (number)\r\n     o path (string) SVG path string format\r\n     o r (number) radius of the circle, ellipse or rounded corner on the rect\r\n     o rx (number) horisontal radius of the ellipse\r\n     o ry (number) vertical radius of the ellipse\r\n     o src (string) image URL, only works for @Element.image element\r\n     o stroke (string) stroke colour\r\n     o stroke-dasharray (string) [“”, “`-`”, “`.`”, “`-.`”, “`-..`”, “`. `”, “`- `”, “`--`”, “`- .`”, “`--.`”, “`--..`”]\r\n     o stroke-linecap (string) [“`butt`”, “`square`”, “`round`”]\r\n     o stroke-linejoin (string) [“`bevel`”, “`round`”, “`miter`”]\r\n     o stroke-miterlimit (number)\r\n     o stroke-opacity (number)\r\n     o stroke-width (number) stroke width in pixels, default is '1'\r\n     o target (string) used with href\r\n     o text (string) contents of the text element. Use `\\n` for multiline text\r\n     o text-anchor (string) [“`start`”, “`middle`”, “`end`”], default is “`middle`”\r\n     o title (string) will create tooltip with a given text\r\n     o transform (string) see @Element.transform\r\n     o width (number)\r\n     o x (number)\r\n     o y (number)\r\n     > Gradients\r\n     * Linear gradient format: “`‹angle›-‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`90-#fff-#000`” – 90°\r\n     * gradient from white to black or “`0-#fff-#f00:20-#000`” – 0° gradient from white via red (at 20%) to black.\r\n     *\r\n     * radial gradient: “`r[(‹fx›, ‹fy›)]‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`r#fff-#000`” –\r\n     * gradient from white to black or “`r(0.25, 0.75)#fff-#000`” – gradient from white to black with focus point\r\n     * at 0.25, 0.75. Focus point coordinates are in 0..1 range. Radial gradients can only be applied to circles and ellipses.\r\n     > Path String\r\n     # <p>Please refer to <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path’s data attribute’s format are described in the SVG specification.\">SVG documentation regarding path string</a>. Raphaël fully supports it.</p>\r\n     > Colour Parsing\r\n     # <ul>\r\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\r\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\r\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\r\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\r\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\r\n     #     <li>rgba(•••, •••, •••, •••) — red, green and blue channels’ values: (“<code>rgba(200,&nbsp;100,&nbsp;0, .5)</code>”)</li>\r\n     #     <li>rgba(•••%, •••%, •••%, •••%) — same as above, but in %: (“<code>rgba(100%,&nbsp;175%,&nbsp;0%, 50%)</code>”)</li>\r\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\r\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\r\n     #     <li>hsba(•••, •••, •••, •••) — same as above, but with opacity</li>\r\n     #     <li>hsl(•••, •••, •••) — almost the same as hsb, see <a href=\"http://en.wikipedia.org/wiki/HSL_and_HSV\" title=\"HSL and HSV - Wikipedia, the free encyclopedia\">Wikipedia page</a></li>\r\n     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\r\n     #     <li>hsla(•••, •••, •••, •••) — same as above, but with opacity</li>\r\n     #     <li>Optionally for hsb and hsl you could specify hue as a degree: “<code>hsl(240deg,&nbsp;1,&nbsp;.5)</code>” or, if you want to go fancy, “<code>hsl(240°,&nbsp;1,&nbsp;.5)</code>”</li>\r\n     # </ul>\r\n    \\*/\r\n    elproto.attr = function (name, value) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (name == null) {\r\n            var res = {};\r\n            for (var a in this.attrs) if (this.attrs[has](a)) {\r\n                res[a] = this.attrs[a];\r\n            }\r\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\r\n            res.transform = this._.transform;\r\n            return res;\r\n        }\r\n        if (value == null && R.is(name, \"string\")) {\r\n            if (name == \"fill\" && this.attrs.fill == \"none\" && this.attrs.gradient) {\r\n                return this.attrs.gradient;\r\n            }\r\n            if (name == \"transform\") {\r\n                return this._.transform;\r\n            }\r\n            var names = name.split(separator),\r\n                out = {};\r\n            for (var i = 0, ii = names.length; i < ii; i++) {\r\n                name = names[i];\r\n                if (name in this.attrs) {\r\n                    out[name] = this.attrs[name];\r\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\r\n                    out[name] = this.paper.customAttributes[name].def;\r\n                } else {\r\n                    out[name] = R._availableAttrs[name];\r\n                }\r\n            }\r\n            return ii - 1 ? out : out[names[0]];\r\n        }\r\n        if (value == null && R.is(name, \"array\")) {\r\n            out = {};\r\n            for (i = 0, ii = name.length; i < ii; i++) {\r\n                out[name[i]] = this.attr(name[i]);\r\n            }\r\n            return out;\r\n        }\r\n        if (value != null) {\r\n            var params = {};\r\n            params[name] = value;\r\n        } else if (name != null && R.is(name, \"object\")) {\r\n            params = name;\r\n        }\r\n        for (var key in params) {\r\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\r\n        }\r\n        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\r\n            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\r\n            this.attrs[key] = params[key];\r\n            for (var subkey in par) if (par[has](subkey)) {\r\n                params[subkey] = par[subkey];\r\n            }\r\n        }\r\n        setFillAndStroke(this, params);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.toFront\r\n     [ method ]\r\n     **\r\n     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.toFront = function () {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (this.node.parentNode.tagName.toLowerCase() == \"a\") {\r\n            this.node.parentNode.parentNode.appendChild(this.node.parentNode);\r\n        } else {\r\n            this.node.parentNode.appendChild(this.node);\r\n        }\r\n        var svg = this.paper;\r\n        svg.top != this && R._tofront(this, svg);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.toBack\r\n     [ method ]\r\n     **\r\n     * Moves the element so it is the furthest from the viewer’s eyes, behind other elements.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.toBack = function () {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        var parent = this.node.parentNode;\r\n        if (parent === null) {\r\n            return this;\r\n        }\r\n        if (parent.tagName.toLowerCase() == \"a\") {\r\n            parent.parentNode.insertBefore(this.node.parentNode, this.node.parentNode.parentNode.firstChild); \r\n        } else if (parent.firstChild != this.node) {\r\n            parent.insertBefore(this.node, this.node.parentNode.firstChild);\r\n        }\r\n        R._toback(this, this.paper);\r\n        var svg = this.paper;\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.insertAfter\r\n     [ method ]\r\n     **\r\n     * Inserts current object after the given one.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.insertAfter = function (element) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        var node = element.node || element[element.length - 1].node;\r\n        if (node.nextSibling) {\r\n            node.parentNode.insertBefore(this.node, node.nextSibling);\r\n        } else {\r\n            node.parentNode.appendChild(this.node);\r\n        }\r\n        R._insertafter(this, element, this.paper);\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Element.insertBefore\r\n     [ method ]\r\n     **\r\n     * Inserts current object before the given one.\r\n     = (object) @Element\r\n    \\*/\r\n    elproto.insertBefore = function (element) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        var node = element.node || element[0].node;\r\n        node.parentNode.insertBefore(this.node, node);\r\n        R._insertbefore(this, element, this.paper);\r\n        return this;\r\n    };\r\n    elproto.blur = function (size) {\r\n        // Experimental. No Safari support. Use it on your own risk.\r\n        var t = this;\r\n        if (+size !== 0) {\r\n            var fltr = $(\"filter\"),\r\n                blur = $(\"feGaussianBlur\");\r\n            t.attrs.blur = size;\r\n            fltr.id = R.createUUID();\r\n            $(blur, {stdDeviation: +size || 1.5});\r\n            fltr.appendChild(blur);\r\n            t.paper.defs.appendChild(fltr);\r\n            t._blur = fltr;\r\n            $(t.node, {filter: \"url(#\" + fltr.id + \")\"});\r\n        } else {\r\n            if (t._blur) {\r\n                t._blur.parentNode.removeChild(t._blur);\r\n                delete t._blur;\r\n                delete t.attrs.blur;\r\n            }\r\n            t.node.removeAttribute(\"filter\");\r\n        }\r\n        return t;\r\n    };\r\n    R._engine.circle = function (svg, x, y, r) {\r\n        var el = $(\"circle\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {cx: x, cy: y, r: r, fill: \"none\", stroke: \"#000\"};\r\n        res.type = \"circle\";\r\n        $(el, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.rect = function (svg, x, y, w, h, r) {\r\n        var el = $(\"rect\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {x: x, y: y, width: w, height: h, r: r || 0, rx: r || 0, ry: r || 0, fill: \"none\", stroke: \"#000\"};\r\n        res.type = \"rect\";\r\n        $(el, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.ellipse = function (svg, x, y, rx, ry) {\r\n        var el = $(\"ellipse\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: \"none\", stroke: \"#000\"};\r\n        res.type = \"ellipse\";\r\n        $(el, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.image = function (svg, src, x, y, w, h) {\r\n        var el = $(\"image\");\r\n        $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: \"none\"});\r\n        el.setAttributeNS(xlink, \"href\", src);\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {x: x, y: y, width: w, height: h, src: src};\r\n        res.type = \"image\";\r\n        return res;\r\n    };\r\n    R._engine.text = function (svg, x, y, text) {\r\n        var el = $(\"text\");\r\n        svg.canvas && svg.canvas.appendChild(el);\r\n        var res = new Element(el, svg);\r\n        res.attrs = {\r\n            x: x,\r\n            y: y,\r\n            \"text-anchor\": \"middle\",\r\n            text: text,\r\n            font: R._availableAttrs.font,\r\n            stroke: \"none\",\r\n            fill: \"#000\"\r\n        };\r\n        res.type = \"text\";\r\n        setFillAndStroke(res, res.attrs);\r\n        return res;\r\n    };\r\n    R._engine.setSize = function (width, height) {\r\n        this.width = width || this.width;\r\n        this.height = height || this.height;\r\n        this.canvas.setAttribute(\"width\", this.width);\r\n        this.canvas.setAttribute(\"height\", this.height);\r\n        if (this._viewBox) {\r\n            this.setViewBox.apply(this, this._viewBox);\r\n        }\r\n        return this;\r\n    };\r\n    R._engine.create = function () {\r\n        var con = R._getContainer.apply(0, arguments),\r\n            container = con && con.container,\r\n            x = con.x,\r\n            y = con.y,\r\n            width = con.width,\r\n            height = con.height;\r\n        if (!container) {\r\n            throw new Error(\"SVG container not found.\");\r\n        }\r\n        var cnvs = $(\"svg\"),\r\n            css = \"overflow:hidden;\",\r\n            isFloating;\r\n        x = x || 0;\r\n        y = y || 0;\r\n        width = width || 512;\r\n        height = height || 342;\r\n        $(cnvs, {\r\n            height: height,\r\n            version: 1.1,\r\n            width: width,\r\n            xmlns: \"http://www.w3.org/2000/svg\"\r\n        });\r\n        if (container == 1) {\r\n            cnvs.style.cssText = css + \"position:absolute;left:\" + x + \"px;top:\" + y + \"px\";\r\n            R._g.doc.body.appendChild(cnvs);\r\n            isFloating = 1;\r\n        } else {\r\n            cnvs.style.cssText = css + \"position:relative\";\r\n            if (container.firstChild) {\r\n                container.insertBefore(cnvs, container.firstChild);\r\n            } else {\r\n                container.appendChild(cnvs);\r\n            }\r\n        }\r\n        container = new R._Paper;\r\n        container.width = width;\r\n        container.height = height;\r\n        container.canvas = cnvs;\r\n        container.clear();\r\n        container._left = container._top = 0;\r\n        isFloating && (container.renderfix = function () {});\r\n        container.renderfix();\r\n        return container;\r\n    };\r\n    R._engine.setViewBox = function (x, y, w, h, fit) {\r\n        eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\r\n        var size = mmax(w / this.width, h / this.height),\r\n            top = this.top,\r\n            aspectRatio = fit ? \"xMidYMid meet\" : \"xMinYMin\",\r\n            vb,\r\n            sw;\r\n        if (x == null) {\r\n            if (this._vbSize) {\r\n                size = 1;\r\n            }\r\n            delete this._vbSize;\r\n            vb = \"0 0 \" + this.width + S + this.height;\r\n        } else {\r\n            this._vbSize = size;\r\n            vb = x + S + y + S + w + S + h;\r\n        }\r\n        $(this.canvas, {\r\n            viewBox: vb,\r\n            preserveAspectRatio: aspectRatio\r\n        });\r\n        while (size && top) {\r\n            sw = \"stroke-width\" in top.attrs ? top.attrs[\"stroke-width\"] : 1;\r\n            top.attr({\"stroke-width\": sw});\r\n            top._.dirty = 1;\r\n            top._.dirtyT = 1;\r\n            top = top.prev;\r\n        }\r\n        this._viewBox = [x, y, w, h, !!fit];\r\n        return this;\r\n    };\r\n    /*\\\r\n     * Paper.renderfix\r\n     [ method ]\r\n     **\r\n     * Fixes the issue of Firefox and IE9 regarding subpixel rendering. If paper is dependant\r\n     * on other elements after reflow it could shift half pixel which cause for lines to lost their crispness.\r\n     * This method fixes the issue.\r\n     **\r\n       Special thanks to Mariusz Nowak (http://www.medikoo.com/) for this method.\r\n    \\*/\r\n    R.prototype.renderfix = function () {\r\n        var cnvs = this.canvas,\r\n            s = cnvs.style,\r\n            pos;\r\n        try {\r\n            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();\r\n        } catch (e) {\r\n            pos = cnvs.createSVGMatrix();\r\n        }\r\n        var left = -pos.e % 1,\r\n            top = -pos.f % 1;\r\n        if (left || top) {\r\n            if (left) {\r\n                this._left = (this._left + left) % 1;\r\n                s.left = this._left + \"px\";\r\n            }\r\n            if (top) {\r\n                this._top = (this._top + top) % 1;\r\n                s.top = this._top + \"px\";\r\n            }\r\n        }\r\n    };\r\n    /*\\\r\n     * Paper.clear\r\n     [ method ]\r\n     **\r\n     * Clears the paper, i.e. removes all the elements.\r\n    \\*/\r\n    R.prototype.clear = function () {\r\n        R.eve(\"raphael.clear\", this);\r\n        var c = this.canvas;\r\n        while (c.firstChild) {\r\n            c.removeChild(c.firstChild);\r\n        }\r\n        this.bottom = this.top = null;\r\n        (this.desc = $(\"desc\")).appendChild(R._g.doc.createTextNode(\"Created with Rapha\\xebl \" + R.version));\r\n        c.appendChild(this.desc);\r\n        c.appendChild(this.defs = $(\"defs\"));\r\n    };\r\n    /*\\\r\n     * Paper.remove\r\n     [ method ]\r\n     **\r\n     * Removes the paper from the DOM.\r\n    \\*/\r\n    R.prototype.remove = function () {\r\n        eve(\"raphael.remove\", this);\r\n        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n    };\r\n    var setproto = R.st;\r\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\r\n        setproto[method] = (function (methodname) {\r\n            return function () {\r\n                var arg = arguments;\r\n                return this.forEach(function (el) {\r\n                    el[methodname].apply(el, arg);\r\n                });\r\n            };\r\n        })(method);\r\n    }\r\n})();\r\n\r\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\r\n// │ Raphaël - JavaScript Vector Library                                 │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ VML Module                                                          │ \\\\\r\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\r\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\r\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\r\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\r\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\r\n\r\n(function(){\r\n    if (!R.vml) {\r\n        return;\r\n    }\r\n    var has = \"hasOwnProperty\",\r\n        Str = String,\r\n        toFloat = parseFloat,\r\n        math = Math,\r\n        round = math.round,\r\n        mmax = math.max,\r\n        mmin = math.min,\r\n        abs = math.abs,\r\n        fillString = \"fill\",\r\n        separator = /[, ]+/,\r\n        eve = R.eve,\r\n        ms = \" progid:DXImageTransform.Microsoft\",\r\n        S = \" \",\r\n        E = \"\",\r\n        map = {M: \"m\", L: \"l\", C: \"c\", Z: \"x\", m: \"t\", l: \"r\", c: \"v\", z: \"x\"},\r\n        bites = /([clmz]),?([^clmz]*)/gi,\r\n        blurregexp = / progid:\\S+Blur\\([^\\)]+\\)/g,\r\n        val = /-?[^,\\s-]+/g,\r\n        cssDot = \"position:absolute;left:0;top:0;width:1px;height:1px\",\r\n        zoom = 21600,\r\n        pathTypes = {path: 1, rect: 1, image: 1},\r\n        ovalTypes = {circle: 1, ellipse: 1},\r\n        path2vml = function (path) {\r\n            var total =  /[ahqstv]/ig,\r\n                command = R._pathToAbsolute;\r\n            Str(path).match(total) && (command = R._path2curve);\r\n            total = /[clmz]/g;\r\n            if (command == R._pathToAbsolute && !Str(path).match(total)) {\r\n                var res = Str(path).replace(bites, function (all, command, args) {\r\n                    var vals = [],\r\n                        isMove = command.toLowerCase() == \"m\",\r\n                        res = map[command];\r\n                    args.replace(val, function (value) {\r\n                        if (isMove && vals.length == 2) {\r\n                            res += vals + map[command == \"m\" ? \"l\" : \"L\"];\r\n                            vals = [];\r\n                        }\r\n                        vals.push(round(value * zoom));\r\n                    });\r\n                    return res + vals;\r\n                });\r\n                return res;\r\n            }\r\n            var pa = command(path), p, r;\r\n            res = [];\r\n            for (var i = 0, ii = pa.length; i < ii; i++) {\r\n                p = pa[i];\r\n                r = pa[i][0].toLowerCase();\r\n                r == \"z\" && (r = \"x\");\r\n                for (var j = 1, jj = p.length; j < jj; j++) {\r\n                    r += round(p[j] * zoom) + (j != jj - 1 ? \",\" : E);\r\n                }\r\n                res.push(r);\r\n            }\r\n            return res.join(S);\r\n        },\r\n        compensation = function (deg, dx, dy) {\r\n            var m = R.matrix();\r\n            m.rotate(-deg, .5, .5);\r\n            return {\r\n                dx: m.x(dx, dy),\r\n                dy: m.y(dx, dy)\r\n            };\r\n        },\r\n        setCoords = function (p, sx, sy, dx, dy, deg) {\r\n            var _ = p._,\r\n                m = p.matrix,\r\n                fillpos = _.fillpos,\r\n                o = p.node,\r\n                s = o.style,\r\n                y = 1,\r\n                flip = \"\",\r\n                dxdy,\r\n                kx = zoom / sx,\r\n                ky = zoom / sy;\r\n            s.visibility = \"hidden\";\r\n            if (!sx || !sy) {\r\n                return;\r\n            }\r\n            o.coordsize = abs(kx) + S + abs(ky);\r\n            s.rotation = deg * (sx * sy < 0 ? -1 : 1);\r\n            if (deg) {\r\n                var c = compensation(deg, dx, dy);\r\n                dx = c.dx;\r\n                dy = c.dy;\r\n            }\r\n            sx < 0 && (flip += \"x\");\r\n            sy < 0 && (flip += \" y\") && (y = -1);\r\n            s.flip = flip;\r\n            o.coordorigin = (dx * -kx) + S + (dy * -ky);\r\n            if (fillpos || _.fillsize) {\r\n                var fill = o.getElementsByTagName(fillString);\r\n                fill = fill && fill[0];\r\n                o.removeChild(fill);\r\n                if (fillpos) {\r\n                    c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));\r\n                    fill.position = c.dx * y + S + c.dy * y;\r\n                }\r\n                if (_.fillsize) {\r\n                    fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);\r\n                }\r\n                o.appendChild(fill);\r\n            }\r\n            s.visibility = \"visible\";\r\n        };\r\n    R.toString = function () {\r\n        return  \"Your browser doesn\\u2019t support SVG. Falling down to VML.\\nYou are running Rapha\\xebl \" + this.version;\r\n    };\r\n    var addArrow = function (o, value, isEnd) {\r\n        var values = Str(value).toLowerCase().split(\"-\"),\r\n            se = isEnd ? \"end\" : \"start\",\r\n            i = values.length,\r\n            type = \"classic\",\r\n            w = \"medium\",\r\n            h = \"medium\";\r\n        while (i--) {\r\n            switch (values[i]) {\r\n                case \"block\":\r\n                case \"classic\":\r\n                case \"oval\":\r\n                case \"diamond\":\r\n                case \"open\":\r\n                case \"none\":\r\n                    type = values[i];\r\n                    break;\r\n                case \"wide\":\r\n                case \"narrow\": h = values[i]; break;\r\n                case \"long\":\r\n                case \"short\": w = values[i]; break;\r\n            }\r\n        }\r\n        var stroke = o.node.getElementsByTagName(\"stroke\")[0];\r\n        stroke[se + \"arrow\"] = type;\r\n        stroke[se + \"arrowlength\"] = w;\r\n        stroke[se + \"arrowwidth\"] = h;\r\n    },\r\n    setFillAndStroke = function (o, params) {\r\n        // o.paper.canvas.style.display = \"none\";\r\n        o.attrs = o.attrs || {};\r\n        var node = o.node,\r\n            a = o.attrs,\r\n            s = node.style,\r\n            xy,\r\n            newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),\r\n            isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),\r\n            res = o;\r\n\r\n\r\n        for (var par in params) if (params[has](par)) {\r\n            a[par] = params[par];\r\n        }\r\n        if (newpath) {\r\n            a.path = R._getPath[o.type](o);\r\n            o._.dirty = 1;\r\n        }\r\n        params.href && (node.href = params.href);\r\n        params.title && (node.title = params.title);\r\n        params.target && (node.target = params.target);\r\n        params.cursor && (s.cursor = params.cursor);\r\n        \"blur\" in params && o.blur(params.blur);\r\n        if (params.path && o.type == \"path\" || newpath) {\r\n            node.path = path2vml(~Str(a.path).toLowerCase().indexOf(\"r\") ? R._pathToAbsolute(a.path) : a.path);\r\n            if (o.type == \"image\") {\r\n                o._.fillpos = [a.x, a.y];\r\n                o._.fillsize = [a.width, a.height];\r\n                setCoords(o, 1, 1, 0, 0, 0);\r\n            }\r\n        }\r\n        \"transform\" in params && o.transform(params.transform);\r\n        if (isOval) {\r\n            var cx = +a.cx,\r\n                cy = +a.cy,\r\n                rx = +a.rx || +a.r || 0,\r\n                ry = +a.ry || +a.r || 0;\r\n            node.path = R.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));\r\n            o._.dirty = 1;\r\n        }\r\n        if (\"clip-rect\" in params) {\r\n            var rect = Str(params[\"clip-rect\"]).split(separator);\r\n            if (rect.length == 4) {\r\n                rect[2] = +rect[2] + (+rect[0]);\r\n                rect[3] = +rect[3] + (+rect[1]);\r\n                var div = node.clipRect || R._g.doc.createElement(\"div\"),\r\n                    dstyle = div.style;\r\n                dstyle.clip = R.format(\"rect({1}px {2}px {3}px {0}px)\", rect);\r\n                if (!node.clipRect) {\r\n                    dstyle.position = \"absolute\";\r\n                    dstyle.top = 0;\r\n                    dstyle.left = 0;\r\n                    dstyle.width = o.paper.width + \"px\";\r\n                    dstyle.height = o.paper.height + \"px\";\r\n                    node.parentNode.insertBefore(div, node);\r\n                    div.appendChild(node);\r\n                    node.clipRect = div;\r\n                }\r\n            }\r\n            if (!params[\"clip-rect\"]) {\r\n                node.clipRect && (node.clipRect.style.clip = \"auto\");\r\n            }\r\n        }\r\n        if (o.textpath) {\r\n            var textpathStyle = o.textpath.style;\r\n            params.font && (textpathStyle.font = params.font);\r\n            params[\"font-family\"] && (textpathStyle.fontFamily = '\"' + params[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g, E) + '\"');\r\n            params[\"font-size\"] && (textpathStyle.fontSize = params[\"font-size\"]);\r\n            params[\"font-weight\"] && (textpathStyle.fontWeight = params[\"font-weight\"]);\r\n            params[\"font-style\"] && (textpathStyle.fontStyle = params[\"font-style\"]);\r\n        }\r\n        if (\"arrow-start\" in params) {\r\n            addArrow(res, params[\"arrow-start\"]);\r\n        }\r\n        if (\"arrow-end\" in params) {\r\n            addArrow(res, params[\"arrow-end\"], 1);\r\n        }\r\n        if (params.opacity != null || \r\n            params[\"stroke-width\"] != null ||\r\n            params.fill != null ||\r\n            params.src != null ||\r\n            params.stroke != null ||\r\n            params[\"stroke-width\"] != null ||\r\n            params[\"stroke-opacity\"] != null ||\r\n            params[\"fill-opacity\"] != null ||\r\n            params[\"stroke-dasharray\"] != null ||\r\n            params[\"stroke-miterlimit\"] != null ||\r\n            params[\"stroke-linejoin\"] != null ||\r\n            params[\"stroke-linecap\"] != null) {\r\n            var fill = node.getElementsByTagName(fillString),\r\n                newfill = false;\r\n            fill = fill && fill[0];\r\n            !fill && (newfill = fill = createNode(fillString));\r\n            if (o.type == \"image\" && params.src) {\r\n                fill.src = params.src;\r\n            }\r\n            params.fill && (fill.on = true);\r\n            if (fill.on == null || params.fill == \"none\" || params.fill === null) {\r\n                fill.on = false;\r\n            }\r\n            if (fill.on && params.fill) {\r\n                var isURL = Str(params.fill).match(R._ISURL);\r\n                if (isURL) {\r\n                    fill.parentNode == node && node.removeChild(fill);\r\n                    fill.rotate = true;\r\n                    fill.src = isURL[1];\r\n                    fill.type = \"tile\";\r\n                    var bbox = o.getBBox(1);\r\n                    fill.position = bbox.x + S + bbox.y;\r\n                    o._.fillpos = [bbox.x, bbox.y];\r\n\r\n                    R._preload(isURL[1], function () {\r\n                        o._.fillsize = [this.offsetWidth, this.offsetHeight];\r\n                    });\r\n                } else {\r\n                    fill.color = R.getRGB(params.fill).hex;\r\n                    fill.src = E;\r\n                    fill.type = \"solid\";\r\n                    if (R.getRGB(params.fill).error && (res.type in {circle: 1, ellipse: 1} || Str(params.fill).charAt() != \"r\") && addGradientFill(res, params.fill, fill)) {\r\n                        a.fill = \"none\";\r\n                        a.gradient = params.fill;\r\n                        fill.rotate = false;\r\n                    }\r\n                }\r\n            }\r\n            if (\"fill-opacity\" in params || \"opacity\" in params) {\r\n                var opacity = ((+a[\"fill-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);\r\n                opacity = mmin(mmax(opacity, 0), 1);\r\n                fill.opacity = opacity;\r\n                if (fill.src) {\r\n                    fill.color = \"none\";\r\n                }\r\n            }\r\n            node.appendChild(fill);\r\n            var stroke = (node.getElementsByTagName(\"stroke\") && node.getElementsByTagName(\"stroke\")[0]),\r\n            newstroke = false;\r\n            !stroke && (newstroke = stroke = createNode(\"stroke\"));\r\n            if ((params.stroke && params.stroke != \"none\") ||\r\n                params[\"stroke-width\"] ||\r\n                params[\"stroke-opacity\"] != null ||\r\n                params[\"stroke-dasharray\"] ||\r\n                params[\"stroke-miterlimit\"] ||\r\n                params[\"stroke-linejoin\"] ||\r\n                params[\"stroke-linecap\"]) {\r\n                stroke.on = true;\r\n            }\r\n            (params.stroke == \"none\" || params.stroke === null || stroke.on == null || params.stroke == 0 || params[\"stroke-width\"] == 0) && (stroke.on = false);\r\n            var strokeColor = R.getRGB(params.stroke);\r\n            stroke.on && params.stroke && (stroke.color = strokeColor.hex);\r\n            opacity = ((+a[\"stroke-opacity\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);\r\n            var width = (toFloat(params[\"stroke-width\"]) || 1) * .75;\r\n            opacity = mmin(mmax(opacity, 0), 1);\r\n            params[\"stroke-width\"] == null && (width = a[\"stroke-width\"]);\r\n            params[\"stroke-width\"] && (stroke.weight = width);\r\n            width && width < 1 && (opacity *= width) && (stroke.weight = 1);\r\n            stroke.opacity = opacity;\r\n        \r\n            params[\"stroke-linejoin\"] && (stroke.joinstyle = params[\"stroke-linejoin\"] || \"miter\");\r\n            stroke.miterlimit = params[\"stroke-miterlimit\"] || 8;\r\n            params[\"stroke-linecap\"] && (stroke.endcap = params[\"stroke-linecap\"] == \"butt\" ? \"flat\" : params[\"stroke-linecap\"] == \"square\" ? \"square\" : \"round\");\r\n            if (\"stroke-dasharray\" in params) {\r\n                var dasharray = {\r\n                    \"-\": \"shortdash\",\r\n                    \".\": \"shortdot\",\r\n                    \"-.\": \"shortdashdot\",\r\n                    \"-..\": \"shortdashdotdot\",\r\n                    \". \": \"dot\",\r\n                    \"- \": \"dash\",\r\n                    \"--\": \"longdash\",\r\n                    \"- .\": \"dashdot\",\r\n                    \"--.\": \"longdashdot\",\r\n                    \"--..\": \"longdashdotdot\"\r\n                };\r\n                stroke.dashstyle = dasharray[has](params[\"stroke-dasharray\"]) ? dasharray[params[\"stroke-dasharray\"]] : E;\r\n            }\r\n            newstroke && node.appendChild(stroke);\r\n        }\r\n        if (res.type == \"text\") {\r\n            res.paper.canvas.style.display = E;\r\n            var span = res.paper.span,\r\n                m = 100,\r\n                fontSize = a.font && a.font.match(/\\d+(?:\\.\\d*)?(?=px)/);\r\n            s = span.style;\r\n            a.font && (s.font = a.font);\r\n            a[\"font-family\"] && (s.fontFamily = a[\"font-family\"]);\r\n            a[\"font-weight\"] && (s.fontWeight = a[\"font-weight\"]);\r\n            a[\"font-style\"] && (s.fontStyle = a[\"font-style\"]);\r\n            fontSize = toFloat(a[\"font-size\"] || fontSize && fontSize[0]) || 10;\r\n            s.fontSize = fontSize * m + \"px\";\r\n            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, \"&#60;\").replace(/&/g, \"&#38;\").replace(/\\n/g, \"<br>\"));\r\n            var brect = span.getBoundingClientRect();\r\n            res.W = a.w = (brect.right - brect.left) / m;\r\n            res.H = a.h = (brect.bottom - brect.top) / m;\r\n            // res.paper.canvas.style.display = \"none\";\r\n            res.X = a.x;\r\n            res.Y = a.y + res.H / 2;\r\n\r\n            (\"x\" in params || \"y\" in params) && (res.path.v = R.format(\"m{0},{1}l{2},{1}\", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));\r\n            var dirtyattrs = [\"x\", \"y\", \"text\", \"font\", \"font-family\", \"font-weight\", \"font-style\", \"font-size\"];\r\n            for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {\r\n                res._.dirty = 1;\r\n                break;\r\n            }\r\n        \r\n            // text-anchor emulation\r\n            switch (a[\"text-anchor\"]) {\r\n                case \"start\":\r\n                    res.textpath.style[\"v-text-align\"] = \"left\";\r\n                    res.bbx = res.W / 2;\r\n                break;\r\n                case \"end\":\r\n                    res.textpath.style[\"v-text-align\"] = \"right\";\r\n                    res.bbx = -res.W / 2;\r\n                break;\r\n                default:\r\n                    res.textpath.style[\"v-text-align\"] = \"center\";\r\n                    res.bbx = 0;\r\n                break;\r\n            }\r\n            res.textpath.style[\"v-text-kern\"] = true;\r\n        }\r\n        // res.paper.canvas.style.display = E;\r\n    },\r\n    addGradientFill = function (o, gradient, fill) {\r\n        o.attrs = o.attrs || {};\r\n        var attrs = o.attrs,\r\n            pow = Math.pow,\r\n            opacity,\r\n            oindex,\r\n            type = \"linear\",\r\n            fxfy = \".5 .5\";\r\n        o.attrs.gradient = gradient;\r\n        gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {\r\n            type = \"radial\";\r\n            if (fx && fy) {\r\n                fx = toFloat(fx);\r\n                fy = toFloat(fy);\r\n                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);\r\n                fxfy = fx + S + fy;\r\n            }\r\n            return E;\r\n        });\r\n        gradient = gradient.split(/\\s*\\-\\s*/);\r\n        if (type == \"linear\") {\r\n            var angle = gradient.shift();\r\n            angle = -toFloat(angle);\r\n            if (isNaN(angle)) {\r\n                return null;\r\n            }\r\n        }\r\n        var dots = R._parseDots(gradient);\r\n        if (!dots) {\r\n            return null;\r\n        }\r\n        o = o.shape || o.node;\r\n        if (dots.length) {\r\n            o.removeChild(fill);\r\n            fill.on = true;\r\n            fill.method = \"none\";\r\n            fill.color = dots[0].color;\r\n            fill.color2 = dots[dots.length - 1].color;\r\n            var clrs = [];\r\n            for (var i = 0, ii = dots.length; i < ii; i++) {\r\n                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);\r\n            }\r\n            fill.colors = clrs.length ? clrs.join() : \"0% \" + fill.color;\r\n            if (type == \"radial\") {\r\n                fill.type = \"gradientTitle\";\r\n                fill.focus = \"100%\";\r\n                fill.focussize = \"0 0\";\r\n                fill.focusposition = fxfy;\r\n                fill.angle = 0;\r\n            } else {\r\n                // fill.rotate= true;\r\n                fill.type = \"gradient\";\r\n                fill.angle = (270 - angle) % 360;\r\n            }\r\n            o.appendChild(fill);\r\n        }\r\n        return 1;\r\n    },\r\n    Element = function (node, vml) {\r\n        this[0] = this.node = node;\r\n        node.raphael = true;\r\n        this.id = R._oid++;\r\n        node.raphaelid = this.id;\r\n        this.X = 0;\r\n        this.Y = 0;\r\n        this.attrs = {};\r\n        this.paper = vml;\r\n        this.matrix = R.matrix();\r\n        this._ = {\r\n            transform: [],\r\n            sx: 1,\r\n            sy: 1,\r\n            dx: 0,\r\n            dy: 0,\r\n            deg: 0,\r\n            dirty: 1,\r\n            dirtyT: 1\r\n        };\r\n        !vml.bottom && (vml.bottom = this);\r\n        this.prev = vml.top;\r\n        vml.top && (vml.top.next = this);\r\n        vml.top = this;\r\n        this.next = null;\r\n    };\r\n    var elproto = R.el;\r\n\r\n    Element.prototype = elproto;\r\n    elproto.constructor = Element;\r\n    elproto.transform = function (tstr) {\r\n        if (tstr == null) {\r\n            return this._.transform;\r\n        }\r\n        var vbs = this.paper._viewBoxShift,\r\n            vbt = vbs ? \"s\" + [vbs.scale, vbs.scale] + \"-1-1t\" + [vbs.dx, vbs.dy] : E,\r\n            oldt;\r\n        if (vbs) {\r\n            oldt = tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, this._.transform || E);\r\n        }\r\n        R._extractTransform(this, vbt + tstr);\r\n        var matrix = this.matrix.clone(),\r\n            skew = this.skew,\r\n            o = this.node,\r\n            split,\r\n            isGrad = ~Str(this.attrs.fill).indexOf(\"-\"),\r\n            isPatt = !Str(this.attrs.fill).indexOf(\"url(\");\r\n        matrix.translate(1, 1);\r\n        if (isPatt || isGrad || this.type == \"image\") {\r\n            skew.matrix = \"1 0 0 1\";\r\n            skew.offset = \"0 0\";\r\n            split = matrix.split();\r\n            if ((isGrad && split.noRotation) || !split.isSimple) {\r\n                o.style.filter = matrix.toFilter();\r\n                var bb = this.getBBox(),\r\n                    bbt = this.getBBox(1),\r\n                    dx = bb.x - bbt.x,\r\n                    dy = bb.y - bbt.y;\r\n                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);\r\n                setCoords(this, 1, 1, dx, dy, 0);\r\n            } else {\r\n                o.style.filter = E;\r\n                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);\r\n            }\r\n        } else {\r\n            o.style.filter = E;\r\n            skew.matrix = Str(matrix);\r\n            skew.offset = matrix.offset();\r\n        }\r\n        oldt && (this._.transform = oldt);\r\n        return this;\r\n    };\r\n    elproto.rotate = function (deg, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (deg == null) {\r\n            return;\r\n        }\r\n        deg = Str(deg).split(separator);\r\n        if (deg.length - 1) {\r\n            cx = toFloat(deg[1]);\r\n            cy = toFloat(deg[2]);\r\n        }\r\n        deg = toFloat(deg[0]);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n            cx = bbox.x + bbox.width / 2;\r\n            cy = bbox.y + bbox.height / 2;\r\n        }\r\n        this._.dirtyT = 1;\r\n        this.transform(this._.transform.concat([[\"r\", deg, cx, cy]]));\r\n        return this;\r\n    };\r\n    elproto.translate = function (dx, dy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        dx = Str(dx).split(separator);\r\n        if (dx.length - 1) {\r\n            dy = toFloat(dx[1]);\r\n        }\r\n        dx = toFloat(dx[0]) || 0;\r\n        dy = +dy || 0;\r\n        if (this._.bbox) {\r\n            this._.bbox.x += dx;\r\n            this._.bbox.y += dy;\r\n        }\r\n        this.transform(this._.transform.concat([[\"t\", dx, dy]]));\r\n        return this;\r\n    };\r\n    elproto.scale = function (sx, sy, cx, cy) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        sx = Str(sx).split(separator);\r\n        if (sx.length - 1) {\r\n            sy = toFloat(sx[1]);\r\n            cx = toFloat(sx[2]);\r\n            cy = toFloat(sx[3]);\r\n            isNaN(cx) && (cx = null);\r\n            isNaN(cy) && (cy = null);\r\n        }\r\n        sx = toFloat(sx[0]);\r\n        (sy == null) && (sy = sx);\r\n        (cy == null) && (cx = cy);\r\n        if (cx == null || cy == null) {\r\n            var bbox = this.getBBox(1);\r\n        }\r\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\r\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\r\n    \r\n        this.transform(this._.transform.concat([[\"s\", sx, sy, cx, cy]]));\r\n        this._.dirtyT = 1;\r\n        return this;\r\n    };\r\n    elproto.hide = function () {\r\n        !this.removed && (this.node.style.display = \"none\");\r\n        return this;\r\n    };\r\n    elproto.show = function () {\r\n        !this.removed && (this.node.style.display = E);\r\n        return this;\r\n    };\r\n    elproto._getBBox = function () {\r\n        if (this.removed) {\r\n            return {};\r\n        }\r\n        return {\r\n            x: this.X + (this.bbx || 0) - this.W / 2,\r\n            y: this.Y - this.H,\r\n            width: this.W,\r\n            height: this.H\r\n        };\r\n    };\r\n    elproto.remove = function () {\r\n        if (this.removed || !this.node.parentNode) {\r\n            return;\r\n        }\r\n        this.paper.__set__ && this.paper.__set__.exclude(this);\r\n        R.eve.unbind(\"raphael.*.*.\" + this.id);\r\n        R._tear(this, this.paper);\r\n        this.node.parentNode.removeChild(this.node);\r\n        this.shape && this.shape.parentNode.removeChild(this.shape);\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n        this.removed = true;\r\n    };\r\n    elproto.attr = function (name, value) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (name == null) {\r\n            var res = {};\r\n            for (var a in this.attrs) if (this.attrs[has](a)) {\r\n                res[a] = this.attrs[a];\r\n            }\r\n            res.gradient && res.fill == \"none\" && (res.fill = res.gradient) && delete res.gradient;\r\n            res.transform = this._.transform;\r\n            return res;\r\n        }\r\n        if (value == null && R.is(name, \"string\")) {\r\n            if (name == fillString && this.attrs.fill == \"none\" && this.attrs.gradient) {\r\n                return this.attrs.gradient;\r\n            }\r\n            var names = name.split(separator),\r\n                out = {};\r\n            for (var i = 0, ii = names.length; i < ii; i++) {\r\n                name = names[i];\r\n                if (name in this.attrs) {\r\n                    out[name] = this.attrs[name];\r\n                } else if (R.is(this.paper.customAttributes[name], \"function\")) {\r\n                    out[name] = this.paper.customAttributes[name].def;\r\n                } else {\r\n                    out[name] = R._availableAttrs[name];\r\n                }\r\n            }\r\n            return ii - 1 ? out : out[names[0]];\r\n        }\r\n        if (this.attrs && value == null && R.is(name, \"array\")) {\r\n            out = {};\r\n            for (i = 0, ii = name.length; i < ii; i++) {\r\n                out[name[i]] = this.attr(name[i]);\r\n            }\r\n            return out;\r\n        }\r\n        var params;\r\n        if (value != null) {\r\n            params = {};\r\n            params[name] = value;\r\n        }\r\n        value == null && R.is(name, \"object\") && (params = name);\r\n        for (var key in params) {\r\n            eve(\"raphael.attr.\" + key + \".\" + this.id, this, params[key]);\r\n        }\r\n        if (params) {\r\n            for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \"function\")) {\r\n                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\r\n                this.attrs[key] = params[key];\r\n                for (var subkey in par) if (par[has](subkey)) {\r\n                    params[subkey] = par[subkey];\r\n                }\r\n            }\r\n            // this.paper.canvas.style.display = \"none\";\r\n            if (params.text && this.type == \"text\") {\r\n                this.textpath.string = params.text;\r\n            }\r\n            setFillAndStroke(this, params);\r\n            // this.paper.canvas.style.display = E;\r\n        }\r\n        return this;\r\n    };\r\n    elproto.toFront = function () {\r\n        !this.removed && this.node.parentNode.appendChild(this.node);\r\n        this.paper && this.paper.top != this && R._tofront(this, this.paper);\r\n        return this;\r\n    };\r\n    elproto.toBack = function () {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (this.node.parentNode.firstChild != this.node) {\r\n            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);\r\n            R._toback(this, this.paper);\r\n        }\r\n        return this;\r\n    };\r\n    elproto.insertAfter = function (element) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (element.constructor == R.st.constructor) {\r\n            element = element[element.length - 1];\r\n        }\r\n        if (element.node.nextSibling) {\r\n            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);\r\n        } else {\r\n            element.node.parentNode.appendChild(this.node);\r\n        }\r\n        R._insertafter(this, element, this.paper);\r\n        return this;\r\n    };\r\n    elproto.insertBefore = function (element) {\r\n        if (this.removed) {\r\n            return this;\r\n        }\r\n        if (element.constructor == R.st.constructor) {\r\n            element = element[0];\r\n        }\r\n        element.node.parentNode.insertBefore(this.node, element.node);\r\n        R._insertbefore(this, element, this.paper);\r\n        return this;\r\n    };\r\n    elproto.blur = function (size) {\r\n        var s = this.node.runtimeStyle,\r\n            f = s.filter;\r\n        f = f.replace(blurregexp, E);\r\n        if (+size !== 0) {\r\n            this.attrs.blur = size;\r\n            s.filter = f + S + ms + \".Blur(pixelradius=\" + (+size || 1.5) + \")\";\r\n            s.margin = R.format(\"-{0}px 0 0 -{0}px\", round(+size || 1.5));\r\n        } else {\r\n            s.filter = f;\r\n            s.margin = 0;\r\n            delete this.attrs.blur;\r\n        }\r\n        return this;\r\n    };\r\n\r\n    R._engine.path = function (pathString, vml) {\r\n        var el = createNode(\"shape\");\r\n        el.style.cssText = cssDot;\r\n        el.coordsize = zoom + S + zoom;\r\n        el.coordorigin = vml.coordorigin;\r\n        var p = new Element(el, vml),\r\n            attr = {fill: \"none\", stroke: \"#000\"};\r\n        pathString && (attr.path = pathString);\r\n        p.type = \"path\";\r\n        p.path = [];\r\n        p.Path = E;\r\n        setFillAndStroke(p, attr);\r\n        vml.canvas.appendChild(el);\r\n        var skew = createNode(\"skew\");\r\n        skew.on = true;\r\n        el.appendChild(skew);\r\n        p.skew = skew;\r\n        p.transform(E);\r\n        return p;\r\n    };\r\n    R._engine.rect = function (vml, x, y, w, h, r) {\r\n        var path = R._rectPath(x, y, w, h, r),\r\n            res = vml.path(path),\r\n            a = res.attrs;\r\n        res.X = a.x = x;\r\n        res.Y = a.y = y;\r\n        res.W = a.width = w;\r\n        res.H = a.height = h;\r\n        a.r = r;\r\n        a.path = path;\r\n        res.type = \"rect\";\r\n        return res;\r\n    };\r\n    R._engine.ellipse = function (vml, x, y, rx, ry) {\r\n        var res = vml.path(),\r\n            a = res.attrs;\r\n        res.X = x - rx;\r\n        res.Y = y - ry;\r\n        res.W = rx * 2;\r\n        res.H = ry * 2;\r\n        res.type = \"ellipse\";\r\n        setFillAndStroke(res, {\r\n            cx: x,\r\n            cy: y,\r\n            rx: rx,\r\n            ry: ry\r\n        });\r\n        return res;\r\n    };\r\n    R._engine.circle = function (vml, x, y, r) {\r\n        var res = vml.path(),\r\n            a = res.attrs;\r\n        res.X = x - r;\r\n        res.Y = y - r;\r\n        res.W = res.H = r * 2;\r\n        res.type = \"circle\";\r\n        setFillAndStroke(res, {\r\n            cx: x,\r\n            cy: y,\r\n            r: r\r\n        });\r\n        return res;\r\n    };\r\n    R._engine.image = function (vml, src, x, y, w, h) {\r\n        var path = R._rectPath(x, y, w, h),\r\n            res = vml.path(path).attr({stroke: \"none\"}),\r\n            a = res.attrs,\r\n            node = res.node,\r\n            fill = node.getElementsByTagName(fillString)[0];\r\n        a.src = src;\r\n        res.X = a.x = x;\r\n        res.Y = a.y = y;\r\n        res.W = a.width = w;\r\n        res.H = a.height = h;\r\n        a.path = path;\r\n        res.type = \"image\";\r\n        fill.parentNode == node && node.removeChild(fill);\r\n        fill.rotate = true;\r\n        fill.src = src;\r\n        fill.type = \"tile\";\r\n        res._.fillpos = [x, y];\r\n        res._.fillsize = [w, h];\r\n        node.appendChild(fill);\r\n        setCoords(res, 1, 1, 0, 0, 0);\r\n        return res;\r\n    };\r\n    R._engine.text = function (vml, x, y, text) {\r\n        var el = createNode(\"shape\"),\r\n            path = createNode(\"path\"),\r\n            o = createNode(\"textpath\");\r\n        x = x || 0;\r\n        y = y || 0;\r\n        text = text || \"\";\r\n        path.v = R.format(\"m{0},{1}l{2},{1}\", round(x * zoom), round(y * zoom), round(x * zoom) + 1);\r\n        path.textpathok = true;\r\n        o.string = Str(text);\r\n        o.on = true;\r\n        el.style.cssText = cssDot;\r\n        el.coordsize = zoom + S + zoom;\r\n        el.coordorigin = \"0 0\";\r\n        var p = new Element(el, vml),\r\n            attr = {\r\n                fill: \"#000\",\r\n                stroke: \"none\",\r\n                font: R._availableAttrs.font,\r\n                text: text\r\n            };\r\n        p.shape = el;\r\n        p.path = path;\r\n        p.textpath = o;\r\n        p.type = \"text\";\r\n        p.attrs.text = Str(text);\r\n        p.attrs.x = x;\r\n        p.attrs.y = y;\r\n        p.attrs.w = 1;\r\n        p.attrs.h = 1;\r\n        setFillAndStroke(p, attr);\r\n        el.appendChild(o);\r\n        el.appendChild(path);\r\n        vml.canvas.appendChild(el);\r\n        var skew = createNode(\"skew\");\r\n        skew.on = true;\r\n        el.appendChild(skew);\r\n        p.skew = skew;\r\n        p.transform(E);\r\n        return p;\r\n    };\r\n    R._engine.setSize = function (width, height) {\r\n        var cs = this.canvas.style;\r\n        this.width = width;\r\n        this.height = height;\r\n        width == +width && (width += \"px\");\r\n        height == +height && (height += \"px\");\r\n        cs.width = width;\r\n        cs.height = height;\r\n        cs.clip = \"rect(0 \" + width + \" \" + height + \" 0)\";\r\n        if (this._viewBox) {\r\n            R._engine.setViewBox.apply(this, this._viewBox);\r\n        }\r\n        return this;\r\n    };\r\n    R._engine.setViewBox = function (x, y, w, h, fit) {\r\n        R.eve(\"raphael.setViewBox\", this, this._viewBox, [x, y, w, h, fit]);\r\n        var width = this.width,\r\n            height = this.height,\r\n            size = 1 / mmax(w / width, h / height),\r\n            H, W;\r\n        if (fit) {\r\n            H = height / h;\r\n            W = width / w;\r\n            if (w * H < width) {\r\n                x -= (width - w * H) / 2 / H;\r\n            }\r\n            if (h * W < height) {\r\n                y -= (height - h * W) / 2 / W;\r\n            }\r\n        }\r\n        this._viewBox = [x, y, w, h, !!fit];\r\n        this._viewBoxShift = {\r\n            dx: -x,\r\n            dy: -y,\r\n            scale: size\r\n        };\r\n        this.forEach(function (el) {\r\n            el.transform(\"...\");\r\n        });\r\n        return this;\r\n    };\r\n    var createNode;\r\n    R._engine.initWin = function (win) {\r\n            var doc = win.document;\r\n            doc.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\r\n            try {\r\n                !doc.namespaces.rvml && doc.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\");\r\n                createNode = function (tagName) {\r\n                    return doc.createElement('<rvml:' + tagName + ' class=\"rvml\">');\r\n                };\r\n            } catch (e) {\r\n                createNode = function (tagName) {\r\n                    return doc.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\r\n                };\r\n            }\r\n        };\r\n    R._engine.initWin(R._g.win);\r\n    R._engine.create = function () {\r\n        var con = R._getContainer.apply(0, arguments),\r\n            container = con.container,\r\n            height = con.height,\r\n            s,\r\n            width = con.width,\r\n            x = con.x,\r\n            y = con.y;\r\n        if (!container) {\r\n            throw new Error(\"VML container not found.\");\r\n        }\r\n        var res = new R._Paper,\r\n            c = res.canvas = R._g.doc.createElement(\"div\"),\r\n            cs = c.style;\r\n        x = x || 0;\r\n        y = y || 0;\r\n        width = width || 512;\r\n        height = height || 342;\r\n        res.width = width;\r\n        res.height = height;\r\n        width == +width && (width += \"px\");\r\n        height == +height && (height += \"px\");\r\n        res.coordsize = zoom * 1e3 + S + zoom * 1e3;\r\n        res.coordorigin = \"0 0\";\r\n        res.span = R._g.doc.createElement(\"span\");\r\n        res.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\";\r\n        c.appendChild(res.span);\r\n        cs.cssText = R.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\", width, height);\r\n        if (container == 1) {\r\n            R._g.doc.body.appendChild(c);\r\n            cs.left = x + \"px\";\r\n            cs.top = y + \"px\";\r\n            cs.position = \"absolute\";\r\n        } else {\r\n            if (container.firstChild) {\r\n                container.insertBefore(c, container.firstChild);\r\n            } else {\r\n                container.appendChild(c);\r\n            }\r\n        }\r\n        res.renderfix = function () {};\r\n        return res;\r\n    };\r\n    R.prototype.clear = function () {\r\n        R.eve(\"raphael.clear\", this);\r\n        this.canvas.innerHTML = E;\r\n        this.span = R._g.doc.createElement(\"span\");\r\n        this.span.style.cssText = \"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\";\r\n        this.canvas.appendChild(this.span);\r\n        this.bottom = this.top = null;\r\n    };\r\n    R.prototype.remove = function () {\r\n        R.eve(\"raphael.remove\", this);\r\n        this.canvas.parentNode.removeChild(this.canvas);\r\n        for (var i in this) {\r\n            this[i] = typeof this[i] == \"function\" ? R._removedFactory(i) : null;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    var setproto = R.st;\r\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\r\n        setproto[method] = (function (methodname) {\r\n            return function () {\r\n                var arg = arguments;\r\n                return this.forEach(function (el) {\r\n                    el[methodname].apply(el, arg);\r\n                });\r\n            };\r\n        })(method);\r\n    }\r\n})();\r\n\r\n    // EXPOSE\r\n    // SVG and VML are appended just before the EXPOSE line\r\n    // Even with AMD, Raphael should be defined globally\r\n    oldRaphael.was ? (g.win.Raphael = R) : (Raphael = R);\r\n\r\n    return R;\r\n}));\r\n","/* ======================================================================================= */\r\n/*                                   wheelnav.js - v1.8.0                                  */\r\n/* ======================================================================================= */\r\n/* This is a small JavaScript library for animated SVG based wheel navigation.             */\r\n/* Requires Raphaël JavaScript Vector Library (http://dmitrybaranovskiy.github.io/raphael/)*/\r\n/* ======================================================================================= */\r\n/* Check http://wheelnavjs.softwaretailoring.net for samples.                              */\r\n/* Fork https://github.com/softwaretailoring/wheelnav for contribution.                    */\r\n/* ======================================================================================= */\r\n/* Copyright © 2014-2018 Gábor Berkesi (http://softwaretailoring.net)                      */\r\n/* Licensed under MIT (https://github.com/softwaretailoring/wheelnav/blob/master/LICENSE)  */\r\n/* ======================================================================================= */\r\n\r\n/* ======================================================================================= */\r\n/* Documentation: http://wheelnavjs.softwaretailoring.net/documentation/core.html          */\r\n/* ======================================================================================= */\r\n\r\nwheelnav = function (divId, raphael, divWidth, divHeight) {\r\n\r\n    this.holderId = \"wheel\";\r\n\r\n    if (divId !== undefined &&\r\n        divId !== null) {\r\n        this.holderId = divId;\r\n    }\r\n\r\n    var holderDiv = document.getElementById(divId);\r\n\r\n    if ((holderDiv === null ||\r\n        holderDiv === undefined) &&\r\n        (raphael === undefined ||\r\n        raphael === null)) {\r\n        return this;\r\n    }\r\n    \r\n    //Prepare raphael object and set the width\r\n    var canvasWidth;\r\n    var clearContent = true;\r\n\r\n    if (raphael === undefined ||\r\n        raphael === null) {\r\n\r\n        var removeChildrens = [];\r\n        for (var i = 0; i < holderDiv.children.length; i++) {\r\n            if (holderDiv.children[i].localName === \"svg\") {\r\n                removeChildrens.push(holderDiv.children[i]);\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < removeChildrens.length; i++) {\r\n            holderDiv.removeChild(removeChildrens[i]);\r\n        }\r\n\r\n        if (divWidth !== undefined &&\r\n            divWidth !== null) {\r\n            if (divHeight === undefined ||\r\n                divHeight === null) {\r\n                divHeight = divWidth;\r\n            }\r\n            this.raphael = new Raphael(divId, divWidth, divHeight);\r\n            canvasWidth = divWidth;\r\n        }\r\n        else {\r\n            this.raphael = new Raphael(divId);\r\n            canvasWidth = holderDiv.clientWidth;\r\n        }\r\n\r\n        this.raphael.setViewBox(0, 0, this.raphael.width, this.raphael.height, true);\r\n    }\r\n    else {\r\n        //The divId parameter has to be the identifier of the wheelnav in this case.\r\n        this.raphael = raphael;\r\n        canvasWidth = this.raphael.width;\r\n        clearContent = false;\r\n    }\r\n\r\n    //Public properties\r\n    this.centerX = canvasWidth / 2;\r\n    this.centerY = canvasWidth / 2;\r\n    this.wheelRadius = canvasWidth / 2;\r\n    this.navAngle = 0;\r\n    this.sliceAngle = null;\r\n    this.titleRotateAngle = null;\r\n    this.titleCurved = false;\r\n    this.titleCurvedClockwise = null;\r\n    this.titleCurvedByRotateAngle = false;\r\n    this.initTitleRotate = false;\r\n    this.clickModeRotate = true;\r\n    this.rotateRound = false;\r\n    this.rotateRoundCount = 0;\r\n    this.clickModeSpreadOff = false;\r\n    this.animatetimeCalculated = false; // In clickModeRotate, when animatetimeCalculated is true, the navItem.animatetime calculated by wheelnav.animatetime and current rotationAngle. In this case, the wheelnav.animatetime belongs to the full rotation.\r\n    this.animateRepeatCount = 0;\r\n    this.clockwise = true;\r\n    this.multiSelect = false;\r\n    this.hoverPercent = 1;\r\n    this.selectedPercent = 1;\r\n    this.clickablePercentMin = 0;\r\n    this.clickablePercentMax = 1;\r\n    this.currentPercent = null;\r\n    this.cssMode = false;\r\n    this.selectedToFront = true;\r\n    this.selectedNavItemIndex = 0;\r\n    this.hoverEnable = true;\r\n    this.hoveredToFront = true;\r\n\r\n    this.navItemCount = 0;\r\n    this.navItemCountLabeled = false;\r\n    this.navItemCountLabelOffset = 0;\r\n    this.navItems = [];\r\n    this.navItemsEnabled = true;\r\n    this.animateFinishFunction = null;\r\n\r\n    // These settings are useful when navItem.sliceAngle < 360 / this.navItemCount\r\n    this.navItemsContinuous = false; \r\n    this.navItemsCentered = true; // This is reasoned when this.navItemsContinuous = false;\r\n\r\n    this.colors = colorpalette.defaultpalette;\r\n    this.titleSpreadScale = null;\r\n\r\n    //Spreader settings\r\n    this.spreaderEnable = false;\r\n    this.spreaderRadius = 20;\r\n    this.spreaderStartAngle = 0;\r\n    this.spreaderSliceAngle = 360;\r\n    this.spreaderPathFunction = spreaderPath().PieSpreader;\r\n    this.spreaderPathCustom = null;\r\n    this.spreaderInPercent = 1;\r\n    this.spreaderOutPercent = 1;\r\n    this.spreaderInTitle = \"+\";\r\n    this.spreaderOutTitle = \"-\";\r\n    this.spreaderTitleFont = null;\r\n    this.spreaderPathInAttr = null;\r\n    this.spreaderPathOutAttr = null;\r\n    this.spreaderTitleInAttr = null;\r\n    this.spreaderTitleOutAttr = null;\r\n    this.spreaderInTitleWidth = null;\r\n    this.spreaderInTitleHeight = null;\r\n    this.spreaderOutTitleWidth = null;\r\n    this.spreaderOutTitleHeight = null;\r\n\r\n    //Percents\r\n    this.minPercent = 0.01;\r\n    this.maxPercent = 1;\r\n    this.initPercent = 1;\r\n\r\n    //Marker settings\r\n    this.markerEnable = false;\r\n    this.markerPathFunction = markerPath().TriangleMarker;\r\n    this.markerPathCustom = null;\r\n\r\n    //Private properties\r\n    this.currentClick = 0;\r\n    this.animateLocked = false;\r\n\r\n    //NavItem default settings. These are configurable between initWheel() and createWheel().\r\n    this.slicePathAttr = null;\r\n    this.sliceHoverAttr = null;\r\n    this.sliceSelectedAttr = null;\r\n    \r\n    this.titleFont = '100 24px Impact, Charcoal, sans-serif';\r\n    this.titleAttr = null;\r\n    this.titleHoverAttr = null;\r\n    this.titleSelectedAttr = null;\r\n    //When navTitle start with 'imgsrc:' it can parse as URL of image or data URI. These properties are available for images and paths.\r\n    this.titleWidth = null;\r\n    this.titleHeight = null;\r\n    this.titleHoverWidth = null;\r\n    this.titleHoverHeight = null;\r\n    this.titleSelectedWidth = null;\r\n    this.titleSelectedHeight = null;\r\n\r\n    this.linePathAttr = null;\r\n    this.lineHoverAttr = null;\r\n    this.lineSelectedAttr = null;\r\n\r\n    this.slicePathCustom = null;\r\n    this.sliceClickablePathCustom = null;\r\n    this.sliceSelectedPathCustom = null;\r\n    this.sliceHoverPathCustom = null;\r\n    this.sliceInitPathCustom = null;\r\n\r\n    this.sliceTransformCustom = null;\r\n    this.sliceSelectedTransformCustom = null;\r\n    this.sliceHoverTransformCustom = null;\r\n    this.sliceInitTransformCustom = null;\r\n\r\n    this.animateeffect = null;\r\n    this.animatetime = null;\r\n    if (slicePath()[\"PieSlice\"] !== undefined) {\r\n        this.slicePathFunction = slicePath().PieSlice;\r\n    }\r\n    else {\r\n        this.slicePathFunction = slicePath().NullSlice;\r\n    }\r\n    this.sliceClickablePathFunction = null;\r\n    this.sliceTransformFunction = null;\r\n    this.sliceSelectedPathFunction = null;\r\n    this.sliceSelectedTransformFunction = null;\r\n    this.sliceHoverPathFunction = null;\r\n    this.sliceHoverTransformFunction = null;\r\n    this.sliceInitPathFunction = null;\r\n    this.sliceInitTransformFunction = null;\r\n\r\n    this.keynavigateEnabled = false;\r\n    this.keynavigateOnlyFocus = false;\r\n    this.keynavigateDownCode = 37; // left arrow\r\n    this.keynavigateDownCodeAlt = 40; // down arrow\r\n    this.keynavigateUpCode = 39; // right arrow\r\n    this.keynavigateUpCodeAlt = 38; // up arrow\r\n\r\n    this.parseWheel(holderDiv);\r\n\r\n    return this;\r\n};\r\n\r\nwheelnav.prototype.initWheel = function (titles) {\r\n\r\n    //Init slices and titles\r\n    this.styleWheel();\r\n\r\n    var navItem;\r\n    if (this.navItemCount === 0) {\r\n\r\n        if (titles === undefined ||\r\n            titles === null ||\r\n            !Array.isArray(titles)) {\r\n            titles = [\"title-0\", \"title-1\", \"title-2\", \"title-3\"];\r\n        }\r\n\r\n        this.navItemCount = titles.length;\r\n    }\r\n    else {\r\n        titles = null;\r\n    }\r\n\r\n    for (i = 0; i < this.navItemCount; i++) {\r\n\r\n        var itemTitle = \"\";\r\n\r\n        if (this.navItemCountLabeled) {\r\n            itemTitle = (i + this.navItemCountLabelOffset).toString();\r\n        }\r\n        else {\r\n            if (titles !== null)\r\n                { itemTitle = titles[i]; }\r\n            else\r\n                { itemTitle = \"\"; }\r\n        }\r\n\r\n        navItem = new wheelnavItem(this, itemTitle, i);\r\n        this.navItems.push(navItem);\r\n    }\r\n\r\n    //Init colors\r\n    var colorIndex = 0;\r\n    for (i = 0; i < this.navItems.length; i++) {\r\n        this.navItems[i].fillAttr = this.colors[colorIndex];\r\n        colorIndex++;\r\n        if (colorIndex === this.colors.length) { colorIndex = 0;}\r\n    }\r\n};\r\n\r\nwheelnav.prototype.createWheel = function (titles, withSpread) {\r\n\r\n    if (this.currentPercent === null) {\r\n        if (withSpread) {\r\n            this.currentPercent = this.minPercent;\r\n        }\r\n        else {\r\n            this.currentPercent = this.maxPercent;\r\n        }\r\n    }\r\n\r\n    if (this.navItems.length === 0) {\r\n        this.initWheel(titles);\r\n    }\r\n\r\n    if (this.selectedNavItemIndex !== null) {\r\n        this.navItems[this.selectedNavItemIndex].selected = true;\r\n    }\r\n\r\n    for (i = 0; i < this.navItemCount; i++) {\r\n        this.navItems[i].createNavItem();\r\n    }\r\n\r\n    if (this.keynavigateEnabled) {\r\n        var thiswheelnav = this;\r\n        var keyelement = window;\r\n\r\n        if (this.keynavigateOnlyFocus) {\r\n            keyelement = document.getElementById(this.holderId);\r\n            if (!keyelement.hasAttribute(\"tabindex\")) {\r\n                keyelement.setAttribute(\"tabindex\", 0);\r\n            }\r\n        }\r\n\r\n        keyelement.addEventListener(\"keydown\", this.keyNavigateFunction =  function (e) {\r\n            e = e || window.e;\r\n            var keyCodeEvent = e.which || e.keyCode;\r\n            if ([thiswheelnav.keynavigateDownCode, thiswheelnav.keynavigateDownCodeAlt, thiswheelnav.keynavigateUpCode, thiswheelnav.keynavigateUpCodeAlt].indexOf(e.keyCode) > -1) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            var keynavigate = null;\r\n\r\n            if (keyCodeEvent === thiswheelnav.keynavigateUpCode || keyCodeEvent === thiswheelnav.keynavigateUpCodeAlt) {\r\n                if (thiswheelnav.currentClick === thiswheelnav.navItemCount - 1) {\r\n                    keynavigate = 0;\r\n                }\r\n                else {\r\n                    keynavigate = thiswheelnav.currentClick + 1;\r\n                }\r\n            }\r\n            if (keyCodeEvent === thiswheelnav.keynavigateDownCode || keyCodeEvent === thiswheelnav.keynavigateDownCodeAlt) {\r\n                if (thiswheelnav.currentClick === 0) {\r\n                    keynavigate = thiswheelnav.navItemCount - 1;\r\n                }\r\n                else {\r\n                    keynavigate = thiswheelnav.currentClick - 1;\r\n                }\r\n            }\r\n\r\n            if (keynavigate !== null) {\r\n                thiswheelnav.navigateWheel(keynavigate);\r\n\r\n                if (thiswheelnav.navItems[keynavigate].navigateFunction !== null) {\r\n                    thiswheelnav.navItems[keynavigate].navigateFunction();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    this.spreader = new spreader(this);\r\n\r\n    this.marker = new marker(this);\r\n\r\n    this.refreshWheel();\r\n\r\n    if (withSpread !== undefined) {\r\n        this.spreadWheel();\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nwheelnav.prototype.removeWheel = function () {\r\n    this.raphael.remove();\r\n\r\n    if (this.keynavigateEnabled) {\r\n        var keyelement = window;\r\n\r\n        if (this.keynavigateOnlyFocus) {\r\n            keyelement = document.getElementById(this.holderId);\r\n            if (keyelement.hasAttribute(\"tabindex\")) {\r\n                keyelement.removeAttribute(\"tabindex\");\r\n            }\r\n        }\r\n\r\n        keyelement.removeEventListener(\"keydown\", this.keyNavigateFunction);\r\n    }\r\n};\r\n\r\nwheelnav.prototype.refreshWheel = function (withPathAndTransform) {\r\n\r\n    for (i = 0; i < this.navItemCount; i++) {\r\n        var navItem = this.navItems[i];\r\n        navItem.setWheelSettings(withPathAndTransform);\r\n        navItem.refreshNavItem(withPathAndTransform);\r\n    }\r\n\r\n    this.marker.setCurrentTransform();\r\n    this.spreader.setCurrentTransform();\r\n};\r\n\r\nwheelnav.prototype.navigateWheel = function (clicked) {\r\n\r\n    this.animateUnlock(true);\r\n\r\n    if (this.clickModeRotate) {\r\n        this.animateLocked = true;\r\n    }\r\n\r\n    var navItem;\r\n\r\n    for (i = 0; i < this.navItemCount; i++) {\r\n        navItem = this.navItems[i];\r\n\r\n        navItem.hovered = false;\r\n\r\n        if (i === clicked) {\r\n            if (this.multiSelect) {\r\n                navItem.selected = !navItem.selected;\r\n            } else {\r\n                navItem.selected = true;\r\n                this.selectedNavItemIndex = i;\r\n            }\r\n        }\r\n        else {\r\n            if (!this.multiSelect) {\r\n                navItem.selected = false;\r\n            }\r\n        }\r\n\r\n        if (this.clickModeRotate) {\r\n            var rotationAngle = this.navItems[clicked].navAngle - this.navItems[this.currentClick].navAngle;\r\n\r\n            if (this.rotateRound) {\r\n                if (this.clockwise && rotationAngle < 0) {\r\n                    rotationAngle = 360 + rotationAngle;\r\n                }\r\n                if (!this.clockwise && rotationAngle > 0) {\r\n                    rotationAngle = rotationAngle - 360;\r\n                }\r\n            }\r\n\r\n            navItem.currentRotateAngle -= rotationAngle;\r\n            var currentAnimateTime;\r\n            if (this.animatetime != null) {\r\n                currentAnimateTime = this.animatetime;\r\n            }\r\n            else {\r\n                currentAnimateTime = 1500;\r\n            }\r\n\r\n            if (this.animatetimeCalculated &&\r\n                clicked !== this.currentClick) {\r\n                navItem.animatetime = currentAnimateTime * (Math.abs(rotationAngle) / 360);\r\n            }\r\n\r\n            if (this.rotateRoundCount > 0) {\r\n                if (this.clockwise) { navItem.currentRotateAngle -= this.rotateRoundCount * 360; }\r\n                else { navItem.currentRotateAngle += this.rotateRoundCount * 360; }\r\n\r\n                navItem.animatetime = currentAnimateTime * (this.rotateRoundCount + 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    for (i = 0; i < this.navItemCount; i++) {\r\n        navItem = this.navItems[i];\r\n        navItem.setCurrentTransform(true, true);\r\n        navItem.refreshNavItem();\r\n    }\r\n\r\n    this.currentClick = clicked;\r\n\r\n    if (this.clickModeSpreadOff) {\r\n        this.currentPercent = this.maxPercent;\r\n        this.spreadWheel();\r\n    }\r\n    else {\r\n        if (clicked !== null &&\r\n            !this.clickModeRotate) {\r\n            this.marker.setCurrentTransform(this.navItems[this.currentClick].navAngle);\r\n        }\r\n        else {\r\n            this.marker.setCurrentTransform();\r\n        }\r\n        this.spreader.setCurrentTransform(true);\r\n    }\r\n};\r\n\r\nwheelnav.prototype.spreadWheel = function () {\r\n\r\n    this.animateUnlock(true);\r\n    this.animateLocked = true;\r\n\r\n    if (this.currentPercent === this.maxPercent ||\r\n        this.currentPercent === null) {\r\n        this.currentPercent = this.minPercent;\r\n    }\r\n    else {\r\n        this.currentPercent = this.maxPercent;\r\n    }\r\n\r\n    for (i = 0; i < this.navItemCount; i++) {\r\n        var navItem = this.navItems[i];\r\n        navItem.hovered = false;\r\n        navItem.setCurrentTransform(true, false);\r\n    }\r\n\r\n    this.marker.setCurrentTransform();\r\n    this.spreader.setCurrentTransform();\r\n\r\n    return this;\r\n};\r\n\r\nwheelnav.prototype.animateUnlock = function (force, withFinishFunction) {\r\n\r\n    if (force !== undefined && \r\n        force === true) {\r\n        for (var f = 0; f < this.navItemCount; f++) {\r\n            this.navItems[f].navSliceUnderAnimation = false;\r\n            this.navItems[f].navTitleUnderAnimation = false;\r\n            this.navItems[f].navTitlePathUnderAnimation = false;\r\n            this.navItems[f].navLineUnderAnimation = false;\r\n            this.navItems[f].navSlice.stop();\r\n            this.navItems[f].navLine.stop();\r\n            this.navItems[f].navTitle.stop();\r\n            if (this.navItems[f].navTitlePath !== undefined) {\r\n                this.navItems[f].navTitlePath.stop();\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (var i = 0; i < this.navItemCount; i++) {\r\n            if (this.navItems[i].navSliceUnderAnimation === true ||\r\n                this.navItems[i].navTitleUnderAnimation === true ||\r\n                this.navItems[i].navTitlePathUnderAnimation === true ||\r\n                this.navItems[i].navLineUnderAnimation === true) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.animateLocked = false;\r\n        if (this.animateFinishFunction !== null &&\r\n            withFinishFunction !== undefined &&\r\n            withFinishFunction === true) {\r\n            this.animateFinishFunction();\r\n        }\r\n    }\r\n};\r\n\r\nwheelnav.prototype.setTooltips = function (tooltips) {\r\n    if (tooltips !== undefined &&\r\n        tooltips !== null &&\r\n        Array.isArray(tooltips) &&\r\n        tooltips.length <= this.navItems.length) {\r\n        for (var i = 0; i < tooltips.length; i++) {\r\n            this.navItems[i].setTooltip(tooltips[i]);\r\n        }\r\n    }\r\n};\r\n\r\nwheelnav.prototype.getItemId = function (index) {\r\n    return \"wheelnav-\" + this.holderId + \"-item-\" + index;\r\n};\r\nwheelnav.prototype.getSliceId = function (index) {\r\n    return \"wheelnav-\" + this.holderId + \"-slice-\" + index;\r\n};\r\nwheelnav.prototype.getClickableSliceId = function (index) {\r\n    return \"wheelnav-\" + this.holderId + \"-clickableslice-\" + index;\r\n};\r\nwheelnav.prototype.getTitleId = function (index) {\r\n    return \"wheelnav-\" + this.holderId + \"-title-\" + index;\r\n};\r\nwheelnav.prototype.getTitlePathId = function (index) {\r\n    return \"wheelnav-\" + this.holderId + \"-titlepath-\" + index;\r\n};\r\nwheelnav.prototype.getLineId = function (index) {\r\n    return \"wheelnav-\" + this.holderId + \"-line-\" + index;\r\n};\r\nwheelnav.prototype.getSpreaderId = function () {\r\n    return \"wheelnav-\" + this.holderId + \"-spreader\";\r\n};\r\nwheelnav.prototype.getSpreaderTitleId = function () {\r\n    return \"wheelnav-\" + this.holderId + \"-spreadertitle\";\r\n};\r\nwheelnav.prototype.getMarkerId = function () {\r\n    return \"wheelnav-\" + this.holderId + \"-marker\";\r\n};\r\n","/* ======================================================================================= */\r\n/* Parse html5 data- attributes, the onmouseup events and anchor links                     */\r\n/* ======================================================================================= */\r\n/* ======================================================================================= */\r\n/* Documentation: http://wheelnavjs.softwaretailoring.net/documentation/html5.html         */\r\n/* ======================================================================================= */\r\n\r\nwheelnav.prototype.parseWheel = function (holderDiv) {\r\n    if (holderDiv !== undefined &&\r\n        holderDiv !== null) {\r\n        //data-wheelnav attribute is required\r\n        var wheelnavData = holderDiv.hasAttribute(\"data-wheelnav\");\r\n        if (wheelnavData) {\r\n            var parsedNavItems = [];\r\n            var parsedNavItemsHref = [];\r\n            var parsedNavItemsOnmouseup = [];\r\n            var onlyInit = false;\r\n\r\n            //data-wheelnav-slicepath\r\n            var wheelnavSlicepath = holderDiv.getAttribute(\"data-wheelnav-slicepath\");\r\n            if (wheelnavSlicepath !== null) {\r\n                if (slicePath()[wheelnavSlicepath] !== undefined) {\r\n                    this.slicePathFunction = slicePath()[wheelnavSlicepath];\r\n                }\r\n            }\r\n            //data-wheelnav-colors\r\n            var wheelnavColors = holderDiv.getAttribute(\"data-wheelnav-colors\");\r\n            if (wheelnavColors !== null) {\r\n                this.colors = wheelnavColors.split(',');\r\n            }\r\n            //data-wheelnav-wheelradius\r\n            var wheelnavWheelradius = holderDiv.getAttribute(\"data-wheelnav-wheelradius\");\r\n            if (wheelnavWheelradius !== null) {\r\n                this.wheelRadius = Number(wheelnavWheelradius);\r\n            }\r\n            //data-wheelnav-navangle\r\n            var wheelnavNavangle = holderDiv.getAttribute(\"data-wheelnav-navangle\");\r\n            if (wheelnavNavangle !== null) {\r\n                this.navAngle = Number(wheelnavNavangle);\r\n            }\r\n            //data-wheelnav-rotateoff\r\n            var wheelnavRotateOff = holderDiv.getAttribute(\"data-wheelnav-rotateoff\");\r\n            if (wheelnavRotateOff !== null) {\r\n                this.clickModeRotate = false;\r\n            }\r\n            //data-wheelnav-cssmode\r\n            var wheelnavCssmode = holderDiv.getAttribute(\"data-wheelnav-cssmode\");\r\n            if (wheelnavCssmode !== null) {\r\n                this.cssMode = true;\r\n            }\r\n            //data-wheelnav-spreader\r\n            var wheelnavSpreader = holderDiv.getAttribute(\"data-wheelnav-spreader\");\r\n            if (wheelnavSpreader !== null) {\r\n                this.spreaderEnable = true;\r\n            }\r\n            //data-wheelnav-spreaderradius\r\n            var wheelnavSpreaderRadius = holderDiv.getAttribute(\"data-wheelnav-spreaderradius\");\r\n            if (wheelnavSpreaderRadius !== null) {\r\n                this.spreaderRadius = Number(wheelnavSpreaderRadius);\r\n            }\r\n            //data-wheelnav-spreaderpath\r\n            var wheelnavSpreaderPath = holderDiv.getAttribute(\"data-wheelnav-spreaderpath\");\r\n            if (wheelnavSpreaderPath !== null) {\r\n                if (markerPath()[wheelnavSpreaderPath] !== undefined) {\r\n                    this.spreaderPathFunction = spreaderPath()[wheelnavSpreaderPath];\r\n                }\r\n            }\r\n            //data-wheelnav-marker\r\n            var wheelnavMarker = holderDiv.getAttribute(\"data-wheelnav-marker\");\r\n            if (wheelnavMarker !== null) {\r\n                this.markerEnable = true;\r\n            }\r\n            //data-wheelnav-markerpath\r\n            var wheelnavMarkerPath = holderDiv.getAttribute(\"data-wheelnav-markerpath\");\r\n            if (wheelnavMarkerPath !== null) {\r\n                if (markerPath()[wheelnavMarkerPath] !== undefined) {\r\n                    this.markerPathFunction = markerPath()[wheelnavMarkerPath];\r\n                }\r\n            }\r\n            //data-wheelnav-titlewidth\r\n            var wheelnavTitleWidth = holderDiv.getAttribute(\"data-wheelnav-titlewidth\");\r\n            if (wheelnavTitleWidth !== null) {\r\n                this.titleWidth = Number(wheelnavTitleWidth);\r\n            }\r\n            //data-wheelnav-titleheight\r\n            var wheelnavTitleHeight = holderDiv.getAttribute(\"data-wheelnav-titleheight\");\r\n            if (wheelnavTitleHeight !== null) {\r\n                this.titleHeight = Number(wheelnavTitleHeight);\r\n            }\r\n            //data-wheelnav-titlecurved\r\n            var wheelnavTitleCurved = holderDiv.getAttribute(\"data-wheelnav-titlecurved\");\r\n            if (wheelnavTitleCurved !== null) {\r\n                this.titleCurved = true;\r\n            }\r\n            //data-wheelnav-titlecurvedclockwise\r\n            var wheelnavTitleCurvedClockwise = holderDiv.getAttribute(\"data-wheelnav-titlecurvedclockwise\");\r\n            if (wheelnavTitleCurvedClockwise !== null) {\r\n                this.titleCurvedClockwise = true;\r\n            }\r\n            //data-wheelnav-titlecurvedbyrotateangle\r\n            var wheelnavTitleCurvedByRotateAngle = holderDiv.getAttribute(\"data-wheelnav-titlecurvedbyrotateangle\");\r\n            if (wheelnavTitleCurvedByRotateAngle !== null) {\r\n                this.titleCurvedByRotateAngle = true;\r\n            }\r\n            //data-wheelnav-keynav\r\n            var wheelnavKeynav = holderDiv.getAttribute(\"data-wheelnav-keynav\");\r\n            if (wheelnavKeynav !== null) {\r\n                this.keynavigateEnabled = true;\r\n            }\r\n            //data-wheelnav-keynavonlyfocus\r\n            var wheelnavKeynavOnlyfocus = holderDiv.getAttribute(\"data-wheelnav-keynavonlyfocus\");\r\n            if (wheelnavKeynavOnlyfocus !== null) {\r\n                this.keynavigateOnlyFocus = true;\r\n            }\r\n            //data-wheelnav-keynavdowncode\r\n            var wheelnavKeynavDowncode = holderDiv.getAttribute(\"data-wheelnav-keynavdowncode\");\r\n            if (wheelnavKeynavDowncode !== null) {\r\n                this.keynavigateDownCode = Number(wheelnavKeynavDowncode);\r\n            }\r\n            //data-wheelnav-keynavdowncodealt\r\n            var wheelnavKeynavDowncodeAlt = holderDiv.getAttribute(\"data-wheelnav-keynavdowncodealt\");\r\n            if (wheelnavKeynavDowncodeAlt !== null) {\r\n                this.keynavigateDownCodeAlt = Number(wheelnavKeynavDowncodeAlt);\r\n            }\r\n            //data-wheelnav-keynavupcode\r\n            var wheelnavKeynavUpcode = holderDiv.getAttribute(\"data-wheelnav-keynavupcode\");\r\n            if (wheelnavKeynavUpcode !== null) {\r\n                this.keynavigateUpCode = Number(wheelnavKeynavUpcode);\r\n            }\r\n            //data-wheelnav-keynavupcodealt\r\n            var wheelnavKeynavUpcodeAlt = holderDiv.getAttribute(\"data-wheelnav-keynavupcodealt\");\r\n            if (wheelnavKeynavUpcodeAlt !== null) {\r\n                this.keynavigateUpCodeAlt = Number(wheelnavKeynavUpcodeAlt);\r\n            }\r\n\r\n            //data-wheelnav-init\r\n            var wheelnavOnlyinit = holderDiv.getAttribute(\"data-wheelnav-init\");\r\n            if (wheelnavOnlyinit !== null) {\r\n                onlyInit = true;\r\n            }\r\n\r\n            for (var i = 0; i < holderDiv.children.length; i++) {\r\n\r\n                var wheelnavNavitemtext = holderDiv.children[i].getAttribute(\"data-wheelnav-navitemtext\");\r\n                var wheelnavNavitemicon = holderDiv.children[i].getAttribute(\"data-wheelnav-navitemicon\");\r\n                var wheelnavNavitemimg = holderDiv.children[i].getAttribute(\"data-wheelnav-navitemimg\");\r\n                if (wheelnavNavitemtext !== null ||\r\n                    wheelnavNavitemicon !== null ||\r\n                    wheelnavNavitemimg !== null) {\r\n                    //data-wheelnav-navitemtext\r\n                    if (wheelnavNavitemtext !== null) {\r\n                        parsedNavItems.push(wheelnavNavitemtext);\r\n                    }\r\n                    //data-wheelnav-navitemicon\r\n                    else if (wheelnavNavitemicon !== null) {\r\n                        if (icon[wheelnavNavitemicon] !== undefined) {\r\n                            parsedNavItems.push(icon[wheelnavNavitemicon]);\r\n                        }\r\n                        else {\r\n                            parsedNavItems.push(wheelnavNavitemicon);\r\n                        }\r\n                    }\r\n                    else if (wheelnavNavitemimg !== null) {\r\n                        parsedNavItems.push(\"imgsrc:\" + wheelnavNavitemimg);\r\n                    }\r\n                    else {\r\n                        //data-wheelnav-navitemtext or data-wheelnav-navitemicon or data-wheelnav-navitemimg is required\r\n                        continue;\r\n                    }\r\n\r\n                    //onmouseup event of navitem element for call it in the navigateFunction\r\n                    if (holderDiv.children[i].onmouseup !== undefined) {\r\n                        parsedNavItemsOnmouseup.push(holderDiv.children[i].onmouseup);\r\n                    }\r\n                    else {\r\n                        parsedNavItemsOnmouseup.push(null);\r\n                    }\r\n\r\n                    //parse inner <a> tag in navitem element for use href in navigateFunction\r\n                    var foundHref = false;\r\n                    for (var j = 0; j < holderDiv.children[i].children.length; j++) {\r\n                        if (holderDiv.children[i].children[j].getAttribute('href') !== undefined) {\r\n                            parsedNavItemsHref.push(holderDiv.children[i].children[j].getAttribute('href'));\r\n                        }\r\n                    }\r\n                    if (!foundHref) {\r\n                        parsedNavItemsHref.push(null);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (parsedNavItems.length > 0) {\r\n                this.initWheel(parsedNavItems);\r\n\r\n                for (var i = 0; i < parsedNavItemsOnmouseup.length; i++) {\r\n                    this.navItems[i].navigateFunction = parsedNavItemsOnmouseup[i];\r\n                    this.navItems[i].navigateHref = parsedNavItemsHref[i];\r\n                }\r\n\r\n                if (!onlyInit) {\r\n                    this.createWheel();\r\n                }\r\n            }\r\n        }\r\n\r\n        var removeChildrens = [];\r\n        for (var i = 0; i < holderDiv.children.length; i++) {\r\n            if (holderDiv.children[i].localName !== \"svg\") {\r\n                removeChildrens.push(holderDiv.children[i]);\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < removeChildrens.length; i++) {\r\n            holderDiv.removeChild(removeChildrens[i]);\r\n        }\r\n    }\r\n};\r\n\r\n","/* ======================================================================================= */\r\n/* Navigation item                                                                         */\r\n/* ======================================================================================= */\r\n/* ======================================================================================= */\r\n/* Documentation: http://wheelnavjs.softwaretailoring.net/documentation/navItem.html       */\r\n/* ======================================================================================= */\r\n\r\nwheelnavItem = function (wheelnav, title, itemIndex) {\r\n\r\n    this.wheelnav = wheelnav;\r\n    this.wheelItemIndex = itemIndex;\r\n    if (wheelnav.clockwise) {\r\n        this.itemIndex = itemIndex;\r\n    }\r\n    else {\r\n        this.itemIndex = -itemIndex;\r\n    }\r\n\r\n    this.enabled = wheelnav.navItemsEnabled;\r\n    this.selected = false;\r\n    this.hovered = false;\r\n\r\n    //Private properties\r\n    this.navItem = null;\r\n    this.navSlice = null;\r\n    this.navTitle = null;\r\n    this.navLine = null;\r\n    this.navClickableSlice = null;\r\n\r\n    this.navSliceCurrentTransformString = null;\r\n    this.navTitleCurrentTransformString = null;\r\n    this.navLineCurrentTransformString = null;\r\n\r\n    this.navSliceUnderAnimation = false;\r\n    this.navTitleUnderAnimation = false;\r\n    this.navTitlePathUnderAnimation = false;\r\n    this.navLineUnderAnimation = false;\r\n\r\n    this.currentRotateAngle = 0;\r\n\r\n    this.setTitle(title);\r\n    this.tooltip = null;\r\n    \r\n    //Default settings\r\n    this.fillAttr = \"#CCC\";\r\n    this.titleFont = this.wheelnav.titleFont;\r\n    this.navigateHref = null;\r\n    this.navigateFunction = null;\r\n    //When navTitle start with 'imgsrc:' it can parse as URL of image or data URI. These properties are available for images and paths. Use after initWheel(), before createWheel()\r\n    this.titleWidth = null;\r\n    this.titleHeight = null;\r\n    this.titleHoverWidth = null;\r\n    this.titleHoverHeight = null;\r\n    this.titleSelectedWidth = null;\r\n    this.titleSelectedHeight = null;\r\n\r\n    //Wheelnav properties\r\n    this.animateeffect = null;\r\n    this.animatetime = null;\r\n\r\n    this.sliceInitPathFunction = null;\r\n    this.sliceClickablePathFunction = null;\r\n    this.slicePathFunction = null;\r\n    this.sliceSelectedPathFunction = null;\r\n    this.sliceHoverPathFunction = null;\r\n\r\n    this.sliceTransformFunction = null;\r\n    this.sliceSelectedTransformFunction = null;\r\n    this.sliceHoverTransformFunction = null;\r\n    this.sliceInitTransformFunction = null;\r\n\r\n    this.slicePathCustom = null;\r\n    this.sliceClickablePathCustom = null;\r\n    this.sliceSelectedPathCustom = null;\r\n    this.sliceHoverPathCustom = null;\r\n    this.sliceInitPathCustom = null;\r\n\r\n    this.sliceTransformCustom = null;\r\n    this.sliceSelectedTransformCustom = null;\r\n    this.sliceHoverTransformCustom = null;\r\n    this.sliceInitTransformCustom = null;\r\n\r\n    this.initPercent = null;\r\n    this.minPercent = null;\r\n    this.maxPercent = null;\r\n    this.hoverPercent = null;\r\n    this.selectedPercent = null;\r\n    this.clickablePercentMin = null;\r\n    this.clickablePercentMax = null;\r\n\r\n    this.titleSpreadScale = null;\r\n    this.sliceAngle = null;\r\n    this.titleRotateAngle = null;\r\n\r\n    this.titleCurved = null;\r\n    this.titleCurvedClockwise = null;\r\n    this.titleCurvedByRotateAngle = null;\r\n\r\n    //Default navitem styles\r\n    this.styleNavItem();\r\n\r\n    return this;\r\n};\r\n\r\nwheelnavItem.prototype.createNavItem = function () {\r\n\r\n    //Wheel settings\r\n    this.setWheelSettings(false);\r\n\r\n    //Set href navigation\r\n    if (this.navigateHref !== null) {\r\n        this.navigateFunction = function () {\r\n            window.location.href = this.navigateHref;\r\n        };\r\n    }\r\n\r\n    //Set colors\r\n    if (!this.wheelnav.cssMode) {\r\n        this.slicePathAttr.fill = this.fillAttr;\r\n        this.sliceHoverAttr.fill = this.fillAttr;\r\n        this.sliceSelectedAttr.fill = this.fillAttr;\r\n    }\r\n\r\n    //Set attrs\r\n    if (!this.enabled) {\r\n        if (!this.wheelnav.cssMode) {\r\n            this.slicePathAttr.cursor = \"default\";\r\n            this.sliceHoverAttr.cursor = \"default\";\r\n            this.titleAttr.cursor = \"default\";\r\n            this.titleHoverAttr.cursor = \"default\";\r\n            this.linePathAttr.cursor = \"default\";\r\n            this.lineHoverAttr.cursor = \"default\";\r\n        }\r\n\r\n        this.sliceClickablePathAttr.cursor = \"default\";\r\n        this.sliceClickableHoverAttr.cursor = \"default\";\r\n    }\r\n\r\n    //Set angles\r\n    var prevItemIndex = this.wheelItemIndex - 1;\r\n    var wheelSliceAngle = 360 / this.wheelnav.navItemCount;\r\n    if (this.sliceAngle === null) {\r\n        this.sliceAngle = 360 / this.wheelnav.navItemCount;\r\n    }\r\n    if (this.wheelnav.clockwise) {\r\n        if (this.wheelnav.navItemsContinuous) {\r\n            if (this.itemIndex === 0) {\r\n                this.baseAngle = (this.itemIndex * this.sliceAngle) + ((-this.sliceAngle / 2) + this.wheelnav.navAngle);\r\n            }\r\n            else {\r\n                this.baseAngle = this.wheelnav.navItems[prevItemIndex].baseAngle + this.wheelnav.navItems[prevItemIndex].sliceAngle;\r\n            }\r\n        }\r\n        else {\r\n            if (this.wheelnav.navItemsCentered) {\r\n                this.baseAngle = (this.itemIndex * wheelSliceAngle) + ((-this.sliceAngle / 2) + this.wheelnav.navAngle);\r\n            }\r\n            else {\r\n                this.baseAngle = (this.itemIndex * wheelSliceAngle) + ((-wheelSliceAngle / 2) + this.wheelnav.navAngle);\r\n                this.currentRotateAngle += ((wheelSliceAngle / 2) - (this.wheelnav.navItems[0].sliceAngle / 2));\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (this.wheelnav.navItemsContinuous) {\r\n            if (this.itemIndex === 0) {\r\n                this.baseAngle = (this.itemIndex * this.sliceAngle) + ((-this.sliceAngle / 2) + this.wheelnav.navAngle);\r\n            }\r\n            else {\r\n                this.baseAngle = this.wheelnav.navItems[prevItemIndex].baseAngle - this.wheelnav.navItems[this.wheelItemIndex].sliceAngle;\r\n            }\r\n        }\r\n        else {\r\n            if (this.wheelnav.navItemsCentered) {\r\n                this.baseAngle = (this.itemIndex * wheelSliceAngle) + ((-this.sliceAngle / 2) + this.wheelnav.navAngle);\r\n            }\r\n            else {\r\n                this.baseAngle = (this.itemIndex * wheelSliceAngle) + ((-wheelSliceAngle / 2) + this.wheelnav.navAngle) + (wheelSliceAngle - this.sliceAngle);\r\n                this.currentRotateAngle -= ((wheelSliceAngle / 2) - (this.wheelnav.navItems[0].sliceAngle / 2));\r\n            }\r\n        }\r\n    }\r\n\r\n    this.navAngle = this.baseAngle + (this.sliceAngle / 2);\r\n\r\n    if (this.wheelnav.animatetimeCalculated) {\r\n        this.animatetime = this.wheelnav.animatetime / this.wheelnav.navItemCount;\r\n    }\r\n\r\n    this.initPathsAndTransforms();\r\n\r\n    var sliceInitPath = this.sliceInitPath;\r\n\r\n    //Create slice\r\n    this.navSlice = this.wheelnav.raphael.path(sliceInitPath.slicePathString);\r\n    this.navSlice.attr(this.slicePathAttr);\r\n    this.navSlice.id = this.wheelnav.getSliceId(this.wheelItemIndex);\r\n    this.navSlice.node.id = this.navSlice.id;\r\n\r\n    //Create linepath\r\n    this.navLine = this.wheelnav.raphael.path(sliceInitPath.linePathString);\r\n    this.navLine.attr(this.linePathAttr);\r\n    this.navLine.id = this.wheelnav.getLineId(this.wheelItemIndex);\r\n    this.navLine.node.id = this.navLine.id;\r\n\r\n    //Create title\r\n    var currentTitle = this.initNavTitle;\r\n\r\n    //Title defined by path\r\n    if (wheelnavTitle().isPathTitle(this.title)) {\r\n        this.navTitle = this.wheelnav.raphael.path(currentTitle.path);\r\n    }\r\n    //Title defined by image\r\n    else if (wheelnavTitle().isImageTitle(this.title)) {\r\n        this.navTitle = this.wheelnav.raphael.image(currentTitle.src, sliceInitPath.titlePosX - (this.titleWidth / 2), sliceInitPath.titlePosY - (this.titleHeight / 2), this.titleWidth, this.titleHeight);\r\n    }\r\n    //Title defined by text\r\n    else {\r\n        if (this.titleCurved) {\r\n            this.navTitle = this.wheelnav.raphael.text(sliceInitPath.titlePosX, sliceInitPath.titlePosY, \".\");\r\n            if (currentTitle.title !== \"\") {\r\n                this.addCurvedTitle(currentTitle.title);\r\n            }\r\n        }\r\n        else {\r\n            this.navTitle = this.wheelnav.raphael.text(sliceInitPath.titlePosX, sliceInitPath.titlePosY, currentTitle.title);\r\n        }\r\n    }\r\n\r\n    this.navTitle.id = this.wheelnav.getTitleId(this.wheelItemIndex);\r\n    this.navTitle.node.id = this.navTitle.id;\r\n    this.navTitle.attr(this.titleAttr);\r\n\r\n    //Tspan must be hide in case of curved text\r\n    if (this.titleCurved) {\r\n        var thisnode = document.getElementById(this.navTitle.node.id);\r\n        if (thisnode !== null) {\r\n            var tspans = thisnode.getElementsByTagName(\"tspan\");\r\n            if (tspans.length > 0) {\r\n                tspans[0].setAttribute(\"fill\", \"transparent\");\r\n                tspans[0].setAttribute(\"stroke\", \"transparent\");\r\n            }\r\n        }\r\n    }\r\n\r\n    //Set transforms\r\n    this.navSliceCurrentTransformString = \"\";\r\n    if (this.initTransform.sliceTransformString !== \"\") { this.navSliceCurrentTransformString += this.initTransform.sliceTransformString; }\r\n\r\n    this.navLineCurrentTransformString = \"\";\r\n    if (this.initTransform.lineTransformString !== \"\") { this.navLineCurrentTransformString += this.initTransform.lineTransformString; }\r\n\r\n    this.navTitleCurrentTransformString = \"\";\r\n    this.navTitleCurrentTransformString += this.getTitleRotateString(this.wheelnav.initTitleRotate);\r\n    if (this.initTransform.titleTransformString !== \"\" && this.initTransform.titleTransformString !== undefined) { this.navTitleCurrentTransformString += this.initTransform.titleTransformString; }\r\n    if (this.wheelnav.currentPercent < 0.05) {\r\n        this.navTitleCurrentTransformString += \",s0.05\";\r\n    }\r\n    if (this.navTitleSizeTransform !== undefined) {\r\n        this.navTitleCurrentTransformString += this.navTitleSizeTransform;\r\n    }\r\n\r\n    this.navSlice.attr({ transform: this.navSliceCurrentTransformString });\r\n    this.navLine.attr({ transform: this.navLineCurrentTransformString });\r\n    this.navTitle.attr({ transform: this.navTitleCurrentTransformString });\r\n\r\n    //Create item set\r\n    this.navItem = this.wheelnav.raphael.set();\r\n\r\n    if (this.sliceClickablePathFunction !== null) {\r\n        //Create clickable slice\r\n        var sliceClickablePath = this.getCurrentClickablePath();\r\n        this.navClickableSlice = this.wheelnav.raphael.path(sliceClickablePath.slicePathString).attr(this.sliceClickablePathAttr).toBack();\r\n        this.navClickableSlice.id = this.wheelnav.getClickableSliceId(this.wheelItemIndex);\r\n        this.navClickableSlice.node.id = this.navClickableSlice.id;\r\n        \r\n        this.navItem.push(\r\n            this.navSlice,\r\n            this.navLine,\r\n            this.navTitle,\r\n            this.navClickableSlice\r\n        );\r\n    }\r\n    else {\r\n        this.navItem.push(\r\n            this.navSlice,\r\n            this.navLine,\r\n            this.navTitle\r\n        );\r\n    }\r\n\r\n    this.setTooltip(this.tooltip);\r\n    this.navItem.id = this.wheelnav.getItemId(this.wheelItemIndex);\r\n\r\n    var thisWheelNav = this.wheelnav;\r\n    var thisNavItem = this;\r\n    var thisItemIndex = this.wheelItemIndex;\r\n\r\n    if (this.enabled) {\r\n        this.navItem.mouseup(function () {\r\n            if (thisNavItem.navigateFunction !== null) {\r\n                thisNavItem.navigateFunction();\r\n            }\r\n\r\n            thisWheelNav.navigateWheel(thisItemIndex);\r\n        });\r\n        if (this.wheelnav.hoverEnable) {\r\n            this.navItem.mouseover(function () {\r\n                if (thisNavItem.hovered !== true) {\r\n                    thisNavItem.hoverEffect(thisItemIndex, true);\r\n                }\r\n            });\r\n            this.navItem.mouseout(function () {\r\n                thisNavItem.hovered = false;\r\n                thisNavItem.hoverEffect(thisItemIndex, false);\r\n            });\r\n        }\r\n    }\r\n\r\n    this.setCurrentTransform(true, false);\r\n};\r\n\r\nwheelnavItem.prototype.addCurvedTitle = function (text) {\r\n\r\n    var pathString = [];\r\n    if (this.sliceInitPath.titlePathString !== undefined && this.sliceInitPath.titlePathString !== \"\") {\r\n        pathString = this.sliceInitPath.titlePathString;\r\n    }\r\n    else {\r\n        this.sliceHelper.titleRadius = this.wheelnav.wheelRadius * 0.63;\r\n        pathString = this.sliceHelper.getCurvedTitlePathString();\r\n    }\r\n \r\n    this.navTitle.node.id = this.wheelnav.getTitleId(this.wheelItemIndex);\r\n    var pathid = this.wheelnav.getTitlePathId(this.wheelItemIndex);\r\n    this.navTitlePath = this.wheelnav.raphael.path(pathString);\r\n    this.navTitlePath.attr({ fill: \"transparent\", stroke: \"transparent\" });\r\n    this.navTitlePath.node.id = pathid;\r\n\r\n    var thisnode = document.getElementById(this.navTitle.node.id);\r\n    var curvetextPath = window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"textPath\");\r\n    curvetextPath.setAttribute(\"id\", pathid + \"-text\");\r\n    curvetextPath.setAttribute(\"href\", \"#\" + pathid);\r\n    curvetextPath.setAttribute(\"startOffset\", \"50%\");\r\n    curvetextPath.setAttribute(\"dominant-baseline\", \"middle\");\r\n    curvetextPath.setAttribute(\"alignment-baseline\", \"middle\");\r\n    curvetextPath.textContent = text;\r\n    thisnode.appendChild(curvetextPath);\r\n\r\n    if (!this.titleCurvedByRotateAngle) {\r\n        this.titleRotateAngle = -this.navAngle;\r\n    }\r\n};\r\n\r\nwheelnavItem.prototype.hoverEffect = function (hovered, isEnter) {\r\n\r\n    if (this.wheelnav.animateLocked === false) {\r\n        if (isEnter) {\r\n            if (!this.selected) {\r\n                this.hovered = true;\r\n            }\r\n        }\r\n\r\n        this.refreshNavItem();\r\n\r\n        if (this.hoverPercent !== 1 ||\r\n            this.sliceHoverPathFunction !== null ||\r\n            this.sliceHoverTransformFunction !== null ||\r\n            this.titleHover !== this.title ||\r\n            this.titleHoverWidth !== this.titleWidth ||\r\n            this.titleHoverHeight !== this.titleHeight) {\r\n            this.setCurrentTransform(false, false);\r\n        }\r\n\r\n        this.wheelnav.marker.setCurrentTransform();\r\n        this.wheelnav.spreader.setCurrentTransform(true);\r\n    }\r\n};\r\n\r\nwheelnavItem.prototype.setCurrentTransform = function (locked, withFinishFunction) {\r\n\r\n    if (!this.wheelnav.clickModeRotate ||\r\n        (!this.navSliceUnderAnimation &&\r\n        !this.navTitleUnderAnimation &&\r\n        !this.navTitlePathUnderAnimation &&\r\n        !this.navLineUnderAnimation)) {\r\n\r\n        if (locked !== undefined &&\r\n            locked === true) {\r\n            this.navSliceUnderAnimation = true;\r\n            this.navTitleUnderAnimation = true;\r\n            if (this.navTitlePath !== undefined) {\r\n                this.navTitlePathUnderAnimation = true;\r\n            }\r\n            this.navLineUnderAnimation = true;\r\n        }\r\n\r\n        //Set transforms\r\n        //  Slice\r\n        this.navSliceCurrentTransformString = \"\";\r\n        if (this.wheelnav.clickModeRotate) { this.navSliceCurrentTransformString += this.getItemRotateString(); }\r\n        if (this.selected) {\r\n            if (this.selectTransform.sliceTransformString !== undefined) { this.navSliceCurrentTransformString += this.selectTransform.sliceTransformString; }\r\n        }\r\n        else if (this.hovered) {\r\n            if (this.hoverTransform.sliceTransformString !== undefined) { this.navSliceCurrentTransformString += this.hoverTransform.sliceTransformString; }\r\n        }\r\n        if (this.sliceTransform.sliceTransformString !== undefined) { this.navSliceCurrentTransformString += this.sliceTransform.sliceTransformString; }\r\n\r\n        //  Line\r\n        this.navLineCurrentTransformString = \"\";\r\n        if (this.wheelnav.clickModeRotate) { this.navLineCurrentTransformString += this.getItemRotateString(); }\r\n        if (this.selected) {\r\n            if (this.selectTransform.lineTransformString !== undefined) { this.navLineCurrentTransformString += this.selectTransform.lineTransformString; }\r\n        }\r\n        else if (this.hovered) {\r\n            if (this.hoverTransform.lineTransformString !== undefined) { this.navLineCurrentTransformString += this.hoverTransform.lineTransformString; }\r\n        }\r\n        if (this.sliceTransform.lineTransformString !== undefined) { this.navLineCurrentTransformString += this.sliceTransform.lineTransformString; }\r\n\r\n        //  Title\r\n        this.navTitleCurrentTransformString = \"\";\r\n        this.navTitleCurrentTransformString += this.getTitleRotateString(true);\r\n\r\n        if (this.selected) {\r\n            if (this.navTitleSizeSelectedTransform !== undefined) {\r\n                this.navTitleCurrentTransformString += this.navTitleSizeSelectedTransform;\r\n            }\r\n            if (this.selectTransform.titleTransformString === \"\" ||\r\n                this.selectTransform.titleTransformString === undefined) {\r\n                this.navTitleCurrentTransformString += \",s1\";\r\n            }\r\n            else {\r\n                this.navTitleCurrentTransformString += \",\" + this.selectTransform.titleTransformString;\r\n            }\r\n            if (this.wheelnav.currentPercent < 0.05) {\r\n                this.navTitleCurrentTransformString += \",s0.05\";\r\n            }\r\n        }\r\n        else if (this.hovered) {\r\n            if (this.navTitleSizeHoverTransform !== undefined) {\r\n                this.navTitleCurrentTransformString += this.navTitleSizeHoverTransform;\r\n            }\r\n            if (this.hoverTransform.titleTransformString === \"\" ||\r\n                this.hoverTransform.titleTransformString === undefined) {\r\n                this.navTitleCurrentTransformString += \",s1\";\r\n            }\r\n            else {\r\n                this.navTitleCurrentTransformString += \",\" + this.hoverTransform.titleTransformString;\r\n            }\r\n        }\r\n        else if (this.wheelnav.currentPercent < 0.05) {\r\n            this.navTitleCurrentTransformString += \",s0.05\";\r\n        }\r\n        else if (this.titleSpreadScale) {\r\n            this.navTitleCurrentTransformString += \",s\" + this.wheelnav.currentPercent;\r\n        }\r\n        else {\r\n            if (this.navTitleSizeTransform !== undefined) {\r\n                this.navTitleCurrentTransformString += this.navTitleSizeTransform;\r\n            }\r\n            if (this.sliceTransform.titleTransformString === \"\" ||\r\n                this.sliceTransform.titleTransformString === undefined) {\r\n                this.navTitleCurrentTransformString += \",s1\";\r\n            }\r\n            else {\r\n                this.navTitleCurrentTransformString += \",\" + this.sliceTransform.titleTransformString;\r\n            }\r\n        }\r\n\r\n        //Set path\r\n        var slicePath = this.getCurrentPath();\r\n\r\n        var sliceTransformAttr = {};\r\n\r\n        sliceTransformAttr = {\r\n            path: slicePath.slicePathString,\r\n            transform: this.navSliceCurrentTransformString\r\n        };\r\n\r\n        var sliceClickableTransformAttr = {};\r\n\r\n        if (this.sliceClickablePathFunction !== null) {\r\n            var sliceClickablePath = this.getCurrentClickablePath();\r\n\r\n            sliceClickableTransformAttr = {\r\n                path: sliceClickablePath.slicePathString,\r\n                transform: this.navSliceCurrentTransformString\r\n            };\r\n        }\r\n\r\n        var lineTransformAttr = {};\r\n\r\n        lineTransformAttr = {\r\n            path: slicePath.linePathString,\r\n            transform: this.navLineCurrentTransformString\r\n        };\r\n\r\n        //Set title\r\n        var currentTitle = this.getCurrentTitle();\r\n        var titleTransformAttr = {};\r\n        var titlePathTransformAttr = null;\r\n\r\n        if (wheelnavTitle().isPathTitle(currentTitle.title)) {\r\n            titleTransformAttr = {\r\n                path: currentTitle.path,\r\n                transform: this.navTitleCurrentTransformString\r\n            };\r\n        }\r\n        else if (wheelnavTitle().isImageTitle(currentTitle.title)) {\r\n            titleTransformAttr = {\r\n                x: currentTitle.x,\r\n                y: currentTitle.y,\r\n                width: currentTitle.width,\r\n                height: currentTitle.height,\r\n                transform: this.navTitleCurrentTransformString\r\n            };\r\n\r\n            this.navTitle.attr({ src: currentTitle.src });\r\n        }\r\n        else {\r\n            titleTransformAttr = {\r\n                x: currentTitle.x,\r\n                y: currentTitle.y,\r\n                transform: this.navTitleCurrentTransformString\r\n            };\r\n\r\n            if (currentTitle.title !== null && currentTitle.title !== \"\") {\r\n                if (!this.titleCurved) {\r\n                    this.navTitle.attr({ text: currentTitle.title });\r\n                }\r\n                else if (slicePath.titlePathString !== undefined && slicePath.titlePathString !== \"\") {\r\n                    titlePathTransformAttr = {\r\n                        path: slicePath.titlePathString\r\n                    };\r\n                }\r\n            }\r\n        }\r\n\r\n        var thisNavItem = this;\r\n        var thisWheelnav = this.wheelnav;\r\n\r\n        //Animate navitem\r\n        this.animSlice = Raphael.animation(sliceTransformAttr, this.animatetime, this.animateeffect, function () {\r\n            thisNavItem.navSliceUnderAnimation = false;\r\n            thisWheelnav.animateUnlock(false, withFinishFunction);\r\n        });\r\n        this.animLine = Raphael.animation(lineTransformAttr, this.animatetime, this.animateeffect, function () {\r\n            thisNavItem.navLineUnderAnimation = false;\r\n            thisWheelnav.animateUnlock(false, withFinishFunction);\r\n        });\r\n        this.animTitle = Raphael.animation(titleTransformAttr, this.animatetime, this.animateeffect, function () {\r\n            thisNavItem.navTitleUnderAnimation = false;\r\n            thisWheelnav.animateUnlock(false, withFinishFunction);\r\n        });\r\n        if (this.titleCurved && this.navTitlePath !== undefined) {\r\n            this.animTitlePath = Raphael.animation(titlePathTransformAttr, this.animatetime, this.animateeffect, function () {\r\n                thisNavItem.navTitlePathUnderAnimation = false;\r\n                thisWheelnav.animateUnlock(false, withFinishFunction);\r\n            });\r\n        }\r\n\r\n        if (this.navClickableSlice !== null) {\r\n            this.animClickableSlice = Raphael.animation(sliceClickableTransformAttr, this.animatetime, this.animateeffect);\r\n        }\r\n\r\n        var animateRepeatCount = this.wheelnav.animateRepeatCount;\r\n\r\n        if (locked !== undefined &&\r\n            locked === true) {\r\n            if (this.wheelItemIndex === this.wheelnav.navItemCount - 1) {\r\n\r\n                for (i = 0; i < this.wheelnav.navItemCount; i++) {\r\n                    var navItemSlice = this.wheelnav.navItems[i];\r\n                    navItemSlice.navSlice.animate(navItemSlice.animSlice.repeat(animateRepeatCount));\r\n                }\r\n                for (i = 0; i < this.wheelnav.navItemCount; i++) {\r\n                    var navItemLine = this.wheelnav.navItems[i];\r\n                    navItemLine.navLine.animate(navItemLine.animLine.repeat(animateRepeatCount));\r\n                }\r\n                for (i = 0; i < this.wheelnav.navItemCount; i++) {\r\n                    var navItemTitle = this.wheelnav.navItems[i];\r\n                    navItemTitle.navTitle.animate(navItemTitle.animTitle.repeat(animateRepeatCount));\r\n                    if (navItemTitle.titleCurved && navItemTitle.navTitlePath !== undefined) {\r\n                        navItemTitle.navTitlePath.animate(navItemTitle.animTitlePath.repeat(animateRepeatCount));\r\n                    }\r\n                }\r\n\r\n                if (this.wheelnav.sliceClickablePathFunction !== null) {\r\n                    for (i = 0; i < this.wheelnav.navItemCount; i++) {\r\n                        var navItemClickableSlice = this.wheelnav.navItems[i];\r\n                        if (navItemClickableSlice.navClickableSlice !== null) {\r\n                            navItemClickableSlice.navClickableSlice.animate(navItemClickableSlice.animClickableSlice.repeat(animateRepeatCount));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.navSlice.animate(this.animSlice.repeat(animateRepeatCount));\r\n            this.navLine.animate(this.animLine.repeat(animateRepeatCount));\r\n            this.navTitle.animate(this.animTitle.repeat(animateRepeatCount));\r\n            if (this.titleCurved && this.navTitlePath !== undefined) {\r\n                this.navTitlePath.animate(this.animTitlePath.repeat(animateRepeatCount));\r\n            }\r\n\r\n            if (this.navClickableSlice !== null) {\r\n                this.navClickableSlice.animate(this.animClickableSlice.repeat(animateRepeatCount));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwheelnavItem.prototype.setTitle = function (title) {\r\n    if (title === undefined) {\r\n        this.title = null;\r\n    }\r\n    else {\r\n        this.title = title;\r\n    }\r\n    this.titleHover = this.title;\r\n    this.titleSelected = this.title;\r\n};\r\n\r\nwheelnavItem.prototype.setTooltip = function (tooltip) {\r\n    if (tooltip !== null) {\r\n        this.navItem.attr({ title: tooltip });\r\n    }\r\n};\r\n\r\nwheelnavItem.prototype.refreshNavItem = function (withPathAndTransform) {\r\n\r\n    if (this.selected) {\r\n        this.navSlice.attr(this.sliceSelectedAttr);\r\n        this.navLine.attr(this.lineSelectedAttr);\r\n        this.navTitle.attr(this.titleSelectedAttr);\r\n        if (this.navClickableSlice !== null) { this.navClickableSlice.attr(this.sliceClickableSelectedAttr); }\r\n\r\n        if (this.wheelnav.selectedToFront) {\r\n            this.navSlice.toFront();\r\n            this.navLine.toFront();\r\n            this.navTitle.toFront();\r\n            if (this.navClickableSlice !== null) { this.navClickableSlice.toFront(); }\r\n        }\r\n        else {\r\n            if (this.navClickableSlice !== null) { this.navClickableSlice.toBack(); }\r\n            this.navTitle.toBack();\r\n            this.navLine.toBack();\r\n            this.navSlice.toBack();\r\n        }\r\n    }\r\n    else if (this.hovered) {\r\n        if (this.wheelnav.hoverEnable) {\r\n            this.navSlice.attr(this.sliceHoverAttr);\r\n            this.navLine.attr(this.lineHoverAttr);\r\n            this.navTitle.attr(this.titleHoverAttr);\r\n            if (this.navClickableSlice !== null) { this.navClickableSlice.attr(this.sliceClickableHoverAttr); }\r\n\r\n            if (this.wheelnav.hoveredToFront) {\r\n                this.navSlice.toFront();\r\n                this.navLine.toFront();\r\n                this.navTitle.toFront();\r\n            }\r\n            if (this.navClickableSlice !== null) { this.navClickableSlice.toFront(); }\r\n        }\r\n    }\r\n    else {\r\n        this.navSlice.attr(this.slicePathAttr);\r\n        this.navLine.attr(this.linePathAttr);\r\n        this.navTitle.attr(this.titleAttr);\r\n        if (this.navClickableSlice !== null) { this.navClickableSlice.attr(this.sliceClickablePathAttr); }\r\n\r\n        if (this.navClickableSlice !== null) { this.navClickableSlice.toBack(); };\r\n        this.navTitle.toBack();\r\n        this.navLine.toBack();\r\n        this.navSlice.toBack();\r\n    }\r\n    \r\n    if (withPathAndTransform !== undefined &&\r\n        withPathAndTransform === true) {\r\n        this.initPathsAndTransforms();\r\n        this.setCurrentTransform(false, false);\r\n    }\r\n};\r\n\r\nwheelnavItem.prototype.setWheelSettings = function (force) {\r\n\r\n    //Set slice from wheelnav\r\n    if (this.wheelnav.slicePathAttr !== null) { this.slicePathAttr = JSON.parse(JSON.stringify(this.wheelnav.slicePathAttr)); }\r\n    if (this.wheelnav.sliceHoverAttr !== null) { this.sliceHoverAttr = JSON.parse(JSON.stringify(this.wheelnav.sliceHoverAttr)); }\r\n    if (this.wheelnav.sliceSelectedAttr !== null) { this.sliceSelectedAttr = JSON.parse(JSON.stringify(this.wheelnav.sliceSelectedAttr)); }\r\n    \r\n    //Set title from wheelnav\r\n    if (this.wheelnav.titleAttr !== null) { this.titleAttr = JSON.parse(JSON.stringify(this.wheelnav.titleAttr)); }\r\n    if (this.wheelnav.titleHoverAttr !== null) { this.titleHoverAttr = JSON.parse(JSON.stringify(this.wheelnav.titleHoverAttr)); }\r\n    if (this.wheelnav.titleSelectedAttr !== null) { this.titleSelectedAttr = JSON.parse(JSON.stringify(this.wheelnav.titleSelectedAttr)); }\r\n    if (this.wheelnav.titleRotateAngle !== null && this.titleRotateAngle === null) { this.titleRotateAngle = this.wheelnav.titleRotateAngle; }\r\n    if (this.wheelnav.titleCurved !== null && this.titleCurved === null) { this.titleCurved = this.wheelnav.titleCurved; }\r\n    if (this.wheelnav.titleCurvedClockwise !== null && this.titleCurvedClockwise === null) { this.titleCurvedClockwise = this.wheelnav.titleCurvedClockwise; }\r\n    else if (this.titleCurvedClockwise === null) { this.titleCurvedClockwise = !this.wheelnav.clockwise; }\r\n    if (this.wheelnav.titleCurvedByRotateAngle !== null && this.titleCurvedByRotateAngle === null) { this.titleCurvedByRotateAngle = this.wheelnav.titleCurvedByRotateAngle; }\r\n\r\n    // Size\r\n    if (this.wheelnav.titleWidth !== null && this.titleWidth === null) { this.titleWidth = this.wheelnav.titleWidth; }\r\n    if (this.wheelnav.titleHeight !== null && this.titleHeight === null) { this.titleHeight = this.wheelnav.titleHeight; }\r\n    if (this.titleWidth !== null && this.titleHeight === null) { this.titleHeight = this.titleWidth; }\r\n    if (this.titleWidth === null && this.titleHeight !== null) { this.titleWidth = this.titleHeight; }\r\n    if (wheelnavTitle().isImageTitle(this.title)) {\r\n        // Image default value\r\n        if (this.titleWidth === null) { this.titleWidth = 32; }\r\n        if (this.titleHeight === null) { this.titleHeight = 32; }\r\n    }\r\n\r\n    if (this.wheelnav.titleHoverWidth !== null && this.titleHoverWidth === null) { this.titleHoverWidth = this.wheelnav.titleHoverWidth; }\r\n    if (this.wheelnav.titleHoverHeight !== null && this.titleHoverHeight === null) { this.titleHoverHeight = this.wheelnav.titleHoverHeight; }\r\n    if (this.titleHoverWidth !== null && this.titleHoverHeight === null) { this.titleHoverHeight = this.titleHoverWidth; }\r\n    if (this.titleHoverWidth === null && this.titleHoverHeight !== null) { this.titleHoverWidth = this.titleHoverHeight; }\r\n\r\n    if (this.wheelnav.titleSelectedWidth !== null && this.titleSelectedWidth === null) { this.titleSelectedWidth = this.wheelnav.titleSelectedWidth; }\r\n    if (this.wheelnav.titleSelectedHeight !== null && this.titleSelectedHeight === null) { this.titleSelectedHeight = this.wheelnav.titleSelectedHeight; }\r\n    if (this.titleSelectedWidth !== null && this.titleSelectedHeight === null) { this.titleSelectedHeight = this.titleSelectedWidth; }\r\n    if (this.titleSelectedWidth === null && this.titleSelectedHeight !== null) { this.titleSelectedWidth = this.titleSelectedHeight; }\r\n\r\n    if (this.titleHoverHeight === null) { this.titleHoverHeight = this.titleHeight; }\r\n    if (this.titleHoverWidth === null) { this.titleHoverWidth = this.titleWidth; }\r\n    if (this.titleSelectedHeight === null) { this.titleSelectedHeight = this.titleHeight; }\r\n    if (this.titleSelectedWidth === null) { this.titleSelectedWidth = this.titleWidth; }\r\n\r\n    //Set line from wheelnav\r\n    if (this.wheelnav.linePathAttr !== null) { this.linePathAttr = JSON.parse(JSON.stringify(this.wheelnav.linePathAttr)); }\r\n    if (this.wheelnav.lineHoverAttr !== null) { this.lineHoverAttr = JSON.parse(JSON.stringify(this.wheelnav.lineHoverAttr)); }\r\n    if (this.wheelnav.lineSelectedAttr !== null) { this.lineSelectedAttr = JSON.parse(JSON.stringify(this.wheelnav.lineSelectedAttr)); }\r\n\r\n    //Set animation from wheelnav\r\n    if (this.animateeffect === null || force) {\r\n        if (this.wheelnav.animateeffect !== null) { this.animateeffect = this.wheelnav.animateeffect; }\r\n        else { this.animateeffect = \"bounce\"; }\r\n    }\r\n    if (this.animatetime === null || force) {\r\n        if (this.wheelnav.animatetime !== null) { this.animatetime = this.wheelnav.animatetime; }\r\n        else { this.animatetime = 1500; }\r\n    }\r\n\r\n    if (this.title !== null) {\r\n        if (this.sliceInitPathFunction === null || force) { this.sliceInitPathFunction = this.wheelnav.sliceInitPathFunction; }\r\n        if (this.sliceClickablePathFunction === null || force) { this.sliceClickablePathFunction = this.wheelnav.sliceClickablePathFunction; }\r\n        if (this.slicePathFunction === null || force) { this.slicePathFunction = this.wheelnav.slicePathFunction; }\r\n        if (this.sliceSelectedPathFunction === null || force) { this.sliceSelectedPathFunction = this.wheelnav.sliceSelectedPathFunction; }\r\n        if (this.sliceHoverPathFunction === null || force) { this.sliceHoverPathFunction = this.wheelnav.sliceHoverPathFunction; }\r\n            \r\n        if (this.sliceTransformFunction === null || force) { this.sliceTransformFunction = this.wheelnav.sliceTransformFunction; }\r\n        if (this.sliceSelectedTransformFunction === null || force) { this.sliceSelectedTransformFunction = this.wheelnav.sliceSelectedTransformFunction; }\r\n        if (this.sliceHoverTransformFunction === null || force) { this.sliceHoverTransformFunction = this.wheelnav.sliceHoverTransformFunction; }\r\n        if (this.sliceInitTransformFunction === null || force) { this.sliceInitTransformFunction = this.wheelnav.sliceInitTransformFunction; }\r\n    }\r\n    else {\r\n        this.sliceInitPathFunction = slicePath().NullInitSlice;\r\n        this.sliceClickablePathFunction = slicePath().NullSlice;\r\n        this.slicePathFunction = slicePath().NullSlice;\r\n        this.sliceSelectedPathFunction = null;\r\n        this.sliceHoverPathFunction = null;\r\n        this.sliceTransformFunction = null;\r\n        this.sliceSelectedTransformFunction = null;\r\n        this.sliceHoverTransformFunction = null;\r\n        this.sliceInitTransformFunction = null;\r\n    }\r\n\r\n    if (this.slicePathCustom === null || force) { this.slicePathCustom = this.wheelnav.slicePathCustom; }\r\n    if (this.sliceClickablePathCustom === null || force) { this.sliceClickablePathCustom = this.wheelnav.sliceClickablePathCustom; }\r\n    if (this.sliceSelectedPathCustom === null || force) { this.sliceSelectedPathCustom = this.wheelnav.sliceSelectedPathCustom; }\r\n    if (this.sliceHoverPathCustom === null || force) { this.sliceHoverPathCustom = this.wheelnav.sliceHoverPathCustom; }\r\n    if (this.sliceInitPathCustom === null || force) { this.sliceInitPathCustom = this.wheelnav.sliceInitPathCustom; }\r\n\r\n    if (this.sliceTransformCustom === null || force) { this.sliceTransformCustom = this.wheelnav.sliceTransformCustom; }\r\n    if (this.sliceSelectedTransformCustom === null || force) { this.sliceSelectedTransformCustom = this.wheelnav.sliceSelectedTransformCustom; }\r\n    if (this.sliceHoverTransformCustom === null || force) { this.sliceHoverTransformCustom = this.wheelnav.sliceHoverTransformCustom; }\r\n    if (this.sliceInitTransformCustom === null || force) { this.sliceInitTransformCustom = this.wheelnav.sliceInitTransformCustom; }\r\n\r\n    if (this.initPercent === null || force) { this.initPercent = this.wheelnav.initPercent; }\r\n    if (this.minPercent === null || force) { this.minPercent = this.wheelnav.minPercent; }\r\n    if (this.maxPercent === null || force) { this.maxPercent = this.wheelnav.maxPercent; }\r\n    if (this.hoverPercent === null || force) { this.hoverPercent = this.wheelnav.hoverPercent; }\r\n    if (this.selectedPercent === null || force) { this.selectedPercent = this.wheelnav.selectedPercent; }\r\n    if (this.clickablePercentMin === null || force) { this.clickablePercentMin = this.wheelnav.clickablePercentMin; }\r\n    if (this.clickablePercentMax === null || force) { this.clickablePercentMax = this.wheelnav.clickablePercentMax; }\r\n\r\n    if (this.titleSpreadScale === null || force) {\r\n        if (this.wheelnav.titleSpreadScale !== null) { this.titleSpreadScale = this.wheelnav.titleSpreadScale; }\r\n        else { this.titleSpreadScale = false; }\r\n    }\r\n    if (this.sliceAngle === null || force) {\r\n        if (this.wheelnav.sliceAngle !== null) { this.sliceAngle = this.wheelnav.sliceAngle; }\r\n    }\r\n};\r\n\r\nwheelnavItem.prototype.initPathsAndTransforms = function () {\r\n\r\n    this.sliceHelper = new pathHelper();\r\n    this.sliceHelper.centerX = this.wheelnav.centerX;\r\n    this.sliceHelper.centerY = this.wheelnav.centerY;\r\n    this.sliceHelper.wheelRadius = this.wheelnav.wheelRadius;\r\n    this.sliceHelper.startAngle = this.baseAngle;\r\n    this.sliceHelper.sliceAngle = this.sliceAngle;\r\n    this.sliceHelper.itemIndex = this.itemIndex;\r\n    this.sliceHelper.titleCurvedClockwise = this.titleCurvedClockwise;\r\n    \r\n    //Set min/max sliecePaths\r\n    //Default - min\r\n    this.slicePathMin = this.slicePathFunction(this.sliceHelper, this.minPercent, this.slicePathCustom);\r\n\r\n    //Default - max\r\n    this.slicePathMax = this.slicePathFunction(this.sliceHelper, this.maxPercent, this.slicePathCustom);\r\n\r\n    //Selected - min\r\n    if (this.sliceSelectedPathFunction !== null) {\r\n        this.selectedSlicePathMin = this.sliceSelectedPathFunction(this.sliceHelper, this.selectedPercent * this.minPercent, this.sliceSelectedPathCustom);\r\n    }\r\n    else {\r\n        this.selectedSlicePathMin = this.slicePathFunction(this.sliceHelper, this.selectedPercent * this.minPercent, this.sliceSelectedPathCustom);\r\n    }\r\n\r\n    //Selected - max\r\n    if (this.sliceSelectedPathFunction !== null) {\r\n        this.selectedSlicePathMax = this.sliceSelectedPathFunction(this.sliceHelper, this.selectedPercent * this.maxPercent, this.sliceSelectedPathCustom);\r\n    }\r\n    else {\r\n        this.selectedSlicePathMax = this.slicePathFunction(this.sliceHelper, this.selectedPercent * this.maxPercent, this.sliceSelectedPathCustom);\r\n    }\r\n\r\n    //Hovered - min\r\n    if (this.sliceHoverPathFunction !== null) {\r\n        this.hoverSlicePathMin = this.sliceHoverPathFunction(this.sliceHelper, this.hoverPercent * this.minPercent, this.sliceHoverPathCustom);\r\n    }\r\n    else {\r\n        this.hoverSlicePathMin = this.slicePathFunction(this.sliceHelper, this.hoverPercent * this.minPercent, this.sliceHoverPathCustom);\r\n    }\r\n\r\n    //Hovered - max\r\n    if (this.sliceHoverPathFunction !== null) {\r\n        this.hoverSlicePathMax = this.sliceHoverPathFunction(this.sliceHelper, this.hoverPercent * this.maxPercent, this.sliceHoverPathCustom);\r\n    }\r\n    else {\r\n        this.hoverSlicePathMax = this.slicePathFunction(this.sliceHelper, this.hoverPercent * this.maxPercent, this.sliceHoverPathCustom);\r\n    }\r\n\r\n    //Set min/max sliececlickablePaths\r\n    \r\n    if (this.sliceClickablePathFunction !== null) {\r\n        //Default - min\r\n        this.clickableSlicePathMin = this.sliceClickablePathFunction(this.sliceHelper, this.clickablePercentMin, this.sliceClickablePathCustom);\r\n        //Default - max\r\n        this.clickableSlicePathMax = this.sliceClickablePathFunction(this.sliceHelper, this.clickablePercentMax, this.sliceClickablePathCustom);\r\n    }\r\n\r\n    //Initial path\r\n    if (this.sliceInitPathFunction !== null) {\r\n        this.sliceInitPath = this.sliceInitPathFunction(this.sliceHelper, this.initPercent, this.sliceInitPathCustom);\r\n    }\r\n    else {\r\n        if (this.wheelnav.currentPercent === this.wheelnav.maxPercent) {\r\n            this.sliceInitPath = this.slicePathFunction(this.sliceHelper, this.maxPercent, this.sliceInitPathCustom);\r\n        }\r\n        else {\r\n            this.sliceInitPath = this.slicePathFunction(this.sliceHelper, this.minPercent, this.sliceInitPathCustom);\r\n        }\r\n    }\r\n\r\n    //Set sliceTransforms\r\n    //Default\r\n    if (this.sliceTransformFunction !== null) {\r\n        this.sliceTransform = this.sliceTransformFunction(this.wheelnav.centerX, this.wheelnav.centerY, this.wheelnav.wheelRadius, this.baseAngle, this.sliceAngle, this.titleRotateAngle, this.itemIndex, this.sliceTransformCustom);\r\n    }\r\n    else {\r\n        this.sliceTransform = sliceTransform().NullTransform;\r\n    }\r\n\r\n    //Selected\r\n    if (this.sliceSelectedTransformFunction !== null) {\r\n        this.selectTransform = this.sliceSelectedTransformFunction(this.wheelnav.centerX, this.wheelnav.centerY, this.wheelnav.wheelRadius, this.baseAngle, this.sliceAngle, this.titleRotateAngle, this.itemIndex, this.sliceSelectedTransformCustom);\r\n    }\r\n    else {\r\n        this.selectTransform = sliceTransform().NullTransform;\r\n    }\r\n\r\n    //Hovered\r\n    if (this.sliceHoverTransformFunction !== null) {\r\n        this.hoverTransform = this.sliceHoverTransformFunction(this.wheelnav.centerX, this.wheelnav.centerY, this.wheelnav.wheelRadius, this.baseAngle, this.sliceAngle, this.titleRotateAngle, this.itemIndex, this.sliceHoverTransformCustom);\r\n    }\r\n    else {\r\n        this.hoverTransform = sliceTransform().NullTransform;\r\n    }\r\n\r\n    //Initial transform\r\n    if (this.sliceInitTransformFunction !== null) {\r\n        this.initTransform = this.sliceInitTransformFunction(this.wheelnav.centerX, this.wheelnav.centerY, this.wheelnav.wheelRadius, this.baseAngle, this.sliceAngle, this.titleRotateAngle, this.itemIndex, this.sliceInitTransformCustom);\r\n    }\r\n    else {\r\n        this.initTransform = sliceTransform().NullTransform;\r\n    }\r\n\r\n    //Set titles\r\n    if (wheelnavTitle().isPathTitle(this.title)) {\r\n        initNavTitle = new wheelnavTitle(this.title, this.wheelnav.raphael.raphael);\r\n        basicNavTitleMin = new wheelnavTitle(this.title, this.wheelnav.raphael.raphael);\r\n        basicNavTitleMax = new wheelnavTitle(this.title, this.wheelnav.raphael.raphael);\r\n        hoverNavTitleMin = new wheelnavTitle(this.titleHover, this.wheelnav.raphael.raphael);\r\n        hoverNavTitleMax = new wheelnavTitle(this.titleHover, this.wheelnav.raphael.raphael);\r\n        selectedNavTitleMin = new wheelnavTitle(this.titleSelected, this.wheelnav.raphael.raphael);\r\n        selectedNavTitleMax = new wheelnavTitle(this.titleSelected, this.wheelnav.raphael.raphael);\r\n        this.navTitleSizeTransform = basicNavTitleMax.getTitleSizeTransform(this.titleWidth, this.titleHeight);\r\n        this.navTitleSizeHoverTransform = hoverNavTitleMax.getTitleSizeTransform(this.titleHoverWidth, this.titleHoverHeight);\r\n        this.navTitleSizeSelectedTransform = selectedNavTitleMax.getTitleSizeTransform(this.titleSelectedWidth, this.titleSelectedHeight);\r\n    }\r\n    else {\r\n        initNavTitle = new wheelnavTitle(this.title);\r\n        basicNavTitleMin = new wheelnavTitle(this.title);\r\n        basicNavTitleMax = new wheelnavTitle(this.title);\r\n        hoverNavTitleMin = new wheelnavTitle(this.titleHover);\r\n        hoverNavTitleMax = new wheelnavTitle(this.titleHover);\r\n        selectedNavTitleMin = new wheelnavTitle(this.titleSelected);\r\n        selectedNavTitleMax = new wheelnavTitle(this.titleSelected);\r\n    }\r\n\r\n    this.initNavTitle = initNavTitle.getTitlePercentAttr(this.sliceInitPath.titlePosX, this.sliceInitPath.titlePosY, this.titleWidth, this.titleHeight);\r\n    this.basicNavTitleMin = basicNavTitleMin.getTitlePercentAttr(this.slicePathMin.titlePosX, this.slicePathMin.titlePosY, this.titleWidth, this.titleHeight);\r\n    this.basicNavTitleMax = basicNavTitleMax.getTitlePercentAttr(this.slicePathMax.titlePosX, this.slicePathMax.titlePosY, this.titleWidth, this.titleHeight);\r\n    this.hoverNavTitleMin = hoverNavTitleMin.getTitlePercentAttr(this.hoverSlicePathMin.titlePosX, this.hoverSlicePathMin.titlePosY, this.titleHoverWidth, this.titleHoverHeight);\r\n    this.hoverNavTitleMax = hoverNavTitleMax.getTitlePercentAttr(this.hoverSlicePathMax.titlePosX, this.hoverSlicePathMax.titlePosY, this.titleHoverWidth, this.titleHoverHeight);\r\n    this.selectedNavTitleMin = selectedNavTitleMin.getTitlePercentAttr(this.selectedSlicePathMin.titlePosX, this.selectedSlicePathMin.titlePosY, this.titleSelectedWidth, this.titleSelectedHeight);\r\n    this.selectedNavTitleMax = selectedNavTitleMax.getTitlePercentAttr(this.selectedSlicePathMax.titlePosX, this.selectedSlicePathMax.titlePosY, this.titleSelectedWidth, this.titleSelectedHeight);\r\n};\r\n\r\nwheelnavItem.prototype.getCurrentPath = function () {\r\n    var slicePath;\r\n\r\n    if (this.wheelnav.currentPercent === this.wheelnav.maxPercent) {\r\n        if (this.selected) {\r\n            slicePath = this.selectedSlicePathMax;\r\n        }\r\n        else {\r\n            if (this.hovered) {\r\n                slicePath = this.hoverSlicePathMax;\r\n            }\r\n            else {\r\n                slicePath = this.slicePathMax;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (this.selected) {\r\n            slicePath = this.selectedSlicePathMin;\r\n        }\r\n        else {\r\n            if (this.hovered) {\r\n                slicePath = this.hoverSlicePathMin;\r\n            }\r\n            else {\r\n                slicePath = this.slicePathMin;\r\n            }\r\n        }\r\n    }\r\n\r\n    return slicePath;\r\n};\r\n\r\nwheelnavItem.prototype.getCurrentClickablePath = function () {\r\n    var sliceClickablePath;\r\n\r\n    if (this.wheelnav.currentPercent === this.wheelnav.maxPercent) {\r\n        sliceClickablePath = this.clickableSlicePathMax;\r\n    }\r\n    else {\r\n        sliceClickablePath = this.clickableSlicePathMin;\r\n    }\r\n\r\n    return sliceClickablePath;\r\n};\r\n\r\nwheelnavItem.prototype.getCurrentTitle = function () {\r\n    var currentTitle;\r\n\r\n    if (this.wheelnav.currentPercent === this.wheelnav.maxPercent) {\r\n        if (this.selected) {\r\n            currentTitle = this.selectedNavTitleMax;\r\n        }\r\n        else {\r\n            if (this.hovered) {\r\n                currentTitle = this.hoverNavTitleMax;\r\n            }\r\n            else {\r\n                currentTitle = this.basicNavTitleMax;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (this.selected) {\r\n            currentTitle = this.selectedNavTitleMin;\r\n        }\r\n        else {\r\n            if (this.hovered) {\r\n                currentTitle = this.hoverNavTitleMin;\r\n            }\r\n            else {\r\n                currentTitle = this.basicNavTitleMin;\r\n            }\r\n        }\r\n    }\r\n\r\n    return currentTitle;\r\n};\r\n\r\nwheelnavItem.prototype.getItemRotateString = function () {\r\n    return \"r,\" + (this.currentRotateAngle).toString() + \",\" + this.wheelnav.centerX + \",\" + this.wheelnav.centerY;\r\n};\r\n\r\nwheelnavItem.prototype.getTitleRotateString = function (withTitleRotateAngle) {\r\n\r\n    var titleRotate = \"\";\r\n    titleRotate += this.getItemRotateString();\r\n\r\n    if (this.titleRotateAngle !== null && withTitleRotateAngle) {\r\n        titleRotate += \",r,\" + (this.navAngle + this.titleRotateAngle).toString();\r\n    }\r\n    else {\r\n        titleRotate += \",r,\" + (-this.currentRotateAngle).toString();\r\n    }\r\n\r\n    return titleRotate;\r\n};\r\n\r\nwheelnavTitle = function (title, raphael) {\r\n    this.title = title;\r\n    //Calculate relative path\r\n    if (title !== null) {\r\n        if (raphael !== undefined) {\r\n            this.relativePath = raphael.pathToRelative(title);\r\n            var bbox = raphael.pathBBox(this.relativePath);\r\n            this.centerX = bbox.cx;\r\n            this.centerY = bbox.cy;\r\n            this.width = bbox.width;\r\n            this.height = bbox.height;\r\n            this.startX = this.relativePath[0][1];\r\n            this.startY = this.relativePath[0][2];\r\n        }\r\n        this.title = title;\r\n    }\r\n    else {\r\n        this.title = \"\";\r\n    }\r\n\r\n    this.isPathTitle = function (title) {\r\n        if (title !== null &&\r\n            (title.substr(0, 1) === \"m\" ||\r\n            title.substr(0, 1) === \"M\") &&\r\n            (title.substr(title.length - 1, 1) === \"z\" ||\r\n            title.substr(title.length - 1, 1) === \"Z\") &&\r\n            (title.indexOf(\",\") > -1 ||\r\n            title.indexOf(\" \") > -1)){\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    this.isImageTitle = function (title) {\r\n        if (title === undefined) { title = this.title;}\r\n        if (title !== null &&\r\n            title.substr(0, 7) === \"imgsrc:\") {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    return this;\r\n};\r\n\r\nwheelnavTitle.prototype.getTitlePercentAttr = function (currentX, currentY, titlewidth, titleheight) {\r\n\r\n    var transformAttr = {};\r\n\r\n    if (this.relativePath !== undefined) {\r\n        var pathCx = currentX + (this.startX - this.centerX);\r\n        var pathCy = currentY + (this.startY - this.centerY);\r\n\r\n        this.relativePath[0][1] = pathCx;\r\n        this.relativePath[0][2] = pathCy;\r\n\r\n        transformAttr = {\r\n            path: this.relativePath,\r\n            title: this.title\r\n        };\r\n    }\r\n    else {\r\n        if (this.isImageTitle()) {\r\n            transformAttr = {\r\n                x: currentX - (titlewidth / 2),\r\n                y: currentY - (titleheight / 2),\r\n                width: titlewidth,\r\n                height: titleheight,\r\n                title: this.title,\r\n                src: this.title.substr(7, this.title.length)\r\n            };\r\n        }\r\n        else {\r\n            transformAttr = {\r\n                x: currentX,\r\n                y: currentY,\r\n                title: this.title\r\n            };\r\n        }\r\n    }\r\n\r\n    return transformAttr;\r\n};\r\n\r\nwheelnavTitle.prototype.getTitleSizeTransform = function (titlewidth, titleheight) {\r\n\r\n    var transformAttr = \"\";\r\n\r\n    //Calculate path width & height\r\n    if (titlewidth !== null && titleheight !== null) {\r\n        transformAttr = \"s\";\r\n        if (this.height > this.width) {\r\n            transformAttr += (titlewidth / this.height).toString() + \",\";\r\n            transformAttr += (titleheight / this.height).toString();\r\n        }\r\n        else {\r\n            transformAttr += (titlewidth / this.width).toString() + \",\";\r\n            transformAttr += (titleheight / this.width).toString();\r\n        }\r\n    }\r\n\r\n    return transformAttr;\r\n};\r\n","/* ======================================================================================= */\r\n/* Default styles and available css classes                                                */\r\n/* ======================================================================================= */\r\n/* ======================================================================================= */\r\n/* Documentation: http://wheelnavjs.softwaretailoring.net/documentation/css3.html          */\r\n/* ======================================================================================= */\r\n\r\nwheelnav.prototype.styleWheel = function () {\r\n    if (!this.cssMode) {\r\n        if (this.spreaderPathInAttr === undefined || this.spreaderPathInAttr === null) {\r\n            this.spreaderPathInAttr = { fill: \"#444\", stroke: \"#444\", \"stroke-width\": 2, cursor: 'pointer' };\r\n        }\r\n        if (this.spreaderPathOutAttr === undefined || this.spreaderPathOutAttr === null) {\r\n            this.spreaderPathOutAttr = { fill: \"#444\", stroke: \"#444\", \"stroke-width\": 2, cursor: 'pointer' };\r\n        }\r\n        if (this.spreaderTitleInAttr === undefined || this.spreaderTitleInAttr === null) {\r\n            this.spreaderTitleInAttr = { fill: \"#eee\", stroke: \"#444\", cursor: 'pointer' };\r\n        }\r\n        if (this.spreaderTitleOutAttr === undefined || this.spreaderTitleOutAttr === null) {\r\n            this.spreaderTitleOutAttr = { fill: \"#eee\", stroke: \"#444\", cursor: 'pointer' };\r\n        }\r\n        if (this.markerAttr === undefined || this.markerAttr === null) {\r\n            this.markerAttr = { stroke: \"#444\", \"stroke-width\": 2 };\r\n        }\r\n    }\r\n    else {\r\n        this.spreaderPathInAttr = { \"class\": this.getSpreaderCssClass(\"in\") };\r\n        this.spreaderPathOutAttr = { \"class\": this.getSpreaderCssClass(\"out\") };\r\n        this.spreaderTitleInAttr = { \"class\": this.getSpreaderTitleCssClass(\"in\") };\r\n        this.spreaderTitleOutAttr = { \"class\": this.getSpreaderTitleCssClass(\"out\") };\r\n        this.markerAttr = { \"class\": this.getMarkerCssClass() };\r\n    }\r\n};\r\n\r\nwheelnavItem.prototype.styleNavItem = function () {\r\n    if (!this.wheelnav.cssMode) {\r\n        this.slicePathAttr = { stroke: \"#333\", \"stroke-width\": 0, cursor: 'pointer', \"fill-opacity\": 1 };\r\n        this.sliceHoverAttr = { stroke: \"#222\", \"stroke-width\": 0, cursor: 'pointer', \"fill-opacity\": 0.77 };\r\n        this.sliceSelectedAttr = { stroke: \"#111\", \"stroke-width\": 0, cursor: 'default', \"fill-opacity\": 1 };\r\n\r\n        this.titleAttr = { font: this.titleFont, fill: \"#333\", stroke: \"none\", cursor: 'pointer' };\r\n        this.titleHoverAttr = { font: this.titleFont, fill: \"#222\", cursor: 'pointer', stroke: \"none\" };\r\n        this.titleSelectedAttr = { font: this.titleFont, fill: \"#fff\", cursor: 'default' };\r\n\r\n        this.linePathAttr = { stroke: \"#444\", \"stroke-width\": 1, cursor: 'pointer' };\r\n        this.lineHoverAttr = { stroke: \"#222\", \"stroke-width\": 2, cursor: 'pointer' };\r\n        this.lineSelectedAttr = { stroke: \"#444\", \"stroke-width\": 1, cursor: 'default' };\r\n    }\r\n    else {\r\n        this.slicePathAttr = { \"class\": this.wheelnav.getSliceCssClass(this.wheelItemIndex, \"basic\") };\r\n        this.sliceHoverAttr = { \"class\": this.wheelnav.getSliceCssClass(this.wheelItemIndex, \"hover\") };\r\n        this.sliceSelectedAttr = { \"class\": this.wheelnav.getSliceCssClass(this.wheelItemIndex, \"selected\") };\r\n\r\n        this.titleAttr = { \"class\": this.wheelnav.getTitleCssClass(this.wheelItemIndex, \"basic\") };\r\n        this.titleHoverAttr = { \"class\": this.wheelnav.getTitleCssClass(this.wheelItemIndex, \"hover\") };\r\n        this.titleSelectedAttr = { \"class\": this.wheelnav.getTitleCssClass(this.wheelItemIndex, \"selected\") };\r\n\r\n        this.linePathAttr = { \"class\": this.wheelnav.getLineCssClass(this.wheelItemIndex, \"basic\") };\r\n        this.lineHoverAttr = { \"class\": this.wheelnav.getLineCssClass(this.wheelItemIndex, \"hover\") };\r\n        this.lineSelectedAttr = { \"class\": this.wheelnav.getLineCssClass(this.wheelItemIndex, \"selected\") };\r\n    }\r\n\r\n    this.sliceClickablePathAttr = { fill: \"#FFF\", stroke: \"#FFF\", \"stroke-width\": 0, cursor: 'pointer', \"fill-opacity\": 0.01 };\r\n    this.sliceClickableHoverAttr = { stroke: \"#FFF\", \"stroke-width\": 0, cursor: 'pointer' };\r\n    this.sliceClickableSelectedAttr = { stroke: \"#FFF\", \"stroke-width\": 0, cursor: 'default' };\r\n}\r\n\r\nwheelnav.prototype.getSliceCssClass = function (index, subclass) {\r\n    return \"wheelnav-\" + this.holderId + \"-slice-\" + subclass + \"-\" + index;\r\n};\r\nwheelnav.prototype.getTitleCssClass = function (index, subclass) {\r\n    return \"wheelnav-\" + this.holderId + \"-title-\" + subclass + \"-\" + index;\r\n};\r\nwheelnav.prototype.getLineCssClass = function (index, subclass) {\r\n    return \"wheelnav-\" + this.holderId + \"-line-\" + subclass + \"-\" + index;\r\n};\r\nwheelnav.prototype.getSpreaderCssClass = function (state) {\r\n    return \"wheelnav-\" + this.holderId + \"-spreader-\" + state;\r\n};\r\nwheelnav.prototype.getSpreaderTitleCssClass = function (state) {\r\n    return \"wheelnav-\" + this.holderId + \"-spreadertitle-\" + state;\r\n};\r\nwheelnav.prototype.getMarkerCssClass = function () {\r\n    return \"wheelnav-\" + this.holderId + \"-marker\";\r\n};\r\n","/* ======================================================================================= */\r\n/* Slice path helper functions                                                                  */\r\n/* ======================================================================================= */\r\n/* ======================================================================================= */\r\n/* Documentation: http://wheelnavjs.softwaretailoring.net/documentation/slicePath.html     */\r\n/* ======================================================================================= */\r\n\r\nvar pathHelper = function () {\r\n\r\n    this.sliceRadius = 0;\r\n    this.startAngle = 0;\r\n    this.middleAngle = 0;\r\n    this.endAngle = 0;\r\n    this.sliceAngle = 0;\r\n    this.startTheta = 0;\r\n    this.middleTheta = 0;\r\n    this.endTheta = 0;\r\n    this.titlePosX = 0;\r\n    this.titlePosY = 0;\r\n    this.titleRadius = 0;\r\n    this.titleTheta = 0;\r\n    this.titleAngle = 0;\r\n    this.custom = null;\r\n    this.centerX = 0;\r\n    this.centerY = 0;\r\n    this.wheelRadius = 0;\r\n    this.itemIndex = 0;\r\n    this.navItemCount = 0;\r\n    this.navAngle = 0;\r\n    this.titleCurvedClockwise = false;\r\n\r\n    this.setBaseValue = function (percent, custom) {\r\n\r\n        if (custom === null) {\r\n            custom = new slicePathCustomization();\r\n        }\r\n        else {\r\n            this.custom = custom;\r\n        }\r\n\r\n        this.sliceRadius = this.wheelRadius * percent * 0.9;\r\n\r\n        this.middleAngle = this.startAngle + this.sliceAngle / 2;\r\n        this.endAngle = this.startAngle + this.sliceAngle;\r\n\r\n        this.startTheta = this.getTheta(this.startAngle);\r\n        this.middleTheta = this.getTheta(this.middleAngle);\r\n        this.endTheta = this.getTheta(this.endAngle);\r\n\r\n        if (custom !== null) {\r\n            if (custom.titleRadiusPercent !== null) {\r\n                this.titleRadius = this.sliceRadius * custom.titleRadiusPercent;\r\n            }\r\n            if (custom.titleSliceAnglePercent !== null) {\r\n                this.titleTheta = this.getTheta(this.startAngle + this.sliceAngle * custom.titleSliceAnglePercent);\r\n                this.titleAngle = this.startAngle + this.sliceAngle * custom.titleSliceAnglePercent;\r\n            }\r\n        }\r\n        else {\r\n            this.titleRadius = this.sliceRadius * 0.5;\r\n            this.titleTheta = this.middleTheta;\r\n            this.titleAngle = this.middleAngle;\r\n        }\r\n\r\n        this.setTitlePos();\r\n    };\r\n\r\n    this.setTitlePos = function () {\r\n        this.titlePosX = this.titleRadius * Math.cos(this.titleTheta) + this.centerX;\r\n        this.titlePosY = this.titleRadius * Math.sin(this.titleTheta) + this.centerY;\r\n    };\r\n\r\n    this.getX = function (angle, length) {\r\n        return length * Math.cos(this.getTheta(angle)) + this.centerX;\r\n    };\r\n\r\n    this.getY = function (angle, length) {\r\n        return length * Math.sin(this.getTheta(angle)) + this.centerY;\r\n    };\r\n\r\n    this.MoveTo = function (angle, length) {\r\n        return [\"M\", this.getX(angle, length), this.getY(angle, length)];\r\n    };\r\n\r\n    this.MoveToXY = function (posX, posY) {\r\n        return [\"M\", posX, posY];\r\n    };\r\n\r\n    this.MoveToCenter = function () {\r\n        return [\"M\", this.centerX, this.centerY];\r\n    };\r\n\r\n    this.LineTo = function (angle, length, angleY, lengthY) {\r\n        if (angleY === undefined) { angleY = angle; }\r\n        if (lengthY === undefined) { lengthY = length; }\r\n        return [\"L\", this.getX(angle, length), this.getY(angleY, lengthY)];\r\n    };\r\n\r\n    this.LineToXY = function (posX, posY) {\r\n        return [\"L\", posX, posY];\r\n    };\r\n\r\n    this.ArcTo = function (arcRadius, angle, length) {\r\n        return [\"A\", arcRadius, arcRadius, 0, 0, 1, this.getX(angle, length), this.getY(angle, length)];\r\n    };\r\n\r\n    this.ArcToXY = function (arcRadius, posX, posY) {\r\n        return [\"A\", arcRadius, arcRadius, 0, 0, 1, posX, posY];\r\n    };\r\n\r\n    this.ArcBackTo = function (arcRadius, angle, length) {\r\n        return [\"A\", arcRadius, arcRadius, 0, 0, 0, this.getX(angle, length), this.getY(angle, length)];\r\n    };\r\n\r\n    this.ArcBackToXY = function (arcRadius, posX, posY) {\r\n        return [\"A\", arcRadius, arcRadius, 0, 0, 0, posX, posY];\r\n    };\r\n\r\n    this.CubicBezierTo = function (assist1Angle, assist1Length, assist2Angle, assist2Length, endAngle, endLength) {\r\n        return [\"C\", this.getX(assist1Angle, assist1Length), this.getY(assist1Angle, assist1Length), this.getX(assist2Angle, assist2Length), this.getY(assist2Angle, assist2Length), this.getX(endAngle, endLength), this.getY(endAngle, endLength)];\r\n    };\r\n   \r\n    this.CubicBezierToXY = function (assist1X, assist1Y, assist2X, assist2Y, endX, endY) {\r\n        return [\"C\", assist1X, assist1Y, assist2X, assist2Y, endX, endY];\r\n    };\r\n\r\n    this.StartSpreader = function (spreaderPathString, angle, length) {\r\n        if (this.endAngle - this.startAngle === 360) {\r\n            spreaderPathString.push(this.MoveTo(angle, length));\r\n        }\r\n        else {\r\n            spreaderPathString.push(this.MoveToCenter());\r\n            spreaderPathString.push(this.LineTo(angle, length));\r\n        }\r\n    };\r\n\r\n    this.getCurvedTitlePathString = function () {\r\n        var startAngle = this.titleAngle - (this.sliceAngle / 2);\r\n        var endAngle = this.titleAngle + (this.sliceAngle / 2);\r\n        var pathString = [];\r\n        if (this.titleCurvedClockwise) {\r\n            pathString.push(this.MoveTo(startAngle, this.titleRadius));\r\n            pathString.push(this.ArcTo(this.titleRadius, endAngle, this.titleRadius));\r\n        }\r\n        else {\r\n            pathString.push(this.MoveTo(endAngle, this.titleRadius));\r\n            pathString.push(this.ArcBackTo(this.titleRadius, startAngle, this.titleRadius));\r\n        }\r\n        return pathString;\r\n    };\r\n\r\n    this.Close = function () {\r\n        return [\"z\"];\r\n    };\r\n\r\n    this.getTheta = function (angle) {\r\n        return (angle % 360) * Math.PI / 180;\r\n    };\r\n\r\n    // Converts from degrees to radians.\r\n    this.radians = function (degrees) {\r\n        return degrees * Math.PI / 180;\r\n    };\r\n\r\n    // Converts from radians to degrees.\r\n    this.degrees = function (radians) {\r\n        return radians * 180 / Math.PI;\r\n    };\r\n\r\n    return this;\r\n};\r\n\r\n/* Custom properties\r\n    - titleRadiusPercent\r\n    - titleSliceAnglePercent\r\n*/\r\nvar slicePathCustomization = function () {\r\n\r\n    this.titleRadiusPercent = 0.5;\r\n    this.titleSliceAnglePercent = 0.5;\r\n\r\n    return this;\r\n};\r\n\r\n/* Custom properties\r\n    - titleRadiusPercent\r\n    - titleSliceAnglePercent\r\n    - spreaderPercent\r\n*/\r\nvar spreaderPathCustomization = function () {\r\n\r\n    this.titleRadiusPercent = 0;\r\n    this.titleSliceAnglePercent = 0.5;\r\n    this.spreaderPercent = 1;\r\n\r\n    return this;\r\n};\r\n\r\n/* Custom properties\r\n    - titleRadiusPercent\r\n    - titleSliceAnglePercent\r\n    - markerPercent\r\n*/\r\nvar markerPathCustomization = function () {\r\n\r\n    this.titleRadiusPercent = 1;\r\n    this.titleSliceAnglePercent = 0.5;\r\n    this.markerPercent = 1.05;\r\n\r\n    return this;\r\n};\r\n\r\n","///#source 1 1 /js/source/slicePath/wheelnav.slicePathStart.js\r\n/* ======================================================================================= */\r\n/* Slice path definitions.                                                                 */\r\n/* ======================================================================================= */\r\n/* ======================================================================================= */\r\n/* Documentation: http://wheelnavjs.softwaretailoring.net/documentation/slicePath.html     */\r\n/* ======================================================================================= */\r\n\r\nslicePath = function () {\r\n\r\n    this.NullSlice = function (helper, percent, custom) {\r\n\r\n        helper.setBaseValue(percent, custom);\r\n        titlePathString = helper.getCurvedTitlePathString();\r\n\r\n        return {\r\n            slicePathString: \"\",\r\n            linePathString: \"\",\r\n            titlePosX: helper.titlePosX,\r\n            titlePosY: helper.titlePosY,\r\n            titlePathString: titlePathString\r\n        };\r\n    };\r\n\r\n    this.NullInitSlice = function (helper, percent, custom) {\r\n\r\n        helper.setBaseValue(percent, custom);\r\n\r\n        slicePathString = [helper.MoveToCenter(),\r\n                 helper.Close()];\r\n        titlePathString = helper.getCurvedTitlePathString();\r\n\r\n        return {\r\n            slicePathString: slicePathString,\r\n            linePathString: slicePathString,\r\n            titlePosX: helper.centerX,\r\n            titlePosY: helper.centerY,\r\n            titlePathString: titlePathString\r\n        };\r\n    };\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.Pie.js\r\n\r\nthis.PieSliceCustomization = function () {\r\n\r\n    var custom = new slicePathCustomization();\r\n    custom.titleRadiusPercent = 0.6;\r\n    custom.arcBaseRadiusPercent = 1;\r\n    custom.arcRadiusPercent = 1;\r\n    custom.startRadiusPercent = 0;\r\n    return custom;\r\n};\r\n\r\nthis.PieSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = PieSliceCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(percent, custom);\r\n\r\n    var arcBaseRadius = helper.sliceRadius * custom.arcBaseRadiusPercent;\r\n    var arcRadius = helper.sliceRadius * custom.arcRadiusPercent;\r\n    \r\n    slicePathString = [];\r\n    slicePathString.push(helper.MoveTo(helper.middleAngle, custom.startRadiusPercent * helper.sliceRadius));\r\n    slicePathString.push(helper.LineTo(helper.startAngle, arcBaseRadius));\r\n    if (helper.sliceAngle > 180) {\r\n        slicePathString.push(helper.ArcTo(arcRadius, helper.middleAngle, arcBaseRadius));\r\n    }\r\n    slicePathString.push(helper.ArcTo(arcRadius, helper.endAngle, arcBaseRadius));\r\n    slicePathString.push(helper.Close());\r\n\r\n    titlePathString = helper.getCurvedTitlePathString();\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\nthis.FlowerSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = PieSliceCustomization();\r\n        custom.titleRadiusPercent = 0.5;\r\n        custom.arcBaseRadiusPercent = 0.65;\r\n        custom.arcRadiusPercent = 0.14;\r\n    }\r\n\r\n    var slicePath = PieSlice(helper, percent, custom);\r\n\r\n    return {\r\n        slicePathString: slicePath.slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: slicePath.titlePosX,\r\n        titlePosY: slicePath.titlePosY,\r\n        titlePathString: slicePath.titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.PieArrow.js\r\n\r\nthis.PieArrowSliceCustomization = function () {\r\n\r\n    var custom = new slicePathCustomization();\r\n    custom.titleRadiusPercent = 0.6;\r\n    custom.arrowRadiusPercent = 1.1;\r\n\r\n    return custom;\r\n};\r\n\r\nthis.PieArrowSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = PieArrowSliceCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(percent, custom);\r\n\r\n    r = helper.sliceRadius;\r\n    \r\n    arrowAngleStart = helper.startAngle + helper.sliceAngle * 0.45;\r\n    arrowAngleEnd = helper.startAngle + helper.sliceAngle * 0.55;\r\n\r\n    var arrowRadius = r * custom.arrowRadiusPercent;\r\n\r\n    slicePathString = [helper.MoveToCenter(),\r\n                 helper.LineTo(helper.startAngle, r),\r\n                 helper.ArcTo(r, arrowAngleStart, r),\r\n                 helper.LineTo(helper.middleAngle, arrowRadius),\r\n                 helper.LineTo(arrowAngleEnd, r),\r\n                 helper.ArcTo(r, helper.endAngle, r),\r\n                 helper.Close()];\r\n\r\n    titlePathString = helper.getCurvedTitlePathString();\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\nthis.PieArrowBasePieSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = PieArrowSliceCustomization();\r\n    }\r\n\r\n    custom.arrowRadiusPercent = 1;\r\n    var slicePath = PieArrowSlice(helper, percent, custom);\r\n\r\n    return {\r\n        slicePathString: slicePath.slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: slicePath.titlePosX,\r\n        titlePosY: slicePath.titlePosY,\r\n        titlePathString: slicePath.titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.Donut.js\r\n\r\nthis.DonutSliceCustomization = function () {\r\n\r\n    var custom = new slicePathCustomization();\r\n    custom.minRadiusPercent = 0.37;\r\n    custom.maxRadiusPercent = 0.9;\r\n\r\n    return custom;\r\n};\r\n\r\nthis.DonutSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = DonutSliceCustomization();\r\n    }\r\n\r\n    maxRadius = helper.wheelRadius * percent * custom.maxRadiusPercent;\r\n    minRadius = helper.wheelRadius * percent * custom.minRadiusPercent;\r\n\r\n    helper.setBaseValue(percent, custom);\r\n\r\n    helper.titleRadius = (maxRadius + minRadius) / 2;\r\n    helper.setTitlePos();\r\n\r\n    slicePathString = [helper.MoveTo(helper.startAngle, minRadius),\r\n                 helper.LineTo(helper.startAngle, maxRadius),\r\n                 helper.ArcTo(maxRadius, helper.middleAngle, maxRadius),\r\n                 helper.ArcTo(maxRadius, helper.endAngle, maxRadius),\r\n                 helper.LineTo(helper.endAngle, minRadius),\r\n                 helper.ArcBackTo(minRadius, helper.middleAngle, minRadius),\r\n                 helper.ArcBackTo(minRadius, helper.startAngle, minRadius),\r\n                 helper.Close()];\r\n\r\n    titlePathString = helper.getCurvedTitlePathString();\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.Cog.js\r\n\r\nthis.CogSliceCustomization = function () {\r\n\r\n    var custom = new slicePathCustomization();\r\n    custom.titleRadiusPercent = 0.55;\r\n    custom.isBasePieSlice = false;\r\n\r\n    return custom;\r\n};\r\n\r\nthis.CogSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = CogSliceCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(percent, custom);\r\n\r\n    r = helper.sliceRadius;\r\n    rbase = helper.wheelRadius * percent * 0.83;\r\n\r\n    percentAngle0625 = helper.startAngle + helper.sliceAngle * 0.0625;\r\n    percentAngle1250 = helper.startAngle + helper.sliceAngle * 0.125;\r\n    percentAngle1875 = helper.startAngle + helper.sliceAngle * 0.1875;\r\n    percentAngle2500 = helper.startAngle + helper.sliceAngle * 0.25;\r\n    percentAngle3125 = helper.startAngle + helper.sliceAngle * 0.3125;\r\n    percentAngle3750 = helper.startAngle + helper.sliceAngle * 0.375;\r\n    percentAngle4375 = helper.startAngle + helper.sliceAngle * 0.4375;\r\n    percentAngle5000 = helper.startAngle + helper.sliceAngle * 0.5;\r\n    percentAngle5625 = helper.startAngle + helper.sliceAngle * 0.5625;\r\n    percentAngle6250 = helper.startAngle + helper.sliceAngle * 0.625;\r\n    percentAngle6875 = helper.startAngle + helper.sliceAngle * 0.6875;\r\n    percentAngle7500 = helper.startAngle + helper.sliceAngle * 0.75;\r\n    percentAngle8125 = helper.startAngle + helper.sliceAngle * 0.8125;\r\n    percentAngle8750 = helper.startAngle + helper.sliceAngle * 0.875;\r\n    percentAngle9375 = helper.startAngle + helper.sliceAngle * 0.9375;\r\n    percentAngle9687 = helper.startAngle + helper.sliceAngle * 0.96875;\r\n\r\n    if (custom.isBasePieSlice) {\r\n        r = rbase;\r\n        slicePathString = [helper.MoveToCenter(),\r\n            helper.LineTo(helper.startAngle, r),\r\n            helper.ArcTo(r, percentAngle0625, r),\r\n            helper.ArcTo(r, percentAngle1250, r),\r\n            helper.ArcTo(r, percentAngle1875, r),\r\n            helper.ArcTo(r, percentAngle2500, r),\r\n            helper.ArcTo(r, percentAngle3125, r),\r\n            helper.ArcTo(r, percentAngle3750, r),\r\n            helper.ArcTo(r, percentAngle4375, r),\r\n            helper.ArcTo(r, percentAngle5000, r),\r\n            helper.ArcTo(r, percentAngle5625, r),\r\n            helper.ArcTo(r, percentAngle6250, r),\r\n            helper.ArcTo(r, percentAngle6875, r),\r\n            helper.ArcTo(r, percentAngle7500, r),\r\n            helper.ArcTo(r, percentAngle8125, r),\r\n            helper.ArcTo(r, percentAngle8750, r),\r\n            helper.ArcTo(r, percentAngle9375, r),\r\n            helper.ArcTo(r, percentAngle9687, r),\r\n            helper.ArcTo(r, helper.endAngle, r),\r\n            helper.Close()];\r\n    }\r\n    else {\r\n        slicePathString = [helper.MoveToCenter(),\r\n            helper.LineTo(helper.startAngle, r),\r\n            helper.ArcTo(r, percentAngle0625, r),\r\n            helper.LineTo(percentAngle0625, rbase),\r\n            helper.ArcTo(rbase, percentAngle1875, rbase),\r\n            helper.LineTo(percentAngle1875, r),\r\n            helper.ArcTo(r, percentAngle3125, r),\r\n            helper.LineTo(percentAngle3125, rbase),\r\n            helper.ArcTo(rbase, percentAngle4375, rbase),\r\n            helper.LineTo(percentAngle4375, r),\r\n            helper.ArcTo(r, percentAngle5625, r),\r\n            helper.LineTo(percentAngle5625, rbase),\r\n            helper.ArcTo(rbase, percentAngle6875, rbase),\r\n            helper.LineTo(percentAngle6875, r),\r\n            helper.ArcTo(r, percentAngle8125, r),\r\n            helper.LineTo(percentAngle8125, rbase),\r\n            helper.ArcTo(rbase, percentAngle9375, rbase),\r\n            helper.LineTo(percentAngle9375, r),\r\n            helper.ArcTo(r, helper.endAngle, r),\r\n            helper.Close()];\r\n    }\r\n\r\n    titlePathString = helper.getCurvedTitlePathString();\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\nthis.CogBasePieSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = CogSliceCustomization();\r\n    }\r\n\r\n    custom.isBasePieSlice = true;\r\n\r\n    var slicePath = CogSlice(helper, percent, custom);\r\n\r\n    return {\r\n        slicePathString: slicePath.slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: slicePath.titlePosX,\r\n        titlePosY: slicePath.titlePosY,\r\n        titlePathString: slicePath.titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.Star.js\r\n\r\nthis.StarSliceCustomization = function () {\r\n\r\n    var custom = new slicePathCustomization();\r\n    custom.titleRadiusPercent = 0.44;\r\n    custom.minRadiusPercent = 0.5;\r\n    custom.isBasePieSlice = false;\r\n\r\n    return custom;\r\n};\r\n\r\nthis.StarSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = StarSliceCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(percent, custom);\r\n\r\n    r = helper.wheelRadius * percent;\r\n    rbase = r * custom.minRadiusPercent;\r\n\r\n    if (custom.isBasePieSlice) {\r\n        r = helper.sliceRadius;\r\n        slicePathString = [helper.MoveToCenter(),\r\n                 helper.LineTo(helper.startAngle, r),\r\n                 helper.ArcTo(r, helper.middleAngle, r),\r\n                 helper.ArcTo(r, helper.endAngle, r),\r\n                 helper.Close()];\r\n    }\r\n    else {\r\n        slicePathString = [helper.MoveToCenter(),\r\n                     helper.LineTo(helper.startAngle, rbase),\r\n                     helper.LineTo(helper.middleAngle, r),\r\n                     helper.LineTo(helper.endAngle, rbase),\r\n                     helper.Close()];\r\n    }\r\n\r\n    titlePathString = helper.getCurvedTitlePathString();\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\nthis.StarBasePieSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = StarSliceCustomization();\r\n    }\r\n\r\n    custom.titleRadiusPercent = 0.6;\r\n    custom.isBasePieSlice = true;\r\n\r\n    var slicePath = StarSlice(helper, percent, custom);\r\n\r\n    return {\r\n        slicePathString: slicePath.slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: slicePath.titlePosX,\r\n        titlePosY: slicePath.titlePosY,\r\n        titlePathString: slicePath.titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.Menu.js\r\n\r\nthis.MenuSliceCustomization = function () {\r\n\r\n    var custom = new slicePathCustomization();\r\n    custom.menuRadius = 35;\r\n    custom.titleRadiusPercent = 0.63;\r\n    custom.isSelectedLine = false;\r\n    custom.lineBaseRadiusPercent = 0;\r\n\r\n    return custom;\r\n};\r\n\r\nthis.MenuSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = MenuSliceCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(percent, custom);\r\n    x = helper.centerX;\r\n    y = helper.centerY;\r\n\r\n    var r = helper.wheelRadius * percent;\r\n    helper.titleRadius = r * custom.titleRadiusPercent;\r\n    helper.setTitlePos();\r\n\r\n    var menuRadius = percent * custom.menuRadius;\r\n\r\n    if (percent <= 0.05) { menuRadius = 10; }\r\n\r\n    middleTheta = helper.middleTheta;\r\n\r\n    slicePathString = [[\"M\", helper.titlePosX - (menuRadius * Math.cos(middleTheta)), helper.titlePosY - (menuRadius * Math.sin(middleTheta))],\r\n                [\"A\", menuRadius, menuRadius, 0, 0, 1, helper.titlePosX + (menuRadius * Math.cos(middleTheta)), helper.titlePosY + (menuRadius * Math.sin(middleTheta))],\r\n                [\"A\", menuRadius, menuRadius, 0, 0, 1, helper.titlePosX - (menuRadius * Math.cos(middleTheta)), helper.titlePosY - (menuRadius * Math.sin(middleTheta))],\r\n                [\"z\"]];\r\n\r\n    if (percent <= 0.05) {\r\n        linePathString = [[\"M\", x, y],\r\n                [\"A\", 1, 1, 0, 0, 1, x + 1, y + 1]];\r\n    }\r\n    else {\r\n        if (!custom.isSelectedLine) {\r\n            linePathString = [helper.MoveTo(helper.middleAngle, custom.lineBaseRadiusPercent * r),\r\n                              helper.ArcTo(r / 2, helper.middleAngle, helper.titleRadius - menuRadius)];\r\n        }\r\n        else {\r\n            linePathString = [helper.MoveTo(helper.middleAngle, custom.lineBaseRadiusPercent * r),\r\n                              helper.ArcTo(r / 3, helper.middleAngle, helper.titleRadius - menuRadius)];\r\n        }\r\n    }\r\n\r\n    titlePathString = helper.getCurvedTitlePathString();\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: linePathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\nthis.MenuSliceSelectedLine = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = MenuSliceCustomization();\r\n    }\r\n\r\n    custom.isSelectedLine = true;\r\n\r\n    var slicePath = MenuSlice(helper, percent, custom);\r\n\r\n    return {\r\n        slicePathString: slicePath.slicePathString,\r\n        linePathString: slicePath.linePathString,\r\n        titlePosX: slicePath.titlePosX,\r\n        titlePosY: slicePath.titlePosY,\r\n        titlePathString: slicePath.titlePathString\r\n    };\r\n};\r\n\r\nthis.MenuSliceWithoutLine = function (helper, percent, custom) {\r\n\r\n    var slicePath = MenuSlice(helper, percent, custom);\r\n\r\n    return {\r\n        slicePathString: slicePath.slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: slicePath.titlePosX,\r\n        titlePosY: slicePath.titlePosY,\r\n        titlePathString: slicePath.titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.Line.js\r\n\r\nthis.LineSlice = function (helper, percent, custom) {\r\n\r\n    helper.setBaseValue(percent, custom);\r\n\r\n    r = helper.sliceRadius;\r\n\r\n    if (helper.sliceAngle > 60 &&\r\n        helper.sliceAngle < 180) {\r\n        helper.titleRadius = r * ((180 / helper.sliceAngle) / 5);\r\n        helper.setTitlePos();\r\n    }\r\n    else {\r\n        helper.titleRadius = r * 0.55;\r\n        helper.setTitlePos();\r\n    }\r\n\r\n    if (helper.sliceAngle < 180) {\r\n        slicePathString = [helper.MoveToCenter(),\r\n                 helper.LineTo(helper.startAngle, r),\r\n                 helper.LineTo(helper.endAngle, r),\r\n                 helper.Close()];\r\n    }\r\n    else {\r\n        if (helper.startAngle === 180 ||\r\n            helper.startAngle === 0 ||\r\n            helper.startAngle === -180 ||\r\n            helper.startAngle === 360) {\r\n            slicePathString = [helper.MoveToCenter(),\r\n                 helper.LineTo(helper.startAngle, r),\r\n                 helper.LineTo(helper.startAngle, r, helper.middleAngle, r),\r\n                 helper.LineTo(helper.endAngle, r, helper.middleAngle, r),\r\n                 helper.LineTo(helper.endAngle, r),\r\n                 helper.Close()];\r\n        }\r\n        else {\r\n            slicePathString = [helper.MoveToCenter(),\r\n             helper.LineTo(helper.startAngle, r),\r\n             helper.LineTo(helper.middleAngle, r, helper.startAngle, r),\r\n             helper.LineTo(helper.middleAngle, r, helper.endAngle, r),\r\n             helper.LineTo(helper.endAngle, r),\r\n             helper.Close()];\r\n        }\r\n    }\r\n\r\n    titlePathString = helper.getCurvedTitlePathString();\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.Eye.js\r\n\r\nthis.EyeSliceCustomization = function () {\r\n\r\n    var custom = new slicePathCustomization();\r\n    custom.titleRadiusPercent = 0.68;\r\n\r\n    return custom;\r\n};\r\n\r\nthis.EyeSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = EyeSliceCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(percent, custom);\r\n\r\n    r = helper.wheelRadius * percent * 0.7;\r\n\r\n    if (percent === 0) {\r\n        r = 0.01;\r\n    }\r\n\r\n    startAngle = helper.startAngle;\r\n    endAngle = helper.endAngle;\r\n\r\n    if (helper.sliceAngle === 180) {\r\n        startAngle = helper.startAngle + helper.sliceAngle / 4;\r\n        endAngle = helper.startAngle + helper.sliceAngle - helper.sliceAngle / 4;\r\n    }\r\n\r\n    slicePathString = [helper.MoveTo(endAngle, r),\r\n                 helper.ArcTo(r, startAngle, r),\r\n                 helper.ArcTo(r, endAngle, r),\r\n                 helper.Close()];\r\n\r\n    titlePathString = helper.getCurvedTitlePathString();\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.Wheel.js\r\n\r\nthis.WheelSlice = function (helper, percent, custom) {\r\n\r\n    helper.setBaseValue(percent, custom);\r\n    x = helper.centerX;\r\n    y = helper.centerY;\r\n\r\n    r = helper.sliceRadius;\r\n\r\n    startTheta = helper.startTheta;\r\n    middleTheta = helper.middleTheta;\r\n    endTheta = helper.endTheta;\r\n\r\n    var innerRadiusPercent;\r\n    var startendRadiusPercent;\r\n\r\n    if (helper.sliceAngle < 120) {\r\n        helper.titleRadius = r * 0.57;\r\n        innerRadiusPercent = 0.9;\r\n        middleRadiusPercent = 0.87;\r\n        startendRadiusPercent = 0.87;\r\n    }\r\n    else if (helper.sliceAngle < 180) {\r\n        helper.titleRadius = r * 0.52;\r\n        innerRadiusPercent = 0.91;\r\n        middleRadiusPercent = 0.87;\r\n        startendRadiusPercent = 0.87;\r\n    }\r\n    else {\r\n        helper.titleRadius = r * 0.45;\r\n        innerRadiusPercent = 0.873;\r\n        middleRadiusPercent = 0.87;\r\n        startendRadiusPercent = 0.94;\r\n    }\r\n\r\n    slicePathString = [helper.MoveTo(helper.middleAngle, r * 0.07),\r\n                 [\"L\", (r * 0.07) * Math.cos(middleTheta) + (r * startendRadiusPercent) * Math.cos(startTheta) + x, (r * 0.07) * Math.sin(middleTheta) + (r * startendRadiusPercent) * Math.sin(startTheta) + y],\r\n                 [\"A\", (r * innerRadiusPercent), (r * innerRadiusPercent), 0, 0, 1, (r * 0.07) * Math.cos(middleTheta) + (r * middleRadiusPercent) * Math.cos(middleTheta) + x, (r * 0.07) * Math.sin(middleTheta) + (r * middleRadiusPercent) * Math.sin(middleTheta) + y],\r\n                 [\"A\", (r * innerRadiusPercent), (r * innerRadiusPercent), 0, 0, 1, (r * 0.07) * Math.cos(middleTheta) + (r * startendRadiusPercent) * Math.cos(endTheta) + x, (r * 0.07) * Math.sin(middleTheta) + (r * startendRadiusPercent) * Math.sin(endTheta) + y],\r\n                 helper.Close()];\r\n\r\n    linePathString = [helper.MoveTo(helper.startAngle, r),\r\n                 helper.ArcTo(r, helper.middleAngle, r),\r\n                 helper.ArcTo(r, helper.endAngle, r),\r\n                 helper.ArcBackTo(r, helper.middleAngle, r),\r\n                 helper.ArcBackTo(r, helper.startAngle, r)];\r\n\r\n    helper.setTitlePos();\r\n\r\n    titlePathString = helper.getCurvedTitlePathString();\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: linePathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.OuterStroke.js\r\n\r\nthis.OuterStrokeSlice = function (helper, percent, custom) {\r\n\r\n    helper.setBaseValue(percent, custom);\r\n    x = helper.centerX;\r\n    y = helper.centerY;\r\n\r\n    r = helper.sliceRadius;\r\n    innerRadius = r / 4;\r\n\r\n    if (helper.sliceAngle < 120) { helper.titleRadius = r * 0.57; }\r\n    else if (helper.sliceAngle < 180) { helper.titleRadius = r * 0.52; }\r\n    else { helper.titleRadius = r * 0.45; }\r\n\r\n    linePathString = [helper.MoveTo(helper.startAngle, innerRadius),\r\n                 helper.LineTo(helper.startAngle, r),\r\n                 helper.MoveTo(helper.endAngle, innerRadius),\r\n                 helper.LineTo(helper.endAngle, r)];\r\n\r\n    slicePathString = [helper.MoveTo(helper.startAngle, r),\r\n                 helper.ArcTo(r, helper.middleAngle, r),\r\n                 helper.ArcTo(r, helper.endAngle, r),\r\n                 helper.ArcBackTo(r, helper.middleAngle, r),\r\n                 helper.ArcBackTo(r, helper.startAngle, r),\r\n                 helper.MoveTo(helper.startAngle, innerRadius),\r\n                 helper.ArcTo(innerRadius, helper.middleAngle, innerRadius),\r\n                 helper.ArcTo(innerRadius, helper.endAngle, innerRadius),\r\n                 helper.ArcBackTo(innerRadius, helper.middleAngle, innerRadius),\r\n                 helper.ArcBackTo(innerRadius, helper.startAngle, innerRadius)];\r\n\r\n    helper.setTitlePos();\r\n\r\n    titlePathString = helper.getCurvedTitlePathString();\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: linePathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.Tab.js\r\n\r\nthis.TabSlice = function (helper, percent, custom) {\r\n\r\n    var rOriginal = helper.wheelRadius * 0.9;\r\n    var navItemCount = 360 / helper.sliceAngle;\r\n    var itemSize = 2 * rOriginal / navItemCount;\r\n\r\n    x = helper.centerX;\r\n    y = helper.centerY;\r\n    itemIndex = helper.itemIndex;\r\n\r\n    titlePosX = x;\r\n    titlePosY = itemIndex * itemSize + y + (itemSize / 2) - rOriginal;\r\n\r\n    slicePathString = [];\r\n    slicePathString.push(helper.MoveToXY(x - (itemSize / 2), itemIndex * itemSize + y - rOriginal));\r\n    slicePathString.push(helper.LineToXY((itemSize / 2) + x, itemIndex * itemSize + y - rOriginal));\r\n    slicePathString.push(helper.LineToXY((itemSize / 2) + x, (itemIndex + 1) * itemSize + y - rOriginal));\r\n    slicePathString.push(helper.LineToXY(x - (itemSize / 2), (itemIndex + 1) * itemSize + y - rOriginal));\r\n    slicePathString.push(helper.Close());\r\n\r\n    titlePathString = [];\r\n    titlePathString.push(helper.MoveToXY(x - (itemSize / 2), (itemIndex + 1) * itemSize + y - rOriginal));\r\n    titlePathString.push(helper.ArcToXY(itemSize * 2, (itemSize / 2) + x, itemIndex * itemSize + y - rOriginal));\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: \"\",\r\n        titlePosX: titlePosX,\r\n        titlePosY: titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.YinYang.js\r\n\r\nthis.YinYangSlice = function (helper, percent, custom) {\r\n\r\n    helper.setBaseValue(percent, custom);\r\n\r\n    r = helper.sliceRadius;\r\n\r\n    slicePathString = [helper.MoveToCenter(),\r\n                 helper.ArcTo(r / 2, helper.startAngle, r),\r\n                 helper.ArcTo(r, helper.middleAngle, r),\r\n                 helper.ArcTo(r, helper.endAngle, r),\r\n                 helper.ArcBackTo(r / 2, 0, 0),\r\n                 helper.Close()];\r\n\r\n    titlePosX = helper.getX(helper.startAngle, r / 2);\r\n    titlePosY = helper.getY(helper.startAngle, r / 2);\r\n\r\n    titlePathString = [helper.MoveToCenter(),\r\n                 helper.ArcTo(r / 4, helper.startAngle + helper.sliceAngle * 0.2, r * 0.8)];\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: slicePathString,\r\n        titlePosX: titlePosX,\r\n        titlePosY: titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.Web.js\r\n\r\nthis.WebSlice = function (helper, percent, custom) {\r\n\r\n    helper.setBaseValue(percent, custom);\r\n\r\n    r = helper.sliceRadius;\r\n\r\n    helper.titleRadius = r * 0.55;\r\n    helper.setTitlePos();\r\n\r\n    linePathString = [helper.MoveToCenter(),\r\n                 helper.LineTo(helper.startAngle, r * 1.1),\r\n                 helper.MoveToCenter(),\r\n                 helper.LineTo(helper.endAngle, r * 1.1),\r\n                 helper.MoveTo(helper.startAngle, r * 0.15),\r\n                 helper.LineTo(helper.endAngle, r * 0.15),\r\n                 helper.MoveTo(helper.startAngle, r * 0.35),\r\n                 helper.LineTo(helper.endAngle, r * 0.35),\r\n                 helper.MoveTo(helper.startAngle, r * 0.55),\r\n                 helper.LineTo(helper.endAngle, r * 0.55),\r\n                 helper.MoveTo(helper.startAngle, r * 0.75),\r\n                 helper.LineTo(helper.endAngle, r * 0.75),\r\n                 helper.MoveTo(helper.startAngle, r * 0.95),\r\n                 helper.LineTo(helper.endAngle, r * 0.95),\r\n                 helper.Close()];\r\n\r\n    titlePathString = helper.getCurvedTitlePathString();\r\n\r\n    return {\r\n        slicePathString: \"\",\r\n        linePathString: linePathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.Winter.js\r\n\r\nthis.WinterSliceCustomization = function () {\r\n\r\n    var custom = new slicePathCustomization();\r\n    custom.titleRadiusPercent = 0.85;\r\n    custom.arcRadiusPercent = 1;\r\n    return custom;\r\n};\r\n\r\nthis.WinterSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = WinterSliceCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(percent, custom);\r\n\r\n    sliceAngle = helper.sliceAngle;\r\n\r\n    parallelAngle = helper.startAngle + sliceAngle / 4;\r\n    parallelAngle2 = helper.startAngle + ((sliceAngle / 4) * 3);\r\n    borderAngle1 = helper.startAngle + (sliceAngle / 200);\r\n    borderAngle2 = helper.startAngle + (sliceAngle / 2) - (sliceAngle / 200);\r\n    borderAngle3 = helper.startAngle + (sliceAngle / 2) + (sliceAngle / 200);\r\n    borderAngle4 = helper.startAngle + sliceAngle - (sliceAngle / 200);\r\n\r\n    var arcRadius = helper.sliceRadius * custom.arcRadiusPercent;\r\n\r\n    slicePathString = [helper.MoveToCenter(),\r\n                 helper.MoveTo(parallelAngle, arcRadius / 100),\r\n                 helper.LineTo(borderAngle1, arcRadius / 2),\r\n                 helper.LineTo(parallelAngle, arcRadius - (arcRadius / 100)),\r\n                 helper.LineTo(borderAngle2, arcRadius / 2),\r\n                 helper.LineTo(parallelAngle, arcRadius / 100),\r\n                 helper.MoveTo(parallelAngle2, arcRadius / 100),\r\n                 helper.LineTo(borderAngle4, arcRadius / 2),\r\n                 helper.LineTo(parallelAngle2, arcRadius - (arcRadius / 100)),\r\n                 helper.LineTo(borderAngle3, arcRadius / 2),\r\n                 helper.LineTo(parallelAngle2, arcRadius / 100),\r\n                 helper.Close()];\r\n\r\n    linePathString = [helper.MoveTo(parallelAngle, arcRadius),\r\n                 helper.LineTo(borderAngle2, arcRadius / 2),\r\n                 helper.MoveTo(borderAngle3, arcRadius / 2),\r\n                 helper.LineTo(parallelAngle2, arcRadius)];\r\n\r\n    titlePathString = helper.getCurvedTitlePathString();\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: linePathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePath.Tutorial.js\r\n\r\nthis.TutorialSliceCustomization = function () {\r\n\r\n    var custom = new slicePathCustomization();\r\n    custom.titleRadiusPercent = 0.6;\r\n    custom.isMoveTo = false;\r\n    custom.isLineTo = false;\r\n    custom.isArcTo = false;\r\n    custom.isArcBackTo = false;\r\n    return custom;\r\n};\r\n\r\nthis.TutorialSlice = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = TutorialSliceCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(percent, custom);\r\n\r\n    slicePathString = [];\r\n    titlePathString = [];\r\n\r\n    slicePathString.push(helper.MoveToCenter());\r\n    titlePathRadius1 = helper.titleRadius;\r\n    titlePathRadius2 = helper.titleRadius;\r\n    titlePathEndangle = helper.startAngle;\r\n    titlePathStartRadius = 0;\r\n\r\n    if (custom.isMoveTo === true) {\r\n        slicePathString.push(helper.MoveTo(helper.middleAngle, helper.sliceRadius / 4));\r\n        titlePathRadius1 *= 1.05;\r\n        titlePathRadius2 *= 0.95;\r\n        titlePathStartRadius += helper.sliceRadius / 16;\r\n        titlePathEndangle = helper.startAngle + (helper.sliceAngle / 8);\r\n    }\r\n    if (custom.isLineTo) {\r\n        slicePathString.push(helper.LineTo(helper.startAngle, helper.sliceRadius));\r\n        titlePathRadius1 *= 1.1;\r\n        titlePathRadius2 *= 0.9;\r\n        titlePathStartRadius += helper.sliceRadius / 16;\r\n        titlePathEndangle = helper.startAngle + (helper.sliceAngle / 4);\r\n    }\r\n    if (custom.isArcTo) {\r\n        slicePathString.push(helper.ArcTo(helper.sliceRadius, helper.middleAngle, helper.sliceRadius));\r\n        titlePathRadius1 *= 1.2;\r\n        titlePathRadius2 *= 0.8;\r\n        titlePathStartRadius += helper.sliceRadius / 8;\r\n        titlePathEndangle = helper.middleAngle - (helper.sliceAngle / 8);\r\n    }\r\n    if (custom.isArcBackTo) {\r\n        slicePathString.push(helper.ArcBackTo(helper.sliceRadius, helper.endAngle, helper.sliceRadius));\r\n        titlePathRadius1 *= 1.3;\r\n        titlePathRadius2 *= 0.7;\r\n        titlePathStartRadius += helper.sliceRadius / 8;\r\n        titlePathEndangle = helper.endAngle;\r\n    }\r\n    slicePathString.push(helper.Close());\r\n\r\n    titlePathString.push(helper.MoveTo(helper.startAngle, titlePathStartRadius));\r\n    titlePathString.push(helper.CubicBezierTo(helper.middleAngle - (helper.sliceAngle / 8), titlePathRadius1, helper.middleAngle + (helper.sliceAngle / 8), titlePathRadius2, titlePathEndangle, helper.sliceRadius));\r\n\r\n    linePathString = [helper.MoveToCenter(),\r\n                 helper.LineTo(helper.startAngle, helper.sliceRadius),\r\n                 helper.ArcTo(helper.sliceRadius, helper.middleAngle, helper.sliceRadius),\r\n                 helper.ArcTo(helper.sliceRadius, helper.endAngle, helper.sliceRadius),\r\n                 helper.Close()];\r\n\r\n    return {\r\n        slicePathString: slicePathString,\r\n        linePathString: linePathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY,\r\n        titlePathString: titlePathString\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/slicePath/wheelnav.slicePathEnd.js\r\n\r\n    return this;\r\n};\r\n\r\n\r\n\r\n","/* ======================================================================================== */\r\n/* Slice transform definitions                                                              */\r\n/* ======================================================================================== */\r\n/* ======================================================================================== */\r\n/* Documentation: http://wheelnavjs.softwaretailoring.net/documentation/sliceTransform.html */\r\n/* ======================================================================================== */\r\n\r\n\r\nvar sliceTransform = function () {\r\n\r\n    this.startAngle = 0;\r\n    this.startTheta = 0;\r\n    this.middleTheta = 0;\r\n    this.endTheta = 0;\r\n\r\n    var setBaseValue = function (x, y, rOriginal, baseAngle, sliceAngle, titleRotateAngle, itemIndex, custom) {\r\n        this.startAngle = baseAngle;\r\n        this.startTheta = getTheta(startAngle);\r\n        this.middleTheta = getTheta(startAngle + sliceAngle / 2);\r\n        this.endTheta = getTheta(startAngle + sliceAngle);\r\n    };\r\n\r\n    var getTheta = function (angle) {\r\n        return (angle % 360) * Math.PI / 180;\r\n    };\r\n\r\n    this.NullTransform = function (x, y, rOriginal, baseAngle, sliceAngle, titleRotateAngle, itemIndex, custom) {\r\n        return {\r\n            sliceTransformString: \"\",\r\n            lineTransformString: \"\",\r\n            titleTransformString: \"\"\r\n        };\r\n    };\r\n\r\n    this.MoveMiddleTransform = function (x, y, rOriginal, baseAngle, sliceAngle, titleRotateAngle, itemIndex, custom) {\r\n\r\n        setBaseValue(x, y, rOriginal, baseAngle, sliceAngle, titleRotateAngle, itemIndex);\r\n        var sliceTransformString = \"t\" + (rOriginal / 10 * Math.cos(middleTheta)).toString() + \",\" + (rOriginal / 10 * Math.sin(middleTheta)).toString();\r\n\r\n        var baseTheta;\r\n        if (titleRotateAngle !== null) {\r\n            baseTheta = getTheta(-titleRotateAngle);\r\n        }\r\n        else {\r\n            var wheelBaseAngle = baseAngle - (itemIndex * sliceAngle);\r\n            baseTheta = getTheta(wheelBaseAngle + sliceAngle / 2);\r\n        }\r\n\r\n        var titleTransformString = \"s1,r0,t\" + (rOriginal / 10 * Math.cos(baseTheta)).toString() + \",\" + (rOriginal / 10 * Math.sin(baseTheta)).toString();\r\n\r\n        return {\r\n            sliceTransformString: sliceTransformString,\r\n            lineTransformString: sliceTransformString,\r\n            titleTransformString: titleTransformString\r\n        };\r\n    };\r\n\r\n    this.RotateTransform = function (x, y, rOriginal, baseAngle, sliceAngle, titleRotateAngle, itemIndex, custom) {\r\n\r\n        var sliceTransformString = \"s1,r360\";\r\n\r\n        return {\r\n            sliceTransformString: sliceTransformString,\r\n            lineTransformString: sliceTransformString,\r\n            titleTransformString: sliceTransformString\r\n        };\r\n    };\r\n\r\n    this.RotateHalfTransform = function (x, y, rOriginal, baseAngle, sliceAngle, titleRotateAngle, itemIndex, custom) {\r\n\r\n        var sliceTransformString = \"s1,r90\";\r\n\r\n        return {\r\n            sliceTransformString: sliceTransformString,\r\n            lineTransformString: sliceTransformString,\r\n            titleTransformString: sliceTransformString\r\n        };\r\n    };\r\n\r\n    this.RotateTitleTransform = function (x, y, rOriginal, baseAngle, sliceAngle, titleRotateAngle, itemIndex, custom) {\r\n\r\n        var titleTransformString = \"s1,r360\";\r\n\r\n        return {\r\n            sliceTransformString: \"\",\r\n            lineTransformString: \"\",\r\n            titleTransformString: titleTransformString\r\n        };\r\n    };\r\n\r\n    this.ScaleTransform = function (x, y, rOriginal, baseAngle, sliceAngle, titleRotateAngle, itemIndex, custom) {\r\n\r\n        var sliceTransformString = \"s1.2\";\r\n\r\n        return {\r\n            sliceTransformString: sliceTransformString,\r\n            lineTransformString: \"\",\r\n            titleTransformString: sliceTransformString\r\n        };\r\n    };\r\n\r\n    this.ScaleTitleTransform = function (x, y, rOriginal, baseAngle, sliceAngle, titleRotateAngle, itemIndex, custom) {\r\n\r\n        return {\r\n            sliceTransformString: \"\",\r\n            lineTransformString: \"\",\r\n            titleTransformString: \"s1.3\"\r\n        };\r\n    };\r\n\r\n    this.RotateScaleTransform = function (x, y, rOriginal, baseAngle, sliceAngle, titleRotateAngle, itemIndex, custom) {\r\n\r\n        var sliceTransformString = \"r360,s1.3\";\r\n\r\n        return {\r\n            sliceTransformString: sliceTransformString,\r\n            lineTransformString: \"\",\r\n            titleTransformString: sliceTransformString\r\n        };\r\n    };\r\n\r\n    this.CustomTransform = function (x, y, rOriginal, baseAngle, sliceAngle, titleRotateAngle, itemIndex, custom) {\r\n\r\n        var sliceTransformString = custom.scaleString + \",\" + custom.rotateString;\r\n\r\n        return {\r\n            sliceTransformString: sliceTransformString,\r\n            lineTransformString: sliceTransformString,\r\n            titleTransformString: sliceTransformString\r\n        };\r\n    };\r\n\r\n    this.CustomTitleTransform = function (x, y, rOriginal, baseAngle, sliceAngle, titleRotateAngle, itemIndex, custom) {\r\n\r\n        var titleTransformString = custom.scaleString + \",\" + custom.rotateString;\r\n\r\n        return {\r\n            sliceTransformString: \"\",\r\n            lineTransformString: \"\",\r\n            titleTransformString: titleTransformString\r\n        };\r\n    };\r\n\r\n    return this;\r\n};\r\n\r\n/* Custom properties\r\n    - scaleString\r\n    - rotateString\r\n*/\r\nvar sliceTransformCustomization = function () {\r\n\r\n    this.scaleString = \"s1\";\r\n    this.rotateString = \"r0\";\r\n\r\n    return this;\r\n};\r\n\r\n\r\n\r\n","///#source 1 1 /js/source/spreader/wheelnav.spreader.core.js\r\n/* ======================================================================================= */\r\n/* Spreader of wheel                                                                       */\r\n/* ======================================================================================= */\r\n/* ======================================================================================= */\r\n/* Documentation: http://wheelnavjs.softwaretailoring.net/documentation/spreader.html      */\r\n/* ======================================================================================= */\r\n\r\nspreader = function (wheelnav) {\r\n\r\n    this.wheelnav = wheelnav;\r\n    if (this.wheelnav.spreaderEnable) {\r\n\r\n        this.spreaderHelper = new pathHelper();\r\n        this.spreaderHelper.centerX = this.wheelnav.centerX;\r\n        this.spreaderHelper.centerY = this.wheelnav.centerY;\r\n        this.spreaderHelper.navItemCount = this.wheelnav.navItemCount;\r\n        this.spreaderHelper.navAngle = this.wheelnav.navAngle;\r\n        this.spreaderHelper.wheelRadius = this.wheelnav.spreaderRadius;\r\n        this.spreaderHelper.startAngle = this.wheelnav.spreaderStartAngle;\r\n        this.spreaderHelper.sliceAngle = this.wheelnav.spreaderSliceAngle;\r\n\r\n        var thisWheelNav = this.wheelnav;\r\n        this.animateeffect = \"bounce\";\r\n        this.animatetime = 1500;\r\n        //Set animation from wheelnav\r\n        if (this.wheelnav.animateeffect !== null) { this.animateeffect = this.wheelnav.animateeffect; }\r\n        if (this.wheelnav.animatetime !== null) { this.animatetime = this.wheelnav.animatetime; }\r\n\r\n        if (this.wheelnav.spreaderTitleFont !== null) { this.fontAttr = { font: this.wheelnav.spreaderTitleFont }; }\r\n        else { this.fontAttr = { font: '100 32px Impact, Charcoal, sans-serif' }; }\r\n\r\n        this.spreaderPathIn = this.wheelnav.spreaderPathFunction(this.spreaderHelper, this.wheelnav.spreaderInPercent, this.wheelnav.spreaderPathCustom);\r\n        this.spreaderPathOut = this.wheelnav.spreaderPathFunction(this.spreaderHelper, this.wheelnav.spreaderOutPercent, this.wheelnav.spreaderPathCustom);\r\n\r\n        var currentPath = this.spreaderPathOut;\r\n        if (thisWheelNav.initPercent < thisWheelNav.maxPercent) {\r\n            currentPath = this.spreaderPathIn;\r\n        }\r\n\r\n        this.spreaderPath = this.wheelnav.raphael.path(currentPath.spreaderPathString);\r\n        this.spreaderPath.attr(thisWheelNav.spreaderPathAttr);\r\n        this.spreaderPath.id = thisWheelNav.getSpreaderId();\r\n        this.spreaderPath.node.id = this.spreaderPath.id;\r\n        this.spreaderPath.click(function () {\r\n            thisWheelNav.spreadWheel();\r\n        });\r\n\r\n        //Set titles\r\n        this.inTitleWidth = this.wheelnav.spreaderInTitleWidth;\r\n        this.inTitleHeight = this.wheelnav.spreaderInTitleHeight;\r\n        this.outTitleWidth = this.wheelnav.spreaderOutTitleWidth;\r\n        this.outTitleHeight = this.wheelnav.spreaderOutTitleHeight;\r\n\r\n        if (this.inTitleWidth !== null && this.inTitleHeight === null) { this.inTitleHeight = this.inTitleWidth; }\r\n        if (this.inTitleWidth === null && this.inTitleHeight !== null) { this.inTitleWidth = this.inTitleHeight; }\r\n        if (this.outTitleWidth !== null && this.outTitleHeight === null) { this.outTitleHeight = this.outTitleWidth; }\r\n        if (this.outTitleWidth === null && this.outTitleHeight !== null) { this.outTitleWidth = this.outTitleHeight; }\r\n\r\n        if (wheelnavTitle().isImageTitle(this.wheelnav.spreaderOutTitle)) {\r\n            // Image default value\r\n            if (this.inTitleWidth === null) { this.inTitleWidth = 32; }\r\n            if (this.inTitleHeight === null) { this.inTitleHeight = 32; }\r\n            if (this.outTitleWidth === null) { this.outTitleWidth = 32; }\r\n            if (this.outTitleHeight === null) { this.outTitleHeight = 32; }\r\n        }\r\n\r\n        if (wheelnavTitle().isPathTitle(this.wheelnav.spreaderInTitle)) {\r\n            inTitle = new wheelnavTitle(this.wheelnav.spreaderInTitle, this.wheelnav.raphael.raphael);\r\n        }\r\n        else {\r\n            inTitle = new wheelnavTitle(this.wheelnav.spreaderInTitle);\r\n        }\r\n        this.inTitleSizeTransform = inTitle.getTitleSizeTransform(this.inTitleWidth, this.inTitleHeight);\r\n        this.inTitle = inTitle.getTitlePercentAttr(this.spreaderPathIn.titlePosX, this.spreaderPathIn.titlePosY, this.inTitleWidth, this.inTitleHeight);\r\n\r\n        if (wheelnavTitle().isPathTitle(this.wheelnav.spreaderOutTitle)) {\r\n            outTitle = new wheelnavTitle(this.wheelnav.spreaderOutTitle, this.wheelnav.raphael.raphael);\r\n        }\r\n        else {\r\n            outTitle = new wheelnavTitle(this.wheelnav.spreaderOutTitle);\r\n        }\r\n        this.outTitleSizeTransform = outTitle.getTitleSizeTransform(this.outTitleWidth, this.outTitleHeight);\r\n        this.outTitle = outTitle.getTitlePercentAttr(this.spreaderPathOut.titlePosX, this.spreaderPathOut.titlePosY, this.outTitleWidth, this.outTitleHeight);\r\n\r\n        var currentTitle = this.outTitle;\r\n        var currentTitleAttr = this.wheelnav.spreaderTitleOutAttr;\r\n        var currentTitleWidth = this.outTitleWidth;\r\n        var currentTitleHeight = this.outTitleHeight;\r\n        var currentTitleSizeTransform = this.outTitleSizeTransform;\r\n        if (thisWheelNav.initPercent < thisWheelNav.maxPercent) {\r\n            currentTitle = this.inTitle;\r\n            currentTitleAttr = this.wheelnav.spreaderTitleInAttr;\r\n            currentTitleWidth = this.inTitleWidth;\r\n            currentTitleHeight = this.inTitleHeight;\r\n            currentTitleSizeTransform = this.inTitleSizeTransform;\r\n        }\r\n\r\n        if (wheelnavTitle().isPathTitle(this.wheelnav.spreaderOutTitle)) {\r\n            this.spreaderTitle = thisWheelNav.raphael.path(currentTitle.path);\r\n        }\r\n        else if (wheelnavTitle().isImageTitle(this.wheelnav.spreaderOutTitle)) {\r\n            this.spreaderTitle = this.wheelnav.raphael.image(currentTitle.src, currentPath.titlePosX - (currentTitleWidth / 2), currentPath.titlePosY - (currentTitleHeight / 2), currentTitleWidth, currentTitleHeight);\r\n        }\r\n        else {\r\n            this.spreaderTitle = thisWheelNav.raphael.text(currentPath.titlePosX, currentPath.titlePosY, currentTitle.title);\r\n        }\r\n        \r\n        this.spreaderTitle.attr(this.fontAttr);\r\n        this.spreaderTitle.attr(currentTitleAttr);\r\n        this.spreaderTitle.attr({ transform: currentTitleSizeTransform });\r\n        this.spreaderTitle.id = thisWheelNav.getSpreaderTitleId();\r\n        this.spreaderTitle.node.id = this.spreaderTitle.id;\r\n        this.spreaderTitle.click(function () {\r\n            thisWheelNav.spreadWheel();\r\n        });\r\n\r\n        this.setCurrentTransform();\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nspreader.prototype.setCurrentTransform = function (withoutAnimate) {\r\n    if (this.wheelnav.spreaderEnable) {\r\n\r\n        if (withoutAnimate === undefined ||\r\n            withoutAnimate === false) {\r\n            \r\n            if (this.wheelnav.currentPercent > this.wheelnav.minPercent) {\r\n                currentPath = this.spreaderPathOut.spreaderPathString;\r\n            }\r\n            else {\r\n                currentPath = this.spreaderPathIn.spreaderPathString;\r\n            }\r\n\r\n            spreaderTransformAttr = {\r\n                path: currentPath\r\n            };\r\n\r\n            //Animate spreader\r\n            this.spreaderPath.animate(spreaderTransformAttr, this.animatetime, this.animateeffect);\r\n\r\n            //titles\r\n            var currentTitle;\r\n            var titleTransformAttr;\r\n            var titleSizeTransform;\r\n\r\n            if (this.wheelnav.currentPercent === this.wheelnav.maxPercent) {\r\n                currentTitle = this.outTitle;\r\n                titleTransformAttr = this.wheelnav.spreaderTitleOutAttr;\r\n                this.spreaderPath.attr(this.wheelnav.spreaderPathOutAttr);\r\n                titleSizeTransform = this.outTitleSizeTransform;\r\n            }\r\n            else {\r\n                currentTitle = this.inTitle;\r\n                titleTransformAttr = this.wheelnav.spreaderTitleInAttr;\r\n                this.spreaderPath.attr(this.wheelnav.spreaderPathInAttr);\r\n                titleSizeTransform = this.inTitleSizeTransform;\r\n            }\r\n\r\n            if (wheelnavTitle().isPathTitle(currentTitle.title)) {\r\n                titleTransformAttr.path = currentTitle.path;\r\n                titleTransformAttr.transform = titleSizeTransform;\r\n            }\r\n            else if (wheelnavTitle().isImageTitle(currentTitle.title)) {\r\n                titleTransformAttr.x = currentTitle.x;\r\n                titleTransformAttr.y = currentTitle.y;\r\n                titleTransformAttr.width = currentTitle.width;\r\n                titleTransformAttr.height = currentTitle.height;\r\n                this.spreaderTitle.attr({ src: currentTitle.src });\r\n            }\r\n            else {\r\n                //Little hack for proper appearance of \"-\" sign\r\n                offYOffset = 0;\r\n                if (currentTitle.title === \"-\") { offYOffset = 3; };\r\n\r\n                titleTransformAttr.x = currentTitle.x;\r\n                titleTransformAttr.y = currentTitle.y - offYOffset;\r\n\r\n                if (currentTitle.title !== null) {\r\n                    this.spreaderTitle.attr({ text: currentTitle.title });\r\n                }\r\n            }\r\n\r\n            //Animate title\r\n            this.spreaderTitle.animate(titleTransformAttr, this.animatetime, this.animateeffect);\r\n        }\r\n\r\n        this.spreaderPath.toFront();\r\n        this.spreaderTitle.toFront();\r\n    }\r\n};\r\n\r\n///#source 1 1 /js/source/spreader/wheelnav.spreaderPathStart.js\r\n/* ======================================================================================= */\r\n/* Spreader path definitions.                                                              */\r\n/* ======================================================================================= */\r\n\r\nspreaderPath = function () {\r\n\r\n    this.NullSpreader = function (helper, custom) {\r\n\r\n        if (custom === null) {\r\n            custom = new spreaderPathCustomization();\r\n        }\r\n\r\n        helper.setBaseValue(custom.spreaderPercent, custom);\r\n\r\n        return {\r\n            spreaderPathString: \"\",\r\n            titlePosX: helper.titlePosX,\r\n            titlePosY: helper.titlePosY\r\n        };\r\n    };\r\n\r\n\r\n\r\n///#source 1 1 /js/source/spreader/wheelnav.spreaderPath.Pie.js\r\n\r\nthis.PieSpreaderCustomization = function () {\r\n\r\n    var custom = new spreaderPathCustomization();\r\n    custom.spreaderRadius = 25;\r\n    custom.arcBaseRadiusPercent = 1;\r\n    custom.arcRadiusPercent = 1;\r\n    custom.startRadiusPercent = 0;\r\n    return custom;\r\n};\r\n\r\nthis.PieSpreader = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = PieSpreaderCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(custom.spreaderPercent * percent, custom);\r\n\r\n    var arcBaseRadius = helper.sliceRadius * custom.arcBaseRadiusPercent;\r\n    var arcRadius = helper.sliceRadius * custom.arcRadiusPercent;\r\n\r\n    spreaderPathString = [];\r\n    helper.StartSpreader(spreaderPathString, helper.startAngle, arcBaseRadius);\r\n    spreaderPathString.push(helper.ArcTo(arcRadius, helper.middleAngle, arcBaseRadius));\r\n    spreaderPathString.push(helper.ArcTo(arcRadius, helper.endAngle, arcBaseRadius));\r\n    spreaderPathString.push(helper.Close());\r\n\r\n    return {\r\n        spreaderPathString: spreaderPathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY\r\n    };\r\n};\r\n\r\n///#source 1 1 /js/source/spreader/wheelnav.spreaderPath.Star.js\r\n\r\nthis.StarSpreaderCustomization = function () {\r\n\r\n    var custom = new spreaderPathCustomization();\r\n    custom.minRadiusPercent = 0.5;\r\n\r\n    return custom;\r\n};\r\n\r\nthis.StarSpreader = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = StarSpreaderCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(custom.spreaderPercent * percent, custom);\r\n    rbase = helper.wheelRadius * custom.spreaderPercent * custom.minRadiusPercent * percent;\r\n    r = helper.sliceRadius;\r\n\r\n    spreaderPathString = [];\r\n\r\n    sliceAngle = helper.sliceAngle / helper.navItemCount;\r\n    baseAngle = helper.navAngle;\r\n    if (helper.endAngle - helper.startAngle < 360) { baseAngle = helper.startAngle; }\r\n\r\n    helper.StartSpreader(spreaderPathString, baseAngle, r);\r\n\r\n    for (var i = 0; i < helper.navItemCount; i++) {\r\n        startAngle = i * sliceAngle + (baseAngle + sliceAngle / 2);\r\n        middleAngle = startAngle + (sliceAngle / 2);\r\n        endAngle = startAngle + sliceAngle;\r\n        if (helper.endAngle - helper.startAngle < 360) {\r\n            if (i === helper.navItemCount - 1) { endAngle = middleAngle; }\r\n        }\r\n        spreaderPathString.push(helper.LineTo(startAngle, rbase));\r\n        spreaderPathString.push(helper.LineTo(middleAngle, r));\r\n        spreaderPathString.push(helper.LineTo(endAngle, rbase));\r\n    }\r\n\r\n    spreaderPathString.push(helper.Close());\r\n\r\n    return {\r\n        spreaderPathString: spreaderPathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY\r\n    };\r\n};\r\n\r\n\r\n///#source 1 1 /js/source/spreader/wheelnav.spreaderPath.AntiStar.js\r\n\r\nthis.AntiStarSpreaderCustomization = function () {\r\n\r\n    var custom = new spreaderPathCustomization();\r\n    custom.minRadiusPercent = 0.21;\r\n\r\n    return custom;\r\n};\r\n\r\nthis.AntiStarSpreader = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = AntiStarSpreaderCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(custom.spreaderPercent * percent, custom);\r\n    rbase = helper.wheelRadius * custom.spreaderPercent * custom.minRadiusPercent * percent;\r\n    r = helper.sliceRadius;\r\n\r\n    spreaderPathString = [];\r\n\r\n    sliceAngle = helper.sliceAngle / helper.navItemCount;\r\n    baseAngle = helper.navAngle;\r\n    if (helper.endAngle - helper.startAngle < 360) {\r\n        baseAngle = helper.startAngle;\r\n        helper.StartSpreader(spreaderPathString, baseAngle, rbase);\r\n    }\r\n    else {\r\n        spreaderPathString.push(helper.MoveTo(helper.startAngle + (helper.navAngle + sliceAngle / 2), rbase));\r\n    }\r\n\r\n    for (var i = 0; i < helper.navItemCount; i++) {\r\n        startAngle = i * sliceAngle + (baseAngle + sliceAngle / 2);\r\n        middleAngle = startAngle + (sliceAngle / 2);\r\n        endAngle = startAngle + sliceAngle;\r\n\r\n        if (helper.endAngle - helper.startAngle < 360) {\r\n            if (i === helper.navItemCount - 1) { endAngle = middleAngle; }\r\n        }\r\n\r\n        spreaderPathString.push(helper.LineTo(startAngle, r));\r\n        spreaderPathString.push(helper.LineTo(middleAngle, rbase));\r\n        spreaderPathString.push(helper.LineTo(endAngle, r));\r\n    }\r\n\r\n    spreaderPathString.push(helper.Close());\r\n\r\n    return {\r\n        spreaderPathString: spreaderPathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY\r\n    };\r\n};\r\n\r\n\r\n///#source 1 1 /js/source/spreader/wheelnav.spreaderPath.Flower.js\r\n\r\nthis.FlowerSpreaderCustomization = function () {\r\n\r\n    var custom = new spreaderPathCustomization();\r\n    custom.minRadiusPercent = 0.63\r\n    custom.menuRadius = 7;;\r\n\r\n    return custom;\r\n};\r\n\r\nthis.FlowerSpreader = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = FlowerSpreaderCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(custom.spreaderPercent * percent, custom);\r\n    rbase = helper.wheelRadius * custom.spreaderPercent * custom.minRadiusPercent * percent;\r\n    r = helper.sliceRadius;\r\n\r\n    spreaderPathString = [];\r\n\r\n    sliceAngle = helper.sliceAngle / helper.navItemCount;\r\n    baseAngle = helper.navAngle;\r\n    if (helper.endAngle - helper.startAngle < 360) {\r\n        baseAngle = helper.startAngle;\r\n        helper.StartSpreader(spreaderPathString, baseAngle, rbase);\r\n    }\r\n    else {\r\n        spreaderPathString.push(helper.MoveTo(helper.startAngle + (helper.navAngle + sliceAngle / 2), rbase));\r\n    }\r\n    \r\n    for (var i = 0; i < helper.navItemCount; i++) {\r\n        startAngle = i * sliceAngle + (baseAngle + sliceAngle / 2);\r\n        middleAngle = startAngle + (sliceAngle / 2);\r\n        endAngle = startAngle + sliceAngle;\r\n\r\n        if (helper.endAngle - helper.startAngle < 360) {\r\n            if (i === 0) { spreaderPathString.push(helper.ArcTo(custom.menuRadius, startAngle, rbase)); }\r\n            if (i === helper.navItemCount - 1) { endAngle = middleAngle; }\r\n        }\r\n        else {\r\n            spreaderPathString.push(helper.LineTo(startAngle, rbase));\r\n        }\r\n\r\n        spreaderPathString.push(helper.ArcTo(custom.menuRadius, endAngle, rbase));\r\n    }\r\n\r\n    spreaderPathString.push(helper.Close());\r\n\r\n    return {\r\n        spreaderPathString: spreaderPathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY\r\n    };\r\n};\r\n\r\n\r\n///#source 1 1 /js/source/spreader/wheelnav.spreaderPath.Holder.js\r\n\r\nthis.HolderSpreaderCustomization = function () {\r\n\r\n    var custom = new spreaderPathCustomization();\r\n    custom.minRadiusPercent = 0.5;\r\n    custom.menuRadius = 37;\r\n\r\n    return custom;\r\n};\r\n\r\nthis.HolderSpreader = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = HolderSpreaderCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(custom.spreaderPercent * percent, custom);\r\n    rbase = helper.wheelRadius * custom.spreaderPercent * custom.minRadiusPercent * percent;\r\n    r = helper.sliceRadius;\r\n\r\n    spreaderPathString = [];\r\n\r\n    sliceAngle = helper.sliceAngle / helper.navItemCount;\r\n    baseAngle = helper.navAngle;\r\n    if (helper.endAngle - helper.startAngle < 360) {\r\n        baseAngle = helper.startAngle;\r\n        helper.StartSpreader(spreaderPathString, baseAngle, rbase);\r\n    }\r\n    else {\r\n        spreaderPathString.push(helper.MoveTo(helper.startAngle + (helper.navAngle + sliceAngle / 2), rbase));\r\n    }\r\n\r\n    for (var i = 0; i < helper.navItemCount; i++) {\r\n        startAngle = i * sliceAngle + (baseAngle + sliceAngle / 2);\r\n        middleAngle = startAngle + (sliceAngle / 4);\r\n        endAngle = startAngle + sliceAngle;\r\n\r\n        if (helper.endAngle - helper.startAngle < 360) {\r\n            if (i === helper.navItemCount - 1) { endAngle = middleAngle; }\r\n        }\r\n        else {\r\n            spreaderPathString.push(helper.LineTo(startAngle, rbase));\r\n        }\r\n\r\n        spreaderPathString.push(helper.LineTo(startAngle, r));\r\n        spreaderPathString.push(helper.ArcBackTo(custom.menuRadius, middleAngle, rbase));\r\n        spreaderPathString.push(helper.ArcTo(custom.menuRadius, endAngle, r));\r\n    }\r\n\r\n    spreaderPathString.push(helper.Close());\r\n\r\n    return {\r\n        spreaderPathString: spreaderPathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY\r\n    };\r\n};\r\n\r\n\r\n///#source 1 1 /js/source/spreader/wheelnav.spreaderPath.Line.js\r\n\r\nthis.LineSpreaderCustomization = function () {\r\n\r\n    var custom = new spreaderPathCustomization();\r\n    custom.minRadiusPercent = 0.5;\r\n\r\n    return custom;\r\n};\r\n\r\nthis.LineSpreader = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = LineSpreaderCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(custom.spreaderPercent * percent, custom);\r\n    rbase = helper.wheelRadius * custom.spreaderPercent * custom.minRadiusPercent * percent;\r\n    r = helper.sliceRadius;\r\n\r\n    spreaderPathString = [];\r\n\r\n    sliceAngle = helper.sliceAngle / helper.navItemCount;\r\n    baseAngle = helper.navAngle;\r\n    if (helper.endAngle - helper.startAngle < 360) { baseAngle = helper.startAngle; }\r\n\r\n    spreaderPathString.push(helper.MoveTo(baseAngle + sliceAngle / 2, r));\r\n\r\n    for (var i = 0; i < helper.navItemCount; i++) {\r\n        startAngle = i * sliceAngle + (baseAngle + sliceAngle / 2);\r\n        endAngle = startAngle + sliceAngle;\r\n        if (helper.navItemCount === 2) {\r\n            endAngle -= 90;\r\n        }\r\n\r\n        spreaderPathString.push(helper.LineTo(startAngle, r));\r\n        spreaderPathString.push(helper.LineTo(endAngle, r));\r\n    }\r\n\r\n    spreaderPathString.push(helper.Close());\r\n\r\n    return {\r\n        spreaderPathString: spreaderPathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY\r\n    };\r\n};\r\n\r\n\r\n///#source 1 1 /js/source/spreader/wheelnav.spreaderPathEnd.js\r\n\r\n    return this;\r\n};\r\n\r\n\r\n\r\n","///#source 1 1 /js/source/marker/wheelnav.marker.core.js\r\n/* ======================================================================================= */\r\n/* Marker of wheel                                                                         */\r\n/* ======================================================================================= */\r\n/* ======================================================================================= */\r\n/* Documentation: http://wheelnavjs.softwaretailoring.net/documentation/marker.html        */\r\n/* ======================================================================================= */\r\n\r\nmarker = function (wheelnav) {\r\n\r\n    this.wheelnav = wheelnav;\r\n    if (this.wheelnav.markerEnable) {\r\n\r\n        this.markerHelper = new pathHelper();\r\n        this.markerHelper.centerX = this.wheelnav.centerX;\r\n        this.markerHelper.centerY = this.wheelnav.centerY;\r\n        this.markerHelper.navItemCount = this.wheelnav.navItemCount;\r\n        this.markerHelper.navAngle = this.wheelnav.navAngle;\r\n        this.markerHelper.wheelRadius = this.wheelnav.wheelRadius * this.wheelnav.maxPercent;\r\n        this.markerHelper.sliceAngle = this.wheelnav.navItems[0].sliceAngle;\r\n        this.markerHelper.startAngle = this.markerHelper.navAngle - (this.markerHelper.sliceAngle / 2);\r\n\r\n        this.animateeffect = \"bounce\";\r\n        this.animatetime = 1500;\r\n        //Set animation from wheelnav\r\n        if (this.wheelnav.animateeffect !== null) { this.animateeffect = this.wheelnav.animateeffect; }\r\n        if (this.wheelnav.animatetime !== null) { this.animatetime = this.wheelnav.animatetime; }\r\n\r\n        this.markerPathMin = this.wheelnav.markerPathFunction(this.markerHelper, this.wheelnav.minPercent, this.wheelnav.markerPathCustom);\r\n        this.markerPathMax = this.wheelnav.markerPathFunction(this.markerHelper, this.wheelnav.maxPercent, this.wheelnav.markerPathCustom);\r\n        this.marker = this.wheelnav.raphael.path(this.markerPathMax.markerPathString);\r\n        this.marker.attr(this.wheelnav.markerAttr);\r\n        this.marker.id = this.wheelnav.getMarkerId();\r\n        this.marker.node.id = this.marker.id;\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nmarker.prototype.setCurrentTransform = function (navAngle) {\r\n\r\n    if (this.wheelnav.markerEnable) {\r\n        var currentPath = \"\";\r\n\r\n        if (this.wheelnav.currentPercent === this.wheelnav.maxPercent) {\r\n            currentPath = this.markerPathMax.markerPathString;\r\n        }\r\n        else {\r\n            currentPath = this.markerPathMin.markerPathString;\r\n        }\r\n\r\n        if (navAngle !== undefined) {\r\n            var rotationAngle = navAngle - this.markerHelper.navAngle;\r\n\r\n            markerTransformAttr = {\r\n                transform: \"r,\" + (rotationAngle).toString() + \",\" + this.wheelnav.centerX + \",\" + this.wheelnav.centerY,\r\n                path: currentPath\r\n            };\r\n        }\r\n        else {\r\n            markerTransformAttr = {\r\n                path: currentPath\r\n            };\r\n        }\r\n\r\n        //Animate marker\r\n        this.marker.animate(markerTransformAttr, this.animatetime, this.animateeffect);\r\n        this.marker.toFront();\r\n    }\r\n};\r\n\r\n\r\n\r\n///#source 1 1 /js/source/marker/wheelnav.markerPathStart.js\r\n/* ======================================================================================= */\r\n/* Marker path definitions.                                                                */\r\n/* ======================================================================================= */\r\n\r\nmarkerPath = function () {\r\n\r\n    this.NullMarker = function (helper, custom) {\r\n\r\n        if (custom === null) {\r\n            custom = new markerPathCustomization();\r\n        }\r\n\r\n        helper.setBaseValue(custom);\r\n\r\n        return {\r\n            markerPathString: \"\",\r\n            titlePosX: helper.titlePosX,\r\n            titlePosY: helper.titlePosY\r\n        };\r\n    };\r\n\r\n\r\n\r\n///#source 1 1 /js/source/marker/wheelnav.markerPath.Triangle.js\r\n\r\nthis.TriangleMarkerCustomization = function () {\r\n\r\n    var custom = new markerPathCustomization();\r\n    custom.arcBaseRadiusPercent = 1.09;\r\n    custom.arcRadiusPercent = 1.2;\r\n    custom.startRadiusPercent = 0;\r\n    return custom;\r\n};\r\n\r\nthis.TriangleMarker = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = TriangleMarkerCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(custom.markerPercent * percent, custom);\r\n\r\n    var arcBaseRadius = helper.sliceRadius * custom.arcBaseRadiusPercent;\r\n    var arcRadius = helper.sliceRadius * custom.arcRadiusPercent;\r\n    var startAngle = helper.startAngle + helper.sliceAngle * 0.46;\r\n    var endAngle = helper.startAngle + helper.sliceAngle * 0.54;\r\n\r\n    markerPathString = [helper.MoveTo(helper.navAngle, arcBaseRadius),\r\n                 helper.LineTo(startAngle, arcRadius),\r\n                 helper.LineTo(endAngle, arcRadius),\r\n                 helper.Close()];\r\n    \r\n    return {\r\n        markerPathString: markerPathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY\r\n    };\r\n};\r\n\r\n\r\n///#source 1 1 /js/source/marker/wheelnav.markerPath.PieLine.js\r\n\r\nthis.PieLineMarkerCustomization = function () {\r\n\r\n    var custom = new markerPathCustomization();\r\n    custom.arcBaseRadiusPercent = 1;\r\n    custom.arcRadiusPercent = 1;\r\n    custom.startRadiusPercent = 0;\r\n    custom.sliceAngle = null;\r\n    return custom;\r\n};\r\n\r\nthis.PieLineMarker = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = PieLineMarkerCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(custom.markerPercent * percent, custom);\r\n\r\n    var arcBaseRadius = helper.sliceRadius * custom.arcBaseRadiusPercent;\r\n    var arcRadius = helper.sliceRadius * custom.arcRadiusPercent;\r\n\r\n    if (custom.sliceAngle !== null) {\r\n        helper.startAngle = helper.navAngle - (custom.sliceAngle / 2);\r\n        helper.endAngle = helper.navAngle + (custom.sliceAngle / 2);\r\n    }\r\n\r\n    markerPathString = [helper.MoveTo(helper.startAngle, arcBaseRadius),\r\n                 helper.ArcTo(arcRadius, helper.endAngle, arcBaseRadius),\r\n                 helper.ArcBackTo(arcRadius, helper.startAngle, arcBaseRadius),\r\n                 helper.Close()];\r\n\r\n    return {\r\n        markerPathString: markerPathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n///#source 1 1 /js/source/marker/wheelnav.markerPath.Menu.js\r\n\r\nthis.MenuMarkerCustomization = function () {\r\n\r\n    var custom = new markerPathCustomization();\r\n    custom.menuRadius = 40;\r\n    custom.titleRadiusPercent = 0.63;\r\n    custom.lineBaseRadiusPercent = 0;\r\n    return custom;\r\n};\r\n\r\nthis.MenuMarker = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = MenuMarkerCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(custom.markerPercent * percent, custom);\r\n\r\n    x = helper.centerX;\r\n    y = helper.centerY;\r\n\r\n    helper.titleRadius = helper.wheelRadius * custom.titleRadiusPercent * percent;\r\n    helper.setTitlePos();\r\n\r\n    var menuRadius = custom.menuRadius * percent;\r\n    if (percent <= 0.05) { menuRadius = 11; }\r\n\r\n    middleTheta = helper.middleTheta;\r\n\r\n    markerPathString = [[\"M\", helper.titlePosX - (menuRadius * Math.cos(middleTheta)), helper.titlePosY - (menuRadius * Math.sin(middleTheta))],\r\n                [\"A\", menuRadius, menuRadius, 0, 0, 1, helper.titlePosX + (menuRadius * Math.cos(middleTheta)), helper.titlePosY + (menuRadius * Math.sin(middleTheta))],\r\n                [\"A\", menuRadius, menuRadius, 0, 0, 1, helper.titlePosX - (menuRadius * Math.cos(middleTheta)), helper.titlePosY - (menuRadius * Math.sin(middleTheta))],\r\n                [\"z\"]];\r\n    \r\n    return {\r\n        markerPathString: markerPathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY\r\n    };\r\n};\r\n\r\n\r\n///#source 1 1 /js/source/marker/wheelnav.markerPath.Line.js\r\n\r\nthis.LineMarkerCustomization = function () {\r\n\r\n    var custom = new markerPathCustomization();\r\n    custom.arcBaseRadiusPercent = 1.05;\r\n    custom.arcRadiusPercent = 1.2;\r\n    custom.startRadiusPercent = 0;\r\n    return custom;\r\n};\r\n\r\nthis.LineMarker = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = LineMarkerCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(custom.markerPercent * percent, custom);\r\n\r\n    var arcBaseRadius = helper.sliceRadius * custom.arcBaseRadiusPercent;\r\n    var arcRadius = helper.sliceRadius * custom.arcRadiusPercent;\r\n\r\n    markerPathString = [helper.MoveTo(helper.navAngle, arcBaseRadius),\r\n                 helper.LineTo(helper.navAngle, arcRadius),\r\n                 helper.Close()];\r\n    \r\n    return {\r\n        markerPathString: markerPathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY\r\n    };\r\n};\r\n\r\n\r\n///#source 1 1 /js/source/marker/wheelnav.markerPath.Drop.js\r\n\r\nthis.DropMarkerCustomization = function () {\r\n\r\n    var custom = new markerPathCustomization();\r\n    custom.dropBaseRadiusPercent = 0;\r\n    custom.dropRadiusPercent = 0.15;\r\n    return custom;\r\n};\r\n\r\nthis.DropMarker = function (helper, percent, custom) {\r\n\r\n    if (custom === null) {\r\n        custom = DropMarkerCustomization();\r\n    }\r\n\r\n    helper.setBaseValue(custom.markerPercent * percent, custom);\r\n\r\n    var arcBaseRadius = helper.sliceRadius * custom.dropBaseRadiusPercent;\r\n    var startAngle = helper.startAngle + helper.sliceAngle * 0.2;\r\n    var startAngle2 = helper.startAngle;\r\n    var endAngle = helper.startAngle + helper.sliceAngle * 0.8;\r\n    var endAngle2 = helper.startAngle + helper.sliceAngle;\r\n    var dropRadius = helper.sliceRadius * custom.dropRadiusPercent;\r\n\r\n    markerPathString = [helper.MoveTo(0, dropRadius),\r\n        helper.ArcTo(dropRadius, 180, dropRadius),\r\n        helper.ArcTo(dropRadius, 360, dropRadius),\r\n        helper.MoveTo(helper.navAngle, arcBaseRadius),\r\n                helper.LineTo(startAngle, dropRadius),\r\n                 helper.LineTo(startAngle2, dropRadius),\r\n                 helper.LineTo(helper.navAngle, dropRadius * 1.6),\r\n                helper.LineTo(endAngle2, dropRadius),\r\n                 helper.LineTo(endAngle, dropRadius),\r\n                 helper.Close()];\r\n    return {\r\n        markerPathString: markerPathString,\r\n        titlePosX: helper.titlePosX,\r\n        titlePosY: helper.titlePosY\r\n    };\r\n};\r\n\r\n\r\n///#source 1 1 /js/source/marker/wheelnav.markerPathEnd.js\r\n\r\n    return this;\r\n};\r\n\r\n\r\n\r\n","/* ======================================================================================== */\r\n/* Color palettes for slices from http://www.colourlovers.com                               */\r\n/* ======================================================================================== */\r\n/* ======================================================================================== */\r\n/* Documentation: http://wheelnavjs.softwaretailoring.net/documentation/colorPalettes.html  */\r\n/* ======================================================================================== */\r\n\r\nvar colorpalette = {\r\n    defaultpalette: new Array(\"#2D9E46\", \"#F5BE41\", \"#F77604\", \"#D63C22\", \"#006BA6\", \"#92ADAF\"),\r\n    purple: new Array(\"#4F346B\", \"#623491\", \"#9657D6\", \"#AD74E7\", \"#CBA3F3\"),\r\n    greenred: new Array(\"#17B92A\", \"#FF3D00\", \"#17B92A\", \"#FF3D00\"),\r\n    greensilver: new Array(\"#1F700A\", \"#79CC3C\", \"#D4E178\", \"#E6D5C3\", \"#AC875D\"),\r\n    oceanfive: new Array(\"#00A0B0\", \"#6A4A3C\", \"#CC333F\", \"#EB6841\", \"#EDC951\"),\r\n    garden: new Array(\"#648A4F\", \"#2B2B29\", \"#DF6126\", \"#FFA337\", \"#F57C85\"),\r\n    gamebookers: new Array(\"#FF9900\", \"#DCDCDC\", \"#BCBCBC\", \"#3299BB\", \"#727272\"),\r\n    parrot: new Array(\"#D80351\", \"#F5D908\", \"#00A3EE\", \"#929292\", \"#3F3F3F\"),\r\n    pisycholand: new Array(\"#FF1919\", \"#FF5E19\", \"#FF9F19\", \"#E4FF19\", \"#29FF19\"),\r\n    makeLOVEnotWAR: new Array(\"#2C0EF0\", \"#B300FF\", \"#6751F0\", \"#FF006F\", \"#8119FF\"),\r\n    theworldismine: new Array(\"#F21D1D\", \"#FF2167\", \"#B521FF\", \"#7E2AA8\", \"#000000\"),\r\n    fractalloveone: new Array(\"#002EFF\", \"#00FFF7\", \"#00FF62\", \"#FFAA00\", \"#FFF700\"),\r\n    fractallovetwo: new Array(\"#FF9500\", \"#FF0000\", \"#FF00F3\", \"#AA00FF\", \"#002EFF\"),\r\n    fractallove: new Array(\"#002EFF\", \"#00FFF7\", \"#00FF62\", \"#FFAA00\", \"#F5D908\", \"#FF0000\", \"#FF00F3\", \"#AA00FF\"),\r\n    sprinkles: new Array(\"#272523\", \"#FFACAC\", \"#FFD700\", \"#00590C\", \"#08006D\"),\r\n    goldenyellow: new Array(\"#D8B597\", \"#8C4006\", \"#B6690F\", \"#E3C57F\", \"#FFEDBE\"),\r\n    hotaru: new Array(\"#364C4A\", \"#497C7F\", \"#92C5C0\", \"#858168\", \"#CCBCA5\")\r\n};"]}